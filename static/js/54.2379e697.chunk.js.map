{"version":3,"sources":["views/pages/login/Login.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/user.js"],"names":["connect","state","isAuthenticated","userReducer","userLogin","props","useState","username","setUsername","password","setPassword","to","className","md","src","process","height","name","type","value","onChange","e","target","placeholder","autoComplete","xs","color","onClick","fd","FormData","append","handleSubmit","style","width","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError","path","API_PATH_SETTING","getUserdropdowns","MAIN_TOKEN","params","dispatch","getState","axios","get","axiosConfig","then","res","USER_GET_DROPDOWNS","payload","data","catch","USER_GET_DROPDOWNS_ERROR","getUserTerms","USER_GET_TERM","USER_GET_TERM_ERROR","getUserSchools","USER_GET_SCHOOL","USER_GET_SCHOOL_ERROR","getUserDatas","USER_GET_DATA","USER_GET_DATA_ERROR","USER_LOADING","console","log","post","axiosConfig1","USER_LOGIN","token","USER_LOGIN_ERROR","userLogout","USER_LOGOUT_SUCCESS","settTerm","USER_SET_TERM","settSchool","USER_SET_SCHOOL","updateUser","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL"],"mappings":"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","file":"static/js/54.2379e697.chunk.js","sourcesContent":["import React, { useState} from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom'\nimport { userLogin } from './../../../actions/user'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nconst Login = (props) => {\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleSubmit = () =>{\n     \n      let fd = new FormData()\n      fd.append('username', username)\n      fd.append('password', password)\n      fd.append('cat', 'login')\n      fd.append('table', 'staffs')\n      props.userLogin(fd)\n  }\n \n  if(props.isAuthenticated === true)\n  {\n    return <Redirect to='/main' />\n  }\n\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1><img src={process.env.PUBLIC_URL + process.env.REACT_APP_LOGO1} height='50px'/>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput \n                      type=\"text\" \n                      value={username} \n                      onChange={(e)=>setUsername(e.target.value)} placeholder=\"Staff ID\" autoComplete=\"username\" />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput \n                      type=\"password\" \n                      value={password} \n                      onChange={(e)=>setPassword(e.target.value)} placeholder=\"Password\" autoComplete=\"current-password\" />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton color=\"primary\" onClick={()=>handleSubmit()} className=\"px-4\">Login</CButton>\n                      </CCol>\n                      <CCol xs=\"6\" className=\"text-right\">\n                        \n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <img\n                      src={process.env.PUBLIC_URL + process.env.REACT_APP_LOGO2} \n                      height='170px'\n                    />\n                    <h4>Education</h4>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\nconst mapStateToProps = (state) =>({\n  isAuthenticated:state.userReducer.isAuthenticated\n})\nexport default connect( mapStateToProps,{userLogin})(Login)\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    USER_LOGIN,\r\n    USER_LOGIN_ERROR,\r\n    USER_LOGOUT_SUCCESS,\r\n    USER_LOGOUT_FAIL,\r\n    USER_GET_ONE,\r\n    USER_CHANGE_ONE,\r\n    USER_GET_DROPDOWNS,\r\n    USER_GET_DATA,\r\n    USER_GET_SCHOOL,\r\n    USER_GET_TERM,\r\n    USER_GET_DROPDOWNS_ERROR,\r\n    USER_GET_DATA_ERROR,\r\n    USER_GET_SCHOOL_ERROR,\r\n    USER_GET_TERM_ERROR,\r\n    USER_SET_TERM,\r\n    USER_SET_SCHOOL,\r\n    USER_GET_MULTIPLE,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_LOADING,\r\n    USER_LOADING_ERROR,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_EDIT,\r\n} from \"../types/user\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig, axiosConfig1 } from './common';\r\n\r\nlet TABLE_NAME = 'user_types';\r\nconst path = API_PATH_SETTING;\r\n\r\nlet params = {\r\n    data:{},\r\n    cat:'all',\r\n    table:TABLE_NAME,\r\n    token:MAIN_TOKEN\r\n  }\r\n//GET ALL USER \r\nexport const getUsers = params => (dispatch, getState) => {\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: USER_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : USER_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL DROPDOWNS\r\nexport const getUserdropdowns = params => (dispatch, getState) => {\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: USER_GET_DROPDOWNS,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : USER_GET_DROPDOWNS_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL TERMS\r\nexport const getUserTerms = params => (dispatch, getState) => { \r\n    axios.get(path, {params}, axiosConfig)\r\n        .then(res => {                                                                                                                                                                                                                                        \r\n            dispatch({\r\n                type: USER_GET_TERM,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : USER_GET_TERM_ERROR,\r\n                payload:err\r\n            })\r\n        })\r\n};\r\n//GET ALL SCHOOLS\r\nexport const getUserSchools = params => (dispatch, getState) => { \r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: USER_GET_SCHOOL,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : USER_GET_SCHOOL_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL DATA\r\nexport const getUserDatas = params => (dispatch, getState) => {\r\n   \r\n    axios.get(path, {params}, axiosConfig)\r\n        .then(res => {                                                                                                                                                                                                                                        \r\n            dispatch({\r\n                type: USER_GET_DATA,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : USER_GET_DATA_ERROR,\r\n                payload:err\r\n            })\r\n        })\r\n};\r\nexport const userLogin = data => (dispatch, getState) => {\r\n    dispatch({type : USER_LOADING});\r\n    console.log(path, data)\r\n        axios.post(path, data, axiosConfig1)\r\n            .then(res => {                                                                                                                                                                                                                                      \r\n                dispatch({\r\n                    type: USER_LOGIN,\r\n                    payload: res.data.data,\r\n                    token: res.data.token\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : USER_LOGIN_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\nexport const userLogout = () => (dispatch, getState) => {\r\n    dispatch({\r\n        type: USER_LOGOUT_SUCCESS\r\n    })\r\n       \r\n};\r\n\r\n//GET SINGLE USER \r\nexport const getUser = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : USER_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n\r\n//SET SESSION\r\nexport const settTerm = data => (dispatch, getState) => {\r\n    dispatch(\r\n        {\r\n        type : USER_SET_TERM,\r\n        payload: data\r\n        });  \r\n};\r\n//SET SCHOOL\r\nexport const settSchool = data => (dispatch, getState) => {\r\n    dispatch(\r\n        {\r\n        type : USER_SET_SCHOOL,\r\n        payload: data\r\n    });  \r\n};\r\n//USER DELETE\r\nexport const deleteUser = data => (dispatch, getState) =>{\r\n    dispatch({type : USER_LOADING});\r\n    axios.get(path, JSON.stringify({data}), {params})\r\n        .then(res => {\r\n            dispatch({\r\n                type: USER_DELETE_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : USER_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n\r\n//USER REGISTER\r\nexport const registerUser = data => dispatch => {\r\n    dispatch({type : USER_LOADING});\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: USER_REGISTER_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : USER_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n\r\n//USER REGISTER\r\nexport const registerUserPost = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: USER_LOGIN,\r\n                payload: res.data.data,\r\n                token: res.data.token\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : USER_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //USER UPDATE\r\nexport const updateUser = params => (dispatch, getState) => {\r\n    //body\r\n \r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: USER_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : USER_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n"],"sourceRoot":""}