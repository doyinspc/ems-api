{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/setting/clasz.js","actions/setting/theme.js","views/setting/Theme.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","path","API_PATH_SETTING","getClaszs","params","dispatch","getState","token","MAIN_TOKEN","table","type","CLASZ_LOADING","axios","get","axiosConfig","then","res","CLASZ_GET_MULTIPLE","payload","data","catch","CLASZ_LOADING_ERROR","getClasz","id","CLASZ_GET_ONE","deleteClasz","POST","CLASZ_DELETE_SUCCESS","CLASZ_DELETE_FAIL","registerClasz","post","axiosConfig1","CLASZ_REGISTER_SUCCESS","CLASZ_REGISTER_FAIL","updateClasz","CLASZ_UPDATE_SUCCESS","CLASZ_UPDATE_FAIL","TABLE_NAME","getThemes","THEME_LOADING","THEME_GET_MULTIPLE","THEME_LOADING_ERROR","getThemesummary","THEME_GET_SUMMARY","getTheme","THEME_GET_ONE","deleteTheme","THEME_DELETE_SUCCESS","THEME_DELETE_FAIL","registerTheme","THEME_REGISTER_SUCCESS","THEME_REGISTER_FAIL","updateTheme","THEME_UPDATE_SUCCESS","THEME_UPDATE_FAIL","connect","state","themes","themeReducer","subjects","subjectReducer","claszs","claszReducer","school","schoolReducer","props","subjectid","useParams","theme","departmentid","subject","history","useHistory","useLocation","search","match","useState","collapse","setCollapse","setId","dts","setDts","moduleid","setModuleid","namez","setNamez","topic","claszid","setClaszid","objective","setObjective","content","setContent","contentind","setContentind","objectiveind","setObjectiveind","useEffect","JSON","stringify","cat","narration","params1","parseInt","dt","name","parse","setElement","onReset","loadContent","num","inde","con","c","filter","rw","loadObjective","deparr","subjectname","clarray","map","ind","key","tabl","row","style","textTransform","sm","className","pp","im","color","is_active","size","onClick","item","nu","fd","FormData","append","onActivate","data-target","data-toggle","e","preventDefault","show","xl","action","method","htmlFor","module","defaultValue","onChange","target","placeholder","prp","maxWidth","xs","wordWrap"],"mappings":"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","file":"static/js/15.036eb047.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    CLASZ_GET_ONE,\r\n    CLASZ_GET_MULTIPLE,\r\n    CLASZ_REGISTER_SUCCESS,\r\n    CLASZ_REGISTER_FAIL,\r\n    CLASZ_LOADING,\r\n    CLASZ_LOADING_ERROR,\r\n    CLASZ_UPDATE_SUCCESS,\r\n    CLASZ_UPDATE_FAIL,\r\n    CLASZ_DELETE_SUCCESS,\r\n    CLASZ_DELETE_FAIL\r\n} from \"../../types/setting/clasz\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'claszs';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CLASZ \r\nexport const getClaszs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : CLASZ_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CLASZ_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CLASZ_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CLASZ \r\nexport const getClasz = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CLASZ_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CLASZ DELETE\r\nexport const deleteClasz = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CLASZ REGISTER\r\nexport const registerClasz = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CLASZ UPDATE\r\nexport const updateClasz = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    THEME_GET_ONE,\r\n    THEME_GET_MULTIPLE,\r\n    THEME_GET_SUMMARY,\r\n    THEME_GET_DROPDOWNS,\r\n    THEME_REGISTER_SUCCESS,\r\n    THEME_REGISTER_FAIL,\r\n    THEME_LOADING,\r\n    THEME_LOADING_ERROR,\r\n    THEME_UPDATE_SUCCESS,\r\n    THEME_UPDATE_FAIL,\r\n    THEME_DELETE_SUCCESS,\r\n    THEME_DELETE_FAIL\r\n} from \"../../types/setting/theme\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'themes';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL THEME \r\nexport const getThemes = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : THEME_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: THEME_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : THEME_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL THEME \r\nexport const getThemesummary = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = 'themesummary';\r\n\r\n    dispatch({type : THEME_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: THEME_GET_SUMMARY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : THEME_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET ALL THEME \r\nexport const getThemedropdowns = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : THEME_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: THEME_GET_DROPDOWNS,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : THEME_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE THEME \r\nexport const getTheme = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : THEME_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//THEME DELETE\r\nexport const deleteTheme = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: THEME_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : THEME_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//THEME REGISTER\r\nexport const registerTheme = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: THEME_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : THEME_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //THEME UPDATE\r\nexport const updateTheme = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: THEME_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : THEME_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getThemes, getTheme, registerTheme, updateTheme, deleteTheme} from './../../actions/setting/theme';\r\nimport {getClaszs} from './../../actions/setting/clasz';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CCollapse,\r\n  CFormText,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n  CSelect,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CInputGroup,\r\n  CInputGroupAppend,\r\n  CInputGroupPrepend\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { setElement } from '../../actions/common';\r\nimport department from '../../reducers/setting/department';\r\n\r\n\r\n\r\nconst Theme = (props) => {\r\n  const subjectid = useParams().theme\r\n  const departmentid = useParams().subject\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [dts, setDts] = useState('')\r\n  const [moduleid, setModuleid ]= useState('')\r\n  const [namez, setNamez] = useState('')\r\n  const [topic, setTopic] = useState('')\r\n  const [claszid, setClaszid] = useState()\r\n  const [objective, setObjective] = useState([])\r\n  const [content, setContent] = useState([])\r\n  const [contentind, setContentind] = useState('')\r\n  const [objectiveind, setObjectiveind] = useState('')\r\n \r\n  const toggle = (e) => {\r\n    setCollapse(!collapse)\r\n    e.preventDefault()\r\n  }\r\n//GET THEMES PER SCHOOL\r\n  useEffect(() => {\r\n    let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'subjectid':subjectid\r\n      }),\r\n      cat:'select',\r\n      table:'themes',\r\n      narration:'get themes'\r\n    }\r\n    props.getThemes(params)\r\n    let params1 = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid': props.school.id\r\n      }),\r\n      cat:'select',\r\n      table:'claszs',\r\n      narration:'get claszs'\r\n    }\r\n    props.getClaszs(params1);\r\n    \r\n  }, [subjectid, props.school.id])\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(id && parseInt(id) > 0)\r\n    {\r\n      let dt = dts;\r\n      setNamez(dt.name);\r\n      setNamez(dt.topic);\r\n      setClaszid(dt.claszid);\r\n      setObjective(JSON.parse(dt.objective));\r\n      setContent(JSON.parse(dt.content));\r\n      setElement('nf-claszid', dt.claszid )\r\n    }else{\r\n      setNamez('');\r\n      setClaszid('');\r\n      setObjective([]);\r\n      setContent([]);\r\n    }\r\n    \r\n  }, [id])\r\n\r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onActivate = (rw, num) =>{\r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    props.updateTheme(fd);\r\n  }\r\n  const onReset = () =>setId(null);\r\n  const onClose = () =>setCollapse(false);\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('topic', topic);\r\n      fd.append('claszid', claszid);\r\n      fd.append('moduleid', moduleid);\r\n      fd.append('objective', JSON.stringify(objective));\r\n      fd.append('content', JSON.stringify(content));\r\n      fd.append('checker', 'A'+subjectid+'_B'+claszid);\r\n      fd.append('table', 'themes');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateTheme(fd)\r\n        \r\n      }else if(subjectid && parseInt(subjectid) > 0)\r\n      {\r\n        //INSERT\r\n        fd.append('subjectid', subjectid);\r\n        fd.append('cat', 'insert');\r\n        props.registerTheme(fd)\r\n      }\r\n      onReset()\r\n    }\r\n  }\r\n  const loadContent = (num, inde, dt) =>{\r\n    let con = [...content];\r\n\r\n      if(num === 0)\r\n      {\r\n        let d =  con.push(contentind);\r\n        setContent(con)\r\n        setContentind('');\r\n      }\r\n      if(num === 1)\r\n      {\r\n        \r\n        let cons = [...content];\r\n        let c = cons[inde];\r\n        setContentind(c);\r\n      }\r\n      if(num === 2)\r\n      {\r\n        let cons = [...content];\r\n        let c = cons.filter(rw=>rw !== dt);\r\n        setContent(c)\r\n        setContentind('');\r\n      }\r\n\r\n      \r\n  }\r\n  const loadObjective = (num, inde, dt) =>{\r\n    let con = [...objective];\r\n      if(num === 0)\r\n      {\r\n        let d =  con.push(objectiveind);\r\n        setObjective(con)\r\n        setObjectiveind('');\r\n      }\r\n      if(num === 1)\r\n      {\r\n        \r\n        let cons = [...objective];\r\n        let c = cons[inde];\r\n        setObjectiveind(c);\r\n      }\r\n      if(num === 2)\r\n      {\r\n        let cons = [...objective];\r\n        let c = cons.filter(rw=>rw !== dt);\r\n        setObjective(c)\r\n        setObjectiveind('');\r\n      }   \r\n  }\r\n  \r\n  let deparr = props.subjects.filter(rw =>parseInt(rw.id) === parseInt(subjectid) && parseInt(rw.id) > 0);\r\n  let subjectname = deparr.length > 0 ? deparr[0].name : 'None';\r\n\r\n  let claszarray = props.claszs && Array.isArray(props.claszs) ? props.claszs : [];\r\n  let clarray = claszarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.name}</option>\r\n  })\r\n  \r\n  let data = props.themes.themes && Array.isArray(props.themes.themes) ? props.themes.themes.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw !== null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td><strong>MODULE {row.moduleid}</strong>{\" : \"}<span style={{textTransform:'uppercase'}}> {row.name}</span>\r\n                  <CRow>\r\n                    <CCol sm={6}>\r\n                        <strong >The lesson would be presented as follows</strong>\r\n                        <ul className='ul'>\r\n                            {\r\n                              row.content && row.content.length > 3 && Array.isArray(JSON.parse(row.content)) ? JSON.parse(row.content).map((pp, im)=>{\r\n                                  return <li key={ind}>{pp}</li>\r\n                              }):''\r\n                            }\r\n                        </ul>\r\n                    </CCol>\r\n                    <CCol sm={6}>\r\n                    <strong >At the end of the lesson students should be able to</strong>\r\n                      <ul className='ul'>\r\n                            {\r\n                              row.objective && row.objective.length > 3 && Array.isArray(JSON.parse(row.objective)) ? JSON.parse(row.objective).map((pp, im)=>{\r\n                                  return <li key={ind}>{pp}</li>\r\n                              }):''\r\n                            }\r\n                        </ul>\r\n                    </CCol>\r\n                    <CDropdown className=\"m-0 btn-group \">\r\n                  <CDropdownToggle color={parseInt(row.is_active) === 0 ? 'success' : 'danger'} size=\"sm\">\r\n                  <i className='fa fa-gear'></i>\r\n                  </CDropdownToggle>\r\n                  <CDropdownMenu>\r\n                    <CDropdownItem\r\n                      onClick={(item) => history.push(`/department/${departmentid}/${subjectid}/${row.id}`)}\r\n                     ><i className='fa fa-list'></i>{' '} Question Bank</CDropdownItem>\r\n                     <CDropdownItem\r\n                      onClick={(item) => history.push(`/department/${departmentid}/${subjectid}/${row.id}`)}\r\n                     ><i className='fa fa-list'></i>{' '} Add reference material</CDropdownItem>\r\n                     <CDropdownItem \r\n                          onClick={()=>onActivate(row.id, row.is_active)} >\r\n                          <i className={parseInt(row.is_active) === 0 ? 'fa fa-thumbs-up' : 'fa fa-thumb-down'}></i>\r\n                          {' '}  {parseInt(row.is_active) === 0 ? 'Deactivate' : 'Activate'}</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onEdit(row)} ><i className='fa fa-edit'></i>{' '}  Edit</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onDelete(row.id, row)}><i className='fa fa-remove'></i>{' '}  Delete</CDropdownItem>\r\n                  </CDropdownMenu>\r\n                </CDropdown>\r\n                  </CRow>\r\n                </td>\r\n               \r\n              </tr>\r\n  })\r\n  return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"8\">\r\n               <h4 id=\"traffic\" className=\"card-title mb-0\">Scheme of Work : {subjectname}</h4>\r\n              <div className=\"small text-muted\" style={{textTransform:'capitalize'}}>{props.school.name}</div>\r\n            </CCol>\r\n            <CCol sm=\"4\" className=\"d-md-block\">\r\n              <CButton \r\n                  data-target='#formz' \r\n                  data-toggle=\"collapse\" \r\n                  color=\"primary\" \r\n                  onClick={toggle}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-plus'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th><i className='fa fa-list'></i>THEME/TOPIC</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n        <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Theme</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n              <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-module\">ModuleID</CLabel>\r\n                  <CInput \r\n                      type=\"number\" \r\n                      id=\"nf-module\" \r\n                      module=\"modulez\"\r\n                      defaultValue={moduleid}\r\n                      onChange={(e)=>setModuleid(e.target.value)}\r\n                      placeholder=\"00\" \r\n                    />\r\n                  <CFormText className=\"help-block\">This number has to be unique and serial</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-name\">Theme</CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-name\" \r\n                      name=\"namez\"\r\n                      defaultValue={namez}\r\n                      onChange={(e)=>setNamez(e.target.value)}\r\n                      placeholder=\"Matter\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Please enter theme name</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-claszid\">Class </CLabel>\r\n                  <CSelect\r\n                      type=\"text\" \r\n                      id=\"nf-claszid\" \r\n                      name=\"claszid\"\r\n                      onChange={(e)=>setClaszid(e.target.value)}\r\n                      placeholder=\"\" \r\n                    >\r\n                      {id && parseInt(id) > 0 ? <option value={claszid}>{claszid}</option>:''}\r\n                      {clarray}\r\n                  </CSelect>\r\n                  <CFormText className=\"help-block\">Select the class</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-content\">Lesson Content</CLabel>\r\n                  <ul className='list-items'>\r\n                  {\r\n                    content.map((prp, ind)=>{\r\n                    return  <CRow style={{maxWidth:'280px'}}> \r\n                              <CCol xs={10}  className='' style={{wordWrap:'break-word'}}>{prp}</CCol>\r\n                              <CCol xs={2}>\r\n                              <span className='pull-left' >\r\n                              <a onClick={()=>loadContent(2, ind, prp)} className='btn btn-link btn-sm'><i className='fa fa-trash'></i></a>\r\n                              </span>\r\n                              </CCol>\r\n                            </CRow>\r\n                    })\r\n                  }\r\n                  </ul>\r\n                  <CInputGroup>\r\n                      <CInput \r\n                        type=\"text\" \r\n                        id=\"nf-contentid\"\r\n                        value={contentind}\r\n                        onChange={(e)=>setContentind(e.target.value)}\r\n                        placeholder=\"Type-in content ...\" \r\n                      />\r\n                      <CInputGroupAppend>\r\n                        <CButton \r\n                          onClick={(e)=>loadContent(0, e, 0 )} \r\n                          type=\"button\" \r\n                          color=\"secondary\"\r\n                          >\r\n                            <i className='fa fa-plus'></i></CButton>\r\n                      </CInputGroupAppend>\r\n                    </CInputGroup>\r\n                  <CFormText className=\"help-block\">Add or remove subtopics outline in order of presentation</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-objective\">Lesson Objectives</CLabel><i>\r\n                  <ul className='list-items'>\r\n                  {\r\n                    objective.map((prp, ind)=>{\r\n                    return  <CRow style={{maxWidth:'280px'}}> \r\n                              <CCol xs={10}  className='' style={{wordWrap:'break-word'}}>{prp}</CCol>\r\n                              <CCol xs={2}>\r\n                              <span className='pull-left' >\r\n                              <a onClick={()=>loadObjective(2, ind, prp)} className='btn btn-link btn-sm'><i className='fa fa-trash'></i></a>\r\n                              </span>\r\n                              </CCol>\r\n                            </CRow>\r\n                    })\r\n                  }\r\n                 </ul></i>\r\n                  <CInputGroup>\r\n                      <CInput \r\n                        type=\"text\" \r\n                        id=\"nf-objectiveid\"\r\n                        value={objectiveind}\r\n                        onChange={(e)=>setObjectiveind(e.target.value)}\r\n                        placeholder=\"Type-in objective ...\" \r\n                      />\r\n                      <CInputGroupAppend>\r\n                        <CButton \r\n                          onClick={(e)=>loadObjective(0, e, 0 )} \r\n                          type=\"button\" \r\n                          color=\"secondary\"\r\n                          >\r\n                            <i className='fa fa-plus'></i></CButton>\r\n                      </CInputGroupAppend>\r\n                    </CInputGroup>\r\n                  <CFormText className=\"help-block\">Add or remove lesson objectives</CFormText>\r\n                </CFormGroup>\r\n              </CForm>\r\n            </CCardBody>\r\n            \r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n      </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  themes : state.themeReducer,\r\n  subjects : state.subjectReducer.subjects,\r\n  claszs : state.claszReducer.claszs,\r\n  school : state.schoolReducer.school,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getThemes,\r\n  getTheme,\r\n  registerTheme,\r\n  updateTheme,\r\n  deleteTheme,\r\n  getClaszs\r\n})(Theme)\r\n"],"sourceRoot":""}