{"version":3,"sources":["views/staff/Staffs/StaffDefault.js","views/staff/Staffs/StaffsChart.js","views/staff/Staffs/StaffsContact.js","views/staff/Staffs/StaffsKin.js","views/staff/Staffs/StaffsPhoto.js","views/staff/Staffs/StaffsData.js","views/staff/Staffs/StaffsEducation.js","views/staff/Staffs/StaffsEmployment.js","views/staff/Staffs/StaffsJob.js","views/staff/Staffs/StaffsLeave.js","views/staff/Staffs/StaffsProfessional.js","views/staff/Staffs/StaffsWork.js","views/staff/Staffs.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/staff/staff.js","actions/staff/staffattendance.js","actions/staff/staffexperience.js","actions/staff/staffprofessional.js","actions/staff/staffeducation.js"],"names":["connect","state","staffattendance","staffattendanceReducer","user","userReducer","getStaffattendances","getStaffattendancedailys","getStaffattendance","registerStaffattendance","registerStaffattendancedaily","updateStaffattendance","updateStaffattendancedaily","deleteStaffattendance","deleteStaffattendancedaily","props","useHistory","useState","Date","dates","setDates","reason","setreason","leaveid","setleaveid","search","useEffect","params","data","JSON","stringify","activeschool","id","moment","format","cat","table","narration","params1","getleave","leaves","filter","rw","parseInt","confirm_staff_available","Array","isArray","length","d","clients","chk","acarray","map","p","i","value","name","saveAttendance","fd","FormData","append","data1","staffs","undefined","registered_attendance_date","staffattendancedailys","check_date","confirm_date","registered_attendance_issue","staffattendances","check_issue","tabl","row","ind","key","className","src","process","photo","style","width","height","alt","employment_no","onError","e","target","onerror","gender","surname","firstname","middlename","departmentname","color","colors","size","onClick","window","open","termid","sessionid","htmlFor","type","autoComplete","onChange","fontWeight","block","handleSubmit","xs","md","custom","defaultValue","setsearch","placeholder","changeDates","disabled","Staffs","genderFemale","genderMale","departmentTable","religionTable","religion","genderTable","maritalTable","marital","sm","lg","text","header","iconPadding","datasets","backgroundColor","Object","values","labels","keys","options","tooltips","enabled","history","cont","push","href","phone1","phone2","email","textTransform","address","tin","nin","pen","dob","doe","soo","lga","kin1_name","kin1_rel","kin1_phone1","kin1_phone2","kin1_email","kin1_address","kin2_name","kin2_rel","kin2_phone1","kin2_phone2","kin2_email","kin2_address","staffeducation","staffeducationReducer","staffeducations","getStaffeducations","datas","datar","staffid","prop","index","imgx","links","result","course","school","grade","started","ended","checkImage","diff","departmentnames","levelname","staffprofessional","staffprofessionalReducer","staffprofessionals","getStaffprofessionals","ids","setids","fluid","marginTop","marginBottom","lineHeight","level","instituition","issued","staffexperience","staffexperienceReducer","staffexperiences","getStaffexperiences","organisation","position","job","staffReducer","getStaff","getStaffs","registerStaff","updateStaff","deleteStaff","active","setActive","departmentid","setdepartmentid","levelid","setlevelid","setDatastore","setData1store","dataq","setDataq","setData1","d2","join","acs","access","parse","deparray","levarr","forEach","element","a","b","isAdmin","hasOwnProperty","to","acss","includes","toLowerCase","content","data-target","data-toggle","closeMenuOnSelect","styles","isMulti","event","activeTab","onActiveTabChange","idx","variant","StaffDefault","dateactive","StaffsChart","StaffsData","StaffsContact","StaffsKin","StaffsPhoto","StaffsEmployment","StaffsEducation","StaffsProfessional","StaffsWork","StaffsLeave","StaffsJob","_slicedToArray","arr","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","unsupportedIterableToArray","TypeError","path","API_PATH_STAFF","dispatch","getState","token","MAIN_TOKEN","STAFF_LOADING","axios","get","axiosConfig","then","res","STAFF_GET_MULTIPLE","payload","catch","STAFF_LOADING_ERROR","getStaffAll","STAFF_GET_ALL","searchStaff","STAFF_GET_SEARCH","birthday","STAFF_GET_BIRTHDAY","STAFF_GET_ONE","POST","STAFF_DELETE_SUCCESS","STAFF_DELETE_FAIL","post","axiosConfig1","STAFF_REGISTER_SUCCESS","STAFF_REGISTER_FAIL","STAFF_UPDATE_SUCCESS","STAFF_UPDATE_FAIL","STAFFATTENDANCE_LOADING","STAFFATTENDANCE_GET_MULTIPLE","STAFFATTENDANCE_LOADING_ERROR","STAFFATTENDANCE_GET_DAILY","STAFFATTENDANCE_GET_ONE","STAFFATTENDANCE_DELETE_SUCCESS","STAFFATTENDANCE_DELETE_FAIL","STAFFATTENDANCE_DELETE_DAILY","STAFFATTENDANCE_REGISTER_SUCCESS","STAFFATTENDANCE_REGISTER_FAIL","STAFFATTENDANCE_REGISTER_DAILY","STAFFATTENDANCE_UPDATE_SUCCESS","STAFFATTENDANCE_UPDATE_FAIL","STAFFATTENDANCE_UPDATE_DAILY","STAFFEXPERIENCE_LOADING","STAFFEXPERIENCE_GET_MULTIPLE","STAFFEXPERIENCE_LOADING_ERROR","deleteStaffexperience","STAFFEXPERIENCE_DELETE_SUCCESS","STAFFEXPERIENCE_DELETE_FAIL","registerStaffexperience","STAFFEXPERIENCE_REGISTER_SUCCESS","STAFFEXPERIENCE_REGISTER_FAIL","updateStaffexperience","STAFFEXPERIENCE_UPDATE_SUCCESS","STAFFEXPERIENCE_UPDATE_FAIL","STAFFPROFESSIONAL_LOADING","STAFFPROFESSIONAL_GET_MULTIPLE","STAFFPROFESSIONAL_LOADING_ERROR","deleteStaffprofessional","STAFFPROFESSIONAL_DELETE_SUCCESS","STAFFPROFESSIONAL_DELETE_FAIL","registerStaffprofessional","STAFFPROFESSIONAL_REGISTER_SUCCESS","STAFFPROFESSIONAL_REGISTER_FAIL","updateStaffprofessional","STAFFPROFESSIONAL_UPDATE_SUCCESS","STAFFPROFESSIONAL_UPDATE_FAIL","STAFFEDUCATION_LOADING","STAFFEDUCATION_GET_MULTIPLE","STAFFEDUCATION_LOADING_ERROR","deleteStaffeducation","STAFFEDUCATION_DELETE_SUCCESS","STAFFEDUCATION_DELETE_FAIL","registerStaffeducation","STAFFEDUCATION_REGISTER_SUCCESS","STAFFEDUCATION_REGISTER_FAIL","updateStaffeducation","STAFFEDUCATION_UPDATE_SUCCESS","STAFFEDUCATION_UPDATE_FAIL"],"mappings":"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","file":"static/js/29.e1cb6f13.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  CRow,\r\n  CDropdownItem,\r\n  CDropdown,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CDropdownDivider,\r\n  CForm,\r\n  CFormGroup,\r\n  CFormText,\r\n  CInput,\r\n  CInputCheckbox,\r\n  CLabel,\r\n  CButton, \r\n  CSelect,\r\n  CButtonClose,\r\n  CButtonGroup,\r\n  CTooltip,\r\n  CCol,\r\n  CTextarea,\r\n  CBadge\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { \r\n    getStaffattendances, \r\n    getStaffattendancedailys,\r\n    getStaffattendance, \r\n    registerStaffattendance, \r\n    registerStaffattendancedaily,\r\n    updateStaffattendance, \r\n    updateStaffattendancedaily, \r\n    deleteStaffattendance,\r\n    deleteStaffattendancedaily\r\n  } from './../../../actions/staff/staffattendance';\r\nimport { leaves } from '../../../actions/common'\r\n\r\nconst Staffs = (props) => {\r\n   const history = useHistory()\r\n   \r\n   \r\n   const [dates, setDates] = useState(new Date())\r\n   const [reason, setreason] = useState('')\r\n   const [leaveid, setleaveid] = useState(0)\r\n   const [search, setsearch] = useState('')\r\n\r\n   useEffect(() => {\r\n    //date changes get\r\n    let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.user.activeschool.id,\r\n          'grp':1,\r\n          'dates':moment(dates).format('YYYY-MM-DD')\r\n\r\n      }),\r\n      cat:'selected',\r\n      table:'attendances',\r\n      narration:'get all staffs'\r\n  }\r\n    props.getStaffattendances(params)\r\n\r\n    let params1 = {\r\n      data:JSON.stringify(\r\n      {\r\n          'clients':props.user.activeschool.id,\r\n          'schoolid':props.user.activeschool.id,\r\n          'grp':5,\r\n          'dates':moment(dates).format('YYYY-MM-DD')\r\n      }),\r\n      cat:'selected',\r\n      table:'attendances',\r\n      narration:'get all attendance'\r\n  }\r\n    props.getStaffattendancedailys(params1)\r\n  }, [dates])\r\n\r\n  let getleave=(id)=>{\r\n      let d = leaves.filter(rw=>parseInt(rw.id) === parseInt(id));\r\n      return d[0]\r\n  }\r\n\r\n    const handleAttendance = ()=>{\r\n\r\n    }\r\n\r\n    const handleSubmit = (id)=>{\r\n        let fd = new FormData();\r\n        fd.append('grp', 1);\r\n        fd.append('dates', moment(dates).format('YYYY-MM-DD'));\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('clients', id);\r\n        fd.append('leaveid', leaveid);\r\n        fd.append('reason', reason);\r\n        fd.append('cat', 'insert');\r\n        fd.append('table', 'attendances');\r\n\r\n        props.registerStaffattendance(fd);\r\n\r\n    }\r\n\r\n    const confirm_staff_available =(data, id)=>{\r\n        \r\n        if(Array.isArray(data) && data.length){\r\n        let d = data.filter(rw=>parseInt(rw.clients) === parseInt(id));\r\n        let chk = Array.isArray(d) && d.length > 0 ? d[0].leaveid : 0;\r\n        return parseInt(chk);\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    let acarray = leaves.map((p, i)=>{\r\n    return <option value={p.id}>{p.name}</option>\r\n    })\r\n\r\n    const changeDates = (e) =>{\r\n        setDates(e)\r\n        props.setDates(e)\r\n    }\r\n\r\n    const saveAttendance=()=>{\r\n        let fd = new FormData();\r\n        fd.append('grp', 5);\r\n        fd.append('dates', moment(dates).format('YYYY-MM-DD'));\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('clients', props.user.activeschool.id);\r\n        fd.append('reason', props.data1);\r\n        fd.append('leaveid', 0);\r\n        fd.append('cat', 'insert');\r\n        fd.append('table', 'attendances');\r\n\r\n        props.registerStaffattendancedaily(fd);\r\n\r\n      }\r\n      let redirectStudent = (id) =>{\r\n        window.open(process.env.PUBLIC_URL+\"#/staffs/\"+id)\r\n      }\r\n\r\n      let data = props.staffs && Array.isArray(props.staffs) ? props.staffs.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : []\r\n      let registered_attendance_date = Array.isArray(props.staffattendance.staffattendancedailys)  && props.staffattendance.staffattendancedailys !== undefined? props.staffattendance.staffattendancedailys : [];\r\n      let check_date = Array.isArray(registered_attendance_date) ? registered_attendance_date.filter(rw=>rw !== undefined && rw !== null && rw.dates === moment(dates).format(\"YYYY-MM-DD\")) :[];\r\n      let confirm_date = Array.isArray(check_date) && check_date.length > 0 ? true : false;\r\n\r\n      let registered_attendance_issue = Array.isArray(props.staffattendance.staffattendances)  && props.staffattendance.staffattendances !== undefined? props.staffattendance.staffattendances : [];\r\n      let check_issue = Array.isArray(registered_attendance_issue) ? registered_attendance_issue.filter(rw=>rw !== undefined && rw !== null && rw.dates === moment(dates).format(\"YYYY-MM-DD\")) :[];\r\n     \r\n       \r\n\r\n   let tabl = data.map((row, ind)=>{\r\n        return <tr key={ind}>\r\n        <td className=\"text-center\">\r\n          <div className=\"c-avatar\">\r\n            <img \r\n              src={process.env.REACT_APP_SERVER_URL+ row.photo}\r\n              style={{width:'40px', height:'40px'}}\r\n              height=\"50px\" \r\n              width=\"50px\" \r\n              className=\"c-avatar-img\" \r\n              alt={row.employment_no} \r\n              onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL +'/avatars/1.png' }}\r\n            />\r\n            <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n          </div>\r\n        </td>\r\n        \r\n        <td>\r\n   <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n                <div className=\"small text-muted\">\r\n                <span>{row.employment_no} | {row.departmentname}</span>\r\n            </div>\r\n        </td>\r\n        <td className=\"text-center\">\r\n        { confirm_staff_available(check_issue, row.id) > 0 ? <>\r\n        <CBadge className=\"mr-0\" color={getleave(confirm_staff_available(check_issue, row.id)).colors}>{getleave(confirm_staff_available(check_issue, row.id)).name}</CBadge>\r\n        <CBadge className=\"mr-1\" color=\"dark\">{moment(dates).format(\"Do MMMM, YYYY\")}</CBadge></>\r\n        :<>\r\n        <CBadge className=\"mr-0\" color={confirm_date ? \"success\" :\"secondary\"}>{confirm_date ? \"Present\" :\"Present not saved\"}</CBadge>\r\n        <CBadge className=\"mr-1\" color=\"dark\">{moment(dates).format(\"Do MMMM, YYYY\")}</CBadge></>\r\n        }\r\n        </td>\r\n        <td className='text-right'>\r\n        <CButtonGroup>\r\n        <CButton \r\n              size='sm' \r\n              color=\"dark\" \r\n              onClick={()=>redirectStudent(row.id)}\r\n              > <CIcon name='cil-user'  /> <span className=\"d-xs-none\">Profile</span></CButton>\r\n           <CButton \r\n              size='sm' \r\n              color=\"secondary\" \r\n              onClick={()=>handleAttendance(row.id, props.termid, props.sessionid)}\r\n              > <CIcon name='cil-envelope-open'  />  <span className=\"d-xs-none\">Message</span></CButton>\r\n          <CDropdown className=\"m-0\">\r\n              <CDropdownToggle color=\"info\" size='sm'>\r\n              <CIcon name='cil-user-follow'  />  <span className=\"d-xs-none\">Attendance</span> \r\n              </CDropdownToggle>\r\n              <CDropdownMenu className='bg-info'>\r\n                <CForm className=\"px-4 py-3\" >\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"leaveid\"></CLabel>\r\n                    <CSelect \r\n                      className=\"form-control\" \r\n                      id=\"leaveid\" \r\n                      type=\"date\"\r\n                      value={leaveid}\r\n                      autoComplete=\"leaveid\"\r\n                      onChange={(e)=>setleaveid(e.target.value)}\r\n                      >\r\n                        {acarray}\r\n                      </CSelect>\r\n                  </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"reason\">Reason</CLabel>\r\n                    <CTextarea\r\n                      className=\"form-control\" \r\n                      style={{color:'blue', fontWeight:'bolder'}}\r\n                      id=\"reason\" \r\n                      type=\"text\"\r\n                      value={reason}\r\n                      autoComplete=\"reason\"\r\n                      onChange={(e)=>setreason(e.target.value)}\r\n                      \r\n                      ></CTextarea>\r\n                  </CFormGroup>\r\n                  \r\n                  <CFormGroup className=\"mt-2\">\r\n                    <CButton \r\n                    color=\"primary\" \r\n                    type=\"button\"\r\n                    block\r\n                    onClick={()=>handleSubmit(row.id)}\r\n                    >Log</CButton>\r\n                  </CFormGroup>\r\n                </CForm>\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n            </CButtonGroup>\r\n\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n    \r\n \r\n  return (\r\n    <>\r\n    <CRow className='table-responsive'>\r\n        <CRow className=' mt-2'>\r\n        <CCol xs={12} md={4}>\r\n            <CFormGroup>\r\n                  <CCol xs=\"12\" md=\"12\">\r\n                  <CInput\r\n                    className=\"my-auto\"\r\n                   custom\r\n                   defaultValue={search}\r\n                   type='search'\r\n                   onChange={(e)=>props.setsearch(e.target.value)}\r\n                   placeholder=\"Search for staff....\"\r\n                />\r\n                  </CCol>\r\n            </CFormGroup>\r\n            </CCol>\r\n            <CCol xs={12} md={4}>\r\n            <CFormGroup>\r\n                <CCol xs={12}>\r\n                \r\n                <CInput\r\n                   custom\r\n                   defaultValue={dates}\r\n                   type='date'\r\n                   onChange={(e)=>changeDates(e.target.value)}\r\n                />\r\n                \r\n                </CCol>\r\n                </CFormGroup>\r\n            </CCol>\r\n           \r\n            <CCol xs={12} md={4}>\r\n            <CCol xs={12}>\r\n                { confirm_date ?\r\n                <CButton \r\n                    color=\"dark\" \r\n                    disabled\r\n                    block\r\n                    onClick={saveAttendance}\r\n                >Attendance saved ({moment(dates).format('DD MMM, YYYY')})</CButton>:\r\n                <CButton \r\n                    color=\"info\" \r\n                    block\r\n                    onClick={saveAttendance}\r\n                >Save Attendance</CButton>}\r\n            </CCol>\r\n            </CCol>\r\n        </CRow>\r\n      <table className=\"table table-hover table-outline mb-0 d-sm-table\">\r\n          <thead className=\"thead-light\">\r\n              <tr>\r\n                <th className=\"text-center\"><CIcon name=\"cil-people\" /></th>\r\n                <th>Staff</th>\r\n                <th>Attendance</th>\r\n                <th>Action</th>\r\n              </tr>\r\n           </thead>\r\n            <tbody>\r\n                  {tabl}\r\n            </tbody>\r\n      </table>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n    staffattendance : state.staffattendanceReducer,\r\n    user:state.userReducer\r\n  })\r\n  export default connect(mapStateToProps, {\r\n    getStaffattendances,\r\n    getStaffattendancedailys,\r\n    getStaffattendance,\r\n    registerStaffattendance,\r\n    registerStaffattendancedaily,\r\n    updateStaffattendance,\r\n    updateStaffattendancedaily,\r\n    deleteStaffattendance,\r\n    deleteStaffattendancedaily\r\n  })(Staffs)\r\n  \r\n","import React from 'react'\r\nimport {\r\n    CChartBar,\r\n    CChartLine,\r\n    CChartDoughnut,\r\n    CChartRadar,\r\n    CChartPie,\r\n    CChartPolarArea\r\n  } from '@coreui/react-chartjs'\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CCardHeader,\r\n  CCard,\r\n  CCardBody,\r\n  CWidgetIcon\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst Staffs = (props) => {\r\n  let data = props.staffs && Array.isArray(props.staffs) ? props.staffs.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : []\r\n   \r\n  let genderFemale = data.filter(rw =>rw.gender === 'Female');\r\n  let genderMale = data.filter(rw =>rw.gender === 'Male');\r\n\r\n  let departmentTable = {};\r\n  for(var i = 0; i < data.length; i++)\r\n  {\r\n    if(data[i].departmentname in departmentTable)\r\n        departmentTable[data[i].departmentname]++;\r\n    else\r\n        departmentTable[data[i].departmentname] = 1;\r\n  }\r\n \r\n let religionTable = {};\r\n  for(var i = 0; i < data.length; i++)\r\n  {\r\n    if(data[i].religion in religionTable)\r\n        religionTable[data[i].religion]++;\r\n    else\r\n        religionTable[data[i].religion] = 1;\r\n  }\r\n\r\n  let genderTable = {};\r\n  for(var i = 0; i < data.length; i++)\r\n  {\r\n    if(data[i].gender in genderTable)\r\n        genderTable[data[i].gender]++;\r\n    else\r\n        genderTable[data[i].gender] = 1;\r\n  }\r\n\r\n  let maritalTable = {};\r\n  for(var i = 0; i < data.length; i++)\r\n  {\r\n    if(data[i].marital in maritalTable)\r\n        maritalTable[data[i].marital]++;\r\n    else\r\n        maritalTable[data[i].marital] = 1;\r\n  }\r\n  return (\r\n    <>\r\n    <CRow>\r\n    <CCol xs=\"12\" md=\"12\" className=\"mb-4\">\r\n    <CCard>\r\n          <CCardBody>\r\n                <br/>\r\n                    <CRow className='mt-20 py-90'>\r\n                    <CCol xs=\"12\" sm=\"6\" lg=\"4\">\r\n          <CWidgetIcon text=\"Male\" header={parseInt(genderMale.length)} color=\"success\" iconPadding={false}>\r\n            <CIcon width={24} name=\"cil-user\" className=\"mx-5\"/>\r\n          </CWidgetIcon>\r\n        </CCol>\r\n        <CCol xs=\"12\" sm=\"6\" lg=\"4\">\r\n          <CWidgetIcon text=\"Female\" header={parseInt(genderFemale.length)} color=\"danger\" iconPadding={false}>\r\n            <CIcon width={24} name=\"cil-user-female\" className=\"mx-5\"/>\r\n          </CWidgetIcon>\r\n        </CCol>\r\n          \r\n        <CCol xs=\"12\" sm=\"6\" lg=\"4\">\r\n          <CWidgetIcon text=\"Total Staff\" header={parseInt(genderMale.length) + parseInt(genderFemale.length)} color=\"info\" iconPadding={false}>\r\n            \r\n            <i className='fa fa-users fa-2x mx-5'></i>\r\n          </CWidgetIcon>\r\n        </CCol>\r\n          </CRow>\r\n                <CRow>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"6\">\r\n        <CCard >\r\n        <CCardHeader>\r\n          Gender \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CChartPie\r\n            type=\"pie\"\r\n            datasets={[\r\n              {\r\n                backgroundColor: [\r\n                  '#41B883',\r\n                  '#E46651',\r\n                  '#00D8FF',\r\n                  '#DD1B16'\r\n                ],\r\n                data: Object.values(genderTable)\r\n              }\r\n            ]}\r\n            labels={Object.keys(genderTable)}\r\n            options={{\r\n              tooltips: {\r\n                enabled: true\r\n              }\r\n            }}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCol>\r\n    <CCol xs=\"12\" sm=\"12\" md=\"6\">\r\n        <CCard >\r\n        <CCardHeader>\r\n          Religion\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CChartPie\r\n            type=\"pie\"\r\n            datasets={[\r\n              {\r\n                backgroundColor: [\r\n                  '#41B883',\r\n                  '#E46651',\r\n                  '#00D8FF',\r\n                  '#DD1B16'\r\n                ],\r\n                data: Object.values(religionTable)\r\n              }\r\n            ]}\r\n            labels={Object.keys(religionTable)}\r\n            options={{\r\n              tooltips: {\r\n                enabled: true\r\n              }\r\n            }}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCol>\r\n    \r\n    </CRow>\r\n                <CRow>\r\n    <CCol xs=\"12\" sm=\"12\" md=\"6\">\r\n        <CCard >\r\n        <CCardHeader>\r\n          Marital\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CChartPie\r\n            type=\"pie\"\r\n            datasets={[\r\n              {\r\n                backgroundColor: [\r\n                    '#00D8FF',\r\n                    '#DD1B16',\r\n                    '#41B883',\r\n                  '#E46651'\r\n                  \r\n                ],\r\n                data: Object.values(maritalTable)\r\n              }\r\n            ]}\r\n            labels={Object.keys(maritalTable)}\r\n            options={{\r\n              tooltips: {\r\n                enabled: true\r\n              }\r\n            }}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCol>\r\n    \r\n    <CCol xs=\"12\" sm=\"12\" md=\"6\">\r\n        <CCard>\r\n        <CCardHeader>\r\n          Department\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CChartBar\r\n            type=\"barchart\"\r\n            datasets={[\r\n              {\r\n                backgroundColor: [\r\n                  '#41B883',\r\n                  '#E46651',\r\n                  '#045800',\r\n                  '#4AB883',\r\n                  '#E96651',\r\n                  '#09E0FF',\r\n                  '#DD1116',\r\n                  '#096651',\r\n                  '#19E0FF',\r\n                  '#296651',\r\n                  '#39E0FF',\r\n                ],\r\n                data: Object.values(departmentTable)\r\n              }\r\n            ]}\r\n            labels={Object.keys(departmentTable)}\r\n            options={{\r\n              tooltips: {\r\n                enabled: true\r\n              }\r\n            }}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n      </CCol>\r\n    </CRow>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n  export default Staffs\r\n  \r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst Staffs = (props) => {\r\n   const history = useHistory()\r\n   let data = props.staffs && Array.isArray(props.staffs) ? props.staffs.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : []\r\n   \r\n   let cont = data.map((row, ind)=>{\r\n    return <tr key={ind}\r\n    onClick={() => history.push(`/staffs/${row.id}`)}>\r\n    <td className=\"text-center\">\r\n     {ind + 1}\r\n    </td>\r\n    <td>\r\n        <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n    </td>\r\n    <td>\r\n            <strong><a href={`mailto:${row.phone1}`}>{row.phone1}</a> <a href={`mailto:${row.phone2}`}>{row.phone2}</a></strong>\r\n    </td>\r\n    <td>\r\n        <strong><a href={`mailto:${row.email}`}>{row.email}</a></strong> \r\n    </td>\r\n    \r\n    <td>\r\n      <div className=\"text-muted \" style={{textTransform:'capitalize'}}>{row.address}</div>\r\n    </td>\r\n  </tr>\r\n})\r\n\r\n   let acct = data.map((row, ind)=>{\r\n    return <tr key={ind}\r\n    onClick={() => history.push(`/staffs/${row.id}`)}>\r\n    <td className=\"text-center\">\r\n     {ind + 1}\r\n    </td>\r\n    <td>\r\n        <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n    </td>\r\n    <td>\r\n        {props.tin}\r\n    </td>\r\n    <td>\r\n        {props.nin}\r\n    </td>\r\n        {props.pen}\r\n    <td>\r\n      \r\n    </td>\r\n  </tr>\r\n})\r\n\r\n   let tabl = data.map((row, ind)=>{\r\n        return <tr key={ind}\r\n        onClick={() => history.push(`/staffs/${row.id}`)}>\r\n        <td className=\"text-center\">\r\n          <div className=\"c-avatar\">\r\n            <img src={'avatars/1.png'} className=\"c-avatar-img\" alt=\"admin@bootstrapmaster.com\" />\r\n            <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n          </div>\r\n        </td>\r\n        <td>\r\n            <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n                <div className=\"small text-muted\">\r\n                <span>{row.employment_no} | {row.departmentname}</span>\r\n            </div>\r\n        </td>\r\n        <td>\r\n            <div className=\"small text-muted\">\r\n                <span>Phone</span>: <strong><a href={`tel:${row.phone1}`}>{row.phone1}</a> <a href={`mailto:${row.phone2}`}>{row.phone2}</a></strong>\r\n            </div>\r\n            <div className=\"small text-muted\">\r\n                <span>Email</span>: <strong><a href={`mailto:${row.email}`}>{row.email}</a></strong> \r\n            </div>\r\n        </td>\r\n        <td>\r\n            <div className=\"small text-muted\">\r\n                <span>Date of Birth</span>: <strong>{row.dob}</strong>\r\n            </div>\r\n            <div className=\"small text-muted\">\r\n                <span>Date of Emply.</span>: <strong>{row.doe}</strong> \r\n            </div>\r\n        </td>\r\n        <td>\r\n          <div className=\"small text-muted \" style={{textTransform:'capitalize'}}>{row.soo}</div>\r\n          <strong style={{textTransform:'capitalize'}}>{row.lga}</strong>\r\n        </td>\r\n        <td>\r\n          <div className=\"text-muted \" style={{textTransform:'capitalize'}}>{row.gender}</div>\r\n        </td>\r\n      </tr>\r\n    });\r\n \r\n \r\n  return (\r\n    <>\r\n    <CRow>\r\n    <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">Staff ID</th>\r\n                    <th>Fullname</th>\r\n                    <th className=\"text-center\">Phone</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                    <th>Address</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {cont}\r\n                </tbody>\r\n                </table>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n  export default Staffs\r\n  \r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  CContainer,\r\n  CRow,\r\n  CCol\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst Staffs = (props) => {\r\n   const history = useHistory()\r\n   let data = props.staffs && Array.isArray(props.staffs) ? props.staffs.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : []\r\n   let tabl = data.map((row, ind)=>{\r\n    return <tr key={ind}>\r\n    <td width=\"9%\" className=\"text-center\">\r\n      <div className=\"c-avatar\">\r\n      <img \r\n          src={process.env.REACT_APP_SERVER_URL+ row.photo}\r\n          style={{width:'50px', height:'50px'}}\r\n          height=\"50px\" \r\n          width=\"50px\" \r\n          className=\"c-avatar-img\" \r\n          alt={row.employment_no} \r\n          onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL +'/avatars/1.png' }}\r\n        />\r\n        <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n      </div>\r\n    </td>\r\n    <td width=\"20%\">\r\n        <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n            <div className=\"small text-muted\">\r\n            <span>{row.employment_no} | {row.departmentname}</span>\r\n        </div>\r\n    </td>\r\n    <td>\r\n    \r\n        <CContainer>\r\n          <CRow>\r\n            <CCol>\r\n              <strong>{row.kin1_name} <i>{row.kin1_rel.length > 0  ?  '('+ row.kin1_rel +')' : '' }</i></strong><br/> <a href={`tel:${row.kin1_phone1}`}>{row.kin1_phone1}</a> <a href={`tel:${row.kin1_phone2}`}>{row.kin1_phone2}</a>  <a href={`mail:${row.kin1_email}`}>{row.kin1_email}</a><br/><i><span style={{textTransform:'uppercase'}}> {`${row.kin1_address} ${row.kin1_name}`}</span></i>\r\n            </CCol>\r\n            <CCol>\r\n              <strong>{row.kin2_name} <i>{row.kin2_rel.length > 0  ?  '('+ row.kin2_rel +')' : '' }</i></strong><br/> <a href={`tel:${row.kin2_phone1}`}>{row.kin2_phone1}</a> <a href={`tel:${row.kin2_phone2}`}>{row.kin2_phone2}</a>  <a href={`mail:${row.kin2_email}`}>{row.kin2_email}</a><br/><i><span style={{textTransform:'uppercase'}}> {`${row.kin2_address} ${row.kin2_name}`}</span></i>\r\n            </CCol>\r\n          </CRow>\r\n\r\n        </CContainer>\r\n   \r\n    </td>\r\n  </tr>\r\n});\r\n   \r\n\r\n\r\n \r\n  return (\r\n    <>\r\n    <CRow className='table-responsive'>\r\n    <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">Staff ID</th>\r\n                    <th>Fullname</th>\r\n                    <th className=\"text-center\">Next of Kin</th>\r\n                    \r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                </tbody>\r\n                </table>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n  export default Staffs\r\n  \r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst Staffs = (props) => {\r\n   const history = useHistory()\r\n   let data = props.staffs && Array.isArray(props.staffs) ? props.staffs.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : []\r\n   \r\n   let cont = data.map((row, ind)=>{\r\n    return <tr key={ind}\r\n    onClick={() => history.push(`/staffs/${row.id}`)}>\r\n    <td className=\"text-center\">\r\n     {ind + 1}\r\n    </td>\r\n    <td>\r\n        <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n    </td>\r\n    <td>\r\n            <strong><a href={`mailto:${row.phone1}`}>{row.phone1}</a> <a href={`mailto:${row.phone2}`}>{row.phone2}</a></strong>\r\n    </td>\r\n    <td>\r\n        <strong><a href={`mailto:${row.email}`}>{row.email}</a></strong> \r\n    </td>\r\n    \r\n    <td>\r\n      <div className=\"text-muted \" style={{textTransform:'capitalize'}}>{row.address}</div>\r\n    </td>\r\n  </tr>\r\n})\r\n\r\n   let acct = data.map((row, ind)=>{\r\n    return <tr key={ind}\r\n    onClick={() => history.push(`/staffs/${row.id}`)}>\r\n    <td className=\"text-center\">\r\n     {ind + 1}\r\n    </td>\r\n    <td>\r\n        <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n    </td>\r\n    <td>\r\n        {props.tin}\r\n    </td>\r\n    <td>\r\n        {props.nin}\r\n    </td>\r\n        {props.pen}\r\n    <td>\r\n      \r\n    </td>\r\n  </tr>\r\n})\r\n\r\n   let tabl = data.map((row, ind)=>{\r\n        return <tr key={ind}\r\n        onClick={() => history.push(`/staffs/${row.id}`)}>\r\n        <td className=\"text-center\">\r\n          <div className=\"c-avatar\">\r\n            <img src={'avatars/1.png'} className=\"c-avatar-img\" alt=\"admin@bootstrapmaster.com\" />\r\n            <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n          </div>\r\n        </td>\r\n        <td>\r\n            <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n                <div className=\"small text-muted\">\r\n                <span>{row.employment_no} | {row.departmentname}</span>\r\n            </div>\r\n        </td>\r\n        <td>\r\n            <div className=\"small text-muted\">\r\n                <span>Phone</span>: <strong><a href={`tel:${row.phone1}`}>{row.phone1}</a> <a href={`mailto:${row.phone2}`}>{row.phone2}</a></strong>\r\n            </div>\r\n            <div className=\"small text-muted\">\r\n                <span>Email</span>: <strong><a href={`mailto:${row.email}`}>{row.email}</a></strong> \r\n            </div>\r\n        </td>\r\n        <td>\r\n            <div className=\"small text-muted\">\r\n                <span>Date of Birth</span>: <strong>{row.dob}</strong>\r\n            </div>\r\n            <div className=\"small text-muted\">\r\n                <span>Date of Emply.</span>: <strong>{row.doe}</strong> \r\n            </div>\r\n        </td>\r\n        <td>\r\n          <div className=\"small text-muted \" style={{textTransform:'capitalize'}}>{row.soo}</div>\r\n          <strong style={{textTransform:'capitalize'}}>{row.lga}</strong>\r\n        </td>\r\n        <td>\r\n          <div className=\"text-muted \" style={{textTransform:'capitalize'}}>{row.gender}</div>\r\n        </td>\r\n      </tr>\r\n    });\r\n \r\n \r\n  return (\r\n    <>\r\n    <CRow>\r\n    <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">Staff ID</th>\r\n                    <th>Fullname</th>\r\n                    <th className=\"text-center\">Phone</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                    <th>Address</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {cont}\r\n                </tbody>\r\n                </table>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n  export default Staffs\r\n  \r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst Staffs = (props) => {\r\n   const history = useHistory()\r\n   let data = props.staffs && Array.isArray(props.staffs) ? props.staffs.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : []\r\n   \r\n   let tabl = data.map((row, ind)=>{\r\n        return <tr key={ind}\r\n        onClick={() => history.push(`/staffs/${row.id}`)}>\r\n        <td className=\"text-center\">\r\n          <div className=\"c-avatar\">\r\n            <img \r\n              src={process.env.REACT_APP_SERVER_URL+ row.photo}\r\n              style={{width:'40px', height:'40px'}}\r\n              height=\"50px\" \r\n              width=\"50px\" \r\n              className=\"c-avatar-img\" \r\n              alt={row.employment_no} \r\n              onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL +'/avatars/1.png' }}\r\n            />\r\n            <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n          </div>\r\n        </td>\r\n        <td>\r\n   <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n                <div className=\"small text-muted\">\r\n                <span>{row.employment_no} | {row.departmentname}</span>\r\n            </div>\r\n        </td>\r\n        <td>\r\n            <div className=\"small text-muted\">\r\n                <span>Phone</span>: <strong><a href={`tel:${row.phone1}`}>{row.phone1}</a> <a href={`mailto:${row.phone2}`}>{row.phone2}</a></strong>\r\n            </div>\r\n            <div className=\"small text-muted\">\r\n                <span>Email</span>: <strong><a href={`mailto:${row.email}`}>{row.email}</a></strong> \r\n            </div>\r\n        </td>\r\n        <td>\r\n            <div className=\"small text-muted\">\r\n                <span>Date of Birth</span>: <strong>{row.dob}</strong>\r\n            </div>\r\n            <div className=\"small text-muted\">\r\n                <span>Date of Emply.</span>: <strong>{row.doe}</strong> \r\n            </div>\r\n        </td>\r\n        <td>\r\n          <div className=\"small text-muted \" style={{textTransform:'capitalize'}}>{row.soo}</div>\r\n          <strong style={{textTransform:'capitalize'}}>{row.lga}</strong>\r\n        </td>\r\n        <td>\r\n          <div className=\"text-muted \" style={{textTransform:'capitalize'}}>{row.gender}</div>\r\n        </td>\r\n      </tr>\r\n    });\r\n \r\n  return (\r\n    <>\r\n    <CRow className='table-responsive'>\r\n      <table className=\"table table-hover table-outline mb-0 d-sm-table\">\r\n          <thead className=\"thead-light\">\r\n              <tr>\r\n                <th className=\"text-center\"><CIcon name=\"cil-people\" /></th>\r\n                <th>Staff</th>\r\n                <th className=\"text-center\">Contacts</th>\r\n                <th className=\"text-center\">Dates</th>\r\n                <th>Origin</th>\r\n                <th>Gender</th>\r\n              </tr>\r\n           </thead>\r\n            <tbody>\r\n                  {tabl}\r\n            </tbody>\r\n      </table>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\nexport default Staffs\r\n  \r\n","import React, {useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  CCol,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport moment from 'moment'\r\nimport {getStaffeducations  } from \"./../../../actions/staff/staffeducation\";\r\nimport { checkImage } from './../../../actions/common'\r\n\r\n\r\nconst Staffs = (props) => {\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'staffid':props.datas\r\n        }),\r\n        cat:'selectess',\r\n        table:'staffeducations',\r\n        narration:'get Staff education'\r\n    }\r\n    props.getStaffeducations(params)\r\n  }, [props.datas])   \r\n\r\n   let datar = props.staffs && Array.isArray(props.staffs) ? props.staffs.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : [];\r\n   let data = props.staffeducation && Array.isArray(props.staffeducation) ? props.staffeducation.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : []\r\n   let tabl = datar.map((row, ind)=>{\r\n        return <tr key={ind}>\r\n        <td width=\"5%\" className=\"text-center\">\r\n          <div className=\"c-avatar\">\r\n          <img \r\n              src={process.env.REACT_APP_SERVER_URL+ row.photo}\r\n              style={{width:'50px', height:'50px'}}\r\n              height=\"50px\" \r\n              width=\"50px\" \r\n              className=\"c-avatar-img\" \r\n              alt={row.employment_no} \r\n              onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL +'/avatars/1.png' }}\r\n            />\r\n            <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n          </div>\r\n        </td>\r\n        <td width=\"20%\">\r\n            <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n                <div className=\"small text-muted\">\r\n                <span>{row.employment_no} | {row.departmentname}</span>\r\n            </div>\r\n        </td>\r\n        <td className=''>\r\n        \r\n            { \r\n                \r\n                data && Array.isArray(data) && data.length > 0 ? data.filter(rw=>rw !==null && rw !== undefined && parseInt(rw.staffid) === parseInt(row.id)).map((prop, index)=>{\r\n                        let imgx = process.env.REACT_APP_SERVER_URL + prop.links; \r\n                        return (\r\n                            \r\n                                <CRow><CCol>{prop.result}{\"  \"}<i style={{textTransform:'capitalize'}}>{prop.course}</i>{\"  \"} <strong style={{textTransform:'uppercase'}}>{prop.school}\r\n                                   {\" (\"}{prop.grade}{\")  \"}</strong>{moment(prop.started).format('MMM DD, YYYY')}{\" - \"}{moment(prop.ended).format('MMM DD, YYYY')}\r\n                                  {checkImage(imgx) ? <a target='_blank' className='' href={imgx}><i className='fa fa-cloud-download'></i></a>:<strong>No File Uploaded</strong>}<br/></CCol></CRow>\r\n                          \r\n                        )\r\n                    }):<h4 className='text-center'>No Data</h4>\r\n                }\r\n       \r\n        </td>\r\n      </tr>\r\n    });\r\n  \r\n  return (\r\n    <>\r\n    <CRow>\r\n        <table className=\"table table-hover table-outline mb-0 d-sm-table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th className=\"text-center\">Staff ID</th>\r\n              <th>Fullname</th>\r\n              <th className=\"text-center\">Education</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tabl}\r\n          </tbody>\r\n        </table>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n  staffeducation:state.staffeducationReducer.staffeducations\r\n})\r\nexport default connect(mapStateToProps,{getStaffeducations})(Staffs)\r\n\r\n\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport moment from \"moment\";\r\nimport {\r\n  CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst Staffs = (props) => {\r\n   const history = useHistory()\r\n   let data = props.staffs && Array.isArray(props.staffs) ? props.staffs.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : []\r\n   \r\n   let tabl = data.map((row, ind)=>{\r\n    return <tr key={ind}\r\n    onClick={() => history.push(`/studentclasss/${row.id}`)}>\r\n    <td className=\"text-center\">\r\n      <div className=\"c-avatar\">\r\n      <img \r\n              src={process.env.REACT_APP_SERVER_URL+ row.photo}\r\n              style={{width:'35px', height:'35px'}}\r\n              height=\"35px\" \r\n              width=\"35px\" \r\n              className=\"c-avatar-img\" \r\n              alt={row.employment_no} \r\n              onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL +'/avatars/1.png' }}\r\n            />\r\n        <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n      </div>\r\n    </td>\r\n    <td>\r\n    <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n                <div className=\"small text-muted\">\r\n                <span><strong>{row.employment_no} </strong></span>\r\n            </div>\r\n    </td>\r\n    <td>\r\n    { moment(row.dob).format('DD MMMM, YYYY') !== 'Invalid date' ?\r\n            <><div>{`${moment().diff(row.dob, 'years')} yrs`}</div>\r\n                <div className=\"small text-muted\">\r\n                <strong><span>Date | {moment(row.dob).format('DD MMM, YYYY')}</span></strong>\r\n           </div></>:\"--\"}\r\n         \r\n    </td>\r\n    <td>\r\n        { moment(row.doe).format('DD MMMM, YYYY') !== 'Invalid date' ?\r\n            <><div>{`${moment().diff(row.doe, 'years')} yrs`}</div>\r\n                <div className=\"small text-muted\">\r\n                <strong><span>Date | {moment(row.doe).format('DD MMM, YYYY')}</span></strong>\r\n           </div></>:\"--\"}\r\n    </td>\r\n    <td>\r\n      \r\n      <strong style={{textTransform:'capitalize'}}>{row.departmentnames}</strong>\r\n    </td>\r\n    <td>\r\n    <strong style={{textTransform:'capitalize'}}>{row.levelname}</strong>\r\n    </td>\r\n    <td>\r\n\r\n    </td>\r\n  </tr>\r\n});\r\n  \r\n  return (\r\n    <>\r\n    <CRow>\r\n      <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\r\n          <thead className=\"thead-light\">\r\n              <tr>\r\n              <th className=\"text-center\">Staff ID</th>\r\n                    <th>Fullname</th>\r\n                    <th className=\"text-center\">BIRTH DATE</th>\r\n                    <th className=\"text-center\">DATE EMPLOYED</th>\r\n                    <th className=\"text-center\">DEPARTMENT</th>\r\n                    <th className=\"text-center\">LEVEL</th>\r\n                    <th className=\"text-center\">JOB ROLES</th>\r\n              </tr>\r\n           </thead>\r\n            <tbody>\r\n                  {tabl}\r\n            </tbody>\r\n      </table>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\nexport default Staffs\r\n  \r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst Staffs = (props) => {\r\n   const history = useHistory()\r\n   let data = props.staffs && Array.isArray(props.staffs) ? props.staffs.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : []\r\n   \r\n   let cont = data.map((row, ind)=>{\r\n    return <tr key={ind}\r\n    onClick={() => history.push(`/staffs/${row.id}`)}>\r\n    <td className=\"text-center\">\r\n     {ind + 1}\r\n    </td>\r\n    <td>\r\n        <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n    </td>\r\n    <td>\r\n            <strong><a href={`mailto:${row.phone1}`}>{row.phone1}</a> <a href={`mailto:${row.phone2}`}>{row.phone2}</a></strong>\r\n    </td>\r\n    <td>\r\n        <strong><a href={`mailto:${row.email}`}>{row.email}</a></strong> \r\n    </td>\r\n    \r\n    <td>\r\n      <div className=\"text-muted \" style={{textTransform:'capitalize'}}>{row.address}</div>\r\n    </td>\r\n  </tr>\r\n})\r\n\r\n   let acct = data.map((row, ind)=>{\r\n    return <tr key={ind}\r\n    onClick={() => history.push(`/staffs/${row.id}`)}>\r\n    <td className=\"text-center\">\r\n     {ind + 1}\r\n    </td>\r\n    <td>\r\n        <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n    </td>\r\n    <td>\r\n        {props.tin}\r\n    </td>\r\n    <td>\r\n        {props.nin}\r\n    </td>\r\n        {props.pen}\r\n    <td>\r\n      \r\n    </td>\r\n  </tr>\r\n})\r\n\r\n   let tabl = data.map((row, ind)=>{\r\n        return <tr key={ind}\r\n        onClick={() => history.push(`/staffs/${row.id}`)}>\r\n        <td className=\"text-center\">\r\n          <div className=\"c-avatar\">\r\n            <img src={'avatars/1.png'} className=\"c-avatar-img\" alt=\"admin@bootstrapmaster.com\" />\r\n            <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n          </div>\r\n        </td>\r\n        <td>\r\n            <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n                <div className=\"small text-muted\">\r\n                <span>{row.employment_no} | {row.departmentname}</span>\r\n            </div>\r\n        </td>\r\n        <td>\r\n            <div className=\"small text-muted\">\r\n                <span>Phone</span>: <strong><a href={`tel:${row.phone1}`}>{row.phone1}</a> <a href={`mailto:${row.phone2}`}>{row.phone2}</a></strong>\r\n            </div>\r\n            <div className=\"small text-muted\">\r\n                <span>Email</span>: <strong><a href={`mailto:${row.email}`}>{row.email}</a></strong> \r\n            </div>\r\n        </td>\r\n        <td>\r\n            <div className=\"small text-muted\">\r\n                <span>Date of Birth</span>: <strong>{row.dob}</strong>\r\n            </div>\r\n            <div className=\"small text-muted\">\r\n                <span>Date of Emply.</span>: <strong>{row.doe}</strong> \r\n            </div>\r\n        </td>\r\n        <td>\r\n          <div className=\"small text-muted \" style={{textTransform:'capitalize'}}>{row.soo}</div>\r\n          <strong style={{textTransform:'capitalize'}}>{row.lga}</strong>\r\n        </td>\r\n        <td>\r\n          <div className=\"text-muted \" style={{textTransform:'capitalize'}}>{row.gender}</div>\r\n        </td>\r\n        <td>\r\n          \r\n        </td>\r\n      </tr>\r\n    });\r\n \r\n \r\n  return (\r\n    <>\r\n    <CRow>\r\n    <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">Staff ID</th>\r\n                    <th>Fullname</th>\r\n                    <th className=\"text-center\">BIRTH DATE</th>\r\n                    <th className=\"text-center\">DATE EMPLOYED</th>\r\n                    <th className=\"text-center\">DEPARTMENT</th>\r\n                    <th className=\"text-center\">LEVEL</th>\r\n                    <th className=\"text-center\">JOB ROLES</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {cont}\r\n                </tbody>\r\n                </table>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n  export default Staffs\r\n  \r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst Staffs = (props) => {\r\n   const history = useHistory()\r\n   let data = props.staffs && Array.isArray(props.staffs) ? props.staffs.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : []\r\n   \r\n   let cont = data.map((row, ind)=>{\r\n    return <tr key={ind}\r\n    onClick={() => history.push(`/staffs/${row.id}`)}>\r\n    <td className=\"text-center\">\r\n     {ind + 1}\r\n    </td>\r\n    <td>\r\n        <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n    </td>\r\n    <td>\r\n            <strong><a href={`mailto:${row.phone1}`}>{row.phone1}</a> <a href={`mailto:${row.phone2}`}>{row.phone2}</a></strong>\r\n    </td>\r\n    <td>\r\n        <strong><a href={`mailto:${row.email}`}>{row.email}</a></strong> \r\n    </td>\r\n    \r\n    <td>\r\n      <div className=\"text-muted \" style={{textTransform:'capitalize'}}>{row.address}</div>\r\n    </td>\r\n  </tr>\r\n})\r\n\r\n   let acct = data.map((row, ind)=>{\r\n    return <tr key={ind}\r\n    onClick={() => history.push(`/staffs/${row.id}`)}>\r\n    <td className=\"text-center\">\r\n     {ind + 1}\r\n    </td>\r\n    <td>\r\n        <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n    </td>\r\n    <td>\r\n        {props.tin}\r\n    </td>\r\n    <td>\r\n        {props.nin}\r\n    </td>\r\n        {props.pen}\r\n    <td>\r\n      \r\n    </td>\r\n  </tr>\r\n})\r\n\r\n   let tabl = data.map((row, ind)=>{\r\n        return <tr key={ind}\r\n        onClick={() => history.push(`/staffs/${row.id}`)}>\r\n        <td className=\"text-center\">\r\n          <div className=\"c-avatar\">\r\n            <img src={'avatars/1.png'} className=\"c-avatar-img\" alt=\"admin@bootstrapmaster.com\" />\r\n            <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n          </div>\r\n        </td>\r\n        <td>\r\n            <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n                <div className=\"small text-muted\">\r\n                <span>{row.employment_no} | {row.departmentname}</span>\r\n            </div>\r\n        </td>\r\n        <td>\r\n            <div className=\"small text-muted\">\r\n                <span>Phone</span>: <strong><a href={`tel:${row.phone1}`}>{row.phone1}</a> <a href={`mailto:${row.phone2}`}>{row.phone2}</a></strong>\r\n            </div>\r\n            <div className=\"small text-muted\">\r\n                <span>Email</span>: <strong><a href={`mailto:${row.email}`}>{row.email}</a></strong> \r\n            </div>\r\n        </td>\r\n        <td>\r\n            <div className=\"small text-muted\">\r\n                <span>Date of Birth</span>: <strong>{row.dob}</strong>\r\n            </div>\r\n            <div className=\"small text-muted\">\r\n                <span>Date of Emply.</span>: <strong>{row.doe}</strong> \r\n            </div>\r\n        </td>\r\n        <td>\r\n          <div className=\"small text-muted \" style={{textTransform:'capitalize'}}>{row.soo}</div>\r\n          <strong style={{textTransform:'capitalize'}}>{row.lga}</strong>\r\n        </td>\r\n        <td>\r\n          <div className=\"text-muted \" style={{textTransform:'capitalize'}}>{row.gender}</div>\r\n        </td>\r\n      </tr>\r\n    });\r\n \r\n \r\n  return (\r\n    <>\r\n    <CRow>\r\n    <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">Staff ID</th>\r\n                    <th>Fullname</th>\r\n                    <th className=\"text-center\">Phone</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                    <th>Address</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {cont}\r\n                </tbody>\r\n                </table>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n  export default Staffs\r\n  \r\n","import React, {useEffect, useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  CCol,\r\n  CContainer,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport moment from 'moment'\r\nimport {getStaffprofessionals  } from \"./../../../actions/staff/staffprofessional\";\r\nimport { checkImage } from './../../../actions/common'\r\n\r\n\r\nconst Staffs = (props) => {\r\n  const [ids, setids] = useState(0)\r\n  useEffect(() => {\r\n    if(ids == 1){\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'staffid':props.datas\r\n        }),\r\n        cat:'selectess',\r\n        table:'staffprofessionals',\r\n        narration:'get Staff professional'\r\n    }\r\n    props.getStaffprofessionals(params)\r\n  }\r\n  }, [props.datas, ids])   \r\n\r\n   let datar = props.staffs && Array.isArray(props.staffs) ? props.staffs.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : [];\r\n   let data = props.staffprofessional && Array.isArray(props.staffprofessional) ? props.staffprofessional.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : []\r\n   let tabl = datar.map((row, ind)=>{\r\n        return <tr key={ind}>\r\n        <td width=\"5%\" className=\"text-center\">\r\n          <div className=\"c-avatar\">\r\n          <img \r\n              src={process.env.REACT_APP_SERVER_URL+ row.photo}\r\n              style={{width:'50px', height:'50px'}}\r\n              height=\"50px\" \r\n              width=\"50px\" \r\n              className=\"c-avatar-img\" \r\n              alt={row.employment_no} \r\n              onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL +'/avatars/1.png' }}\r\n            />\r\n            <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n          </div>\r\n        </td>\r\n        <td width=\"20%\">\r\n            <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n                <div className=\"small text-muted\">\r\n                <span>{row.employment_no} | {row.departmentname}</span>\r\n            </div>\r\n        </td>\r\n        <td >\r\n          <CContainer fluid>\r\n        <CRow xs={12}>\r\n          <ul>\r\n            { \r\n                \r\n                data && Array.isArray(data) && data.length > 0 ? data.filter(rw=>rw !==null && rw !== undefined && parseInt(rw.staffid) === parseInt(row.id)).map((prop, index)=>{\r\n                        let imgx = process.env.REACT_APP_SERVER_URL + prop.links; \r\n                        return (\r\n                          <a target='_blank' className='' href={imgx}><li key={index} className=\"my-0 py-0\" style={{marginTop:'0px', marginBottom:'0px', lineHeight:'normal'}} xs={12} sm={12}>\r\n                                      {prop.level}{\" \"} <strong style={{textTransform:'uppercase'}}>{prop.instituition}</strong>{\" \"}\r\n                                      {moment(prop.issued).format('MMM DD, YYYY')} {\" \"}\r\n                                      \r\n                                 </li></a>\r\n                           \r\n                        )\r\n                    }):<h4 className='text-center'>No Data</h4>\r\n                }\r\n                </ul>\r\n       </CRow>\r\n       </CContainer>\r\n        </td>\r\n      </tr>\r\n    });\r\n  \r\n  return (\r\n    <>\r\n    <CRow>\r\n        <table className=\"table table-hover table-outline mb-0\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th className=\"text-center\">Staff ID </th>\r\n              <th onClick={()=>setids(1)}>Fullnameon <CIcon name=\"cil-cloud-download\"/> </th>\r\n              <th className=\"text-center\">Professional</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tabl}\r\n          </tbody>\r\n        </table>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n  staffprofessional:state.staffprofessionalReducer.staffprofessionals\r\n})\r\nexport default connect(mapStateToProps,{getStaffprofessionals})(Staffs)\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  CCol,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport moment from 'moment'\r\nimport {getStaffexperiences  } from \"./../../../actions/staff/staffexperience\";\r\nimport { checkImage } from './../../../actions/common'\r\n\r\n\r\nconst Staffs = (props) => {\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'staffid':props.datas\r\n        }),\r\n        cat:'selectess',\r\n        table:'staffexperiences',\r\n        narration:'get Staff experience'\r\n    }\r\n    props.getStaffexperiences(params)\r\n  }, [props.datas])   \r\n\r\n   let datar = props.staffs && Array.isArray(props.staffs) ? props.staffs.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : [];\r\n   let data = props.staffexperience && Array.isArray(props.staffexperience) ? props.staffexperience.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined) : []\r\n   let tabl = datar.map((row, ind)=>{\r\n        return <tr key={ind}>\r\n        <td width=\"5%\" className=\"text-center\">\r\n          <div className=\"c-avatar\">\r\n          <img \r\n              src={process.env.REACT_APP_SERVER_URL+ row.photo}\r\n              style={{width:'50px', height:'50px'}}\r\n              height=\"50px\" \r\n              width=\"50px\" \r\n              className=\"c-avatar-img\" \r\n              alt={row.employment_no} \r\n              onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL +'/avatars/1.png' }}\r\n            />\r\n            <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n          </div>\r\n        </td>\r\n        <td width=\"20%\">\r\n            <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n                <div className=\"small text-muted\">\r\n                <span>{row.employment_no} | {row.departmentname}</span>\r\n            </div>\r\n        </td>\r\n        <td className='d-flex'>\r\n        \r\n            { \r\n                \r\n                data && Array.isArray(data) && data.length > 0 ? data.filter(rw=>rw !==null && rw !== undefined && parseInt(rw.staffid) === parseInt(row.id)).map((prop, index)=>{\r\n                        let imgx = process.env.REACT_APP_SERVER_URL + prop.links; \r\n                        return (\r\n                            <tr key={index}> \r\n                                <CCol>\r\n                                      <strong style={{textTransform:'uppercase'}}>{prop.organisation}</strong><br/>\r\n                                        <i style={{textTransform:'capitalize'}}>{prop.position}</i><br/>\r\n                                        {prop.job}<br/>\r\n                                        {moment(prop.started).format('MMM DD, YYYY')}{\" - \"}{moment(prop.ended).format('MMM DD, YYYY')}\r\n                                </CCol>\r\n                            </tr>\r\n                        )\r\n                    }):<h4 className='text-center'>No Data</h4>\r\n                }\r\n       \r\n        </td>\r\n      </tr>\r\n    });\r\n  \r\n  return (\r\n    <>\r\n    <CRow>\r\n        <table className=\"table table-hover table-outline mb-0 d-sm-table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th className=\"text-center\">Staff ID</th>\r\n              <th>Fullname</th>\r\n              <th className=\"text-center\">Experience</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tabl}\r\n          </tbody>\r\n        </table>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n  staffexperience:state.staffexperienceReducer.staffexperiences\r\n})\r\nexport default connect(mapStateToProps,{getStaffexperiences})(Staffs)\r\n\r\n\r\n","import React , { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { \r\n  getStaffattendances, \r\n  getStaffattendancedailys,\r\n  getStaffattendance, \r\n  registerStaffattendance, \r\n  registerStaffattendancedaily,\r\n  updateStaffattendance, \r\n  updateStaffattendancedaily, \r\n  deleteStaffattendance,\r\n  deleteStaffattendancedaily\r\n} from './../../actions/staff/staffattendance';\r\nimport { \r\n  getStaffs, \r\n  getStaff, \r\n  registerStaff,\r\n  updateStaff,  \r\n  deleteStaff\r\n} from './../../actions/staff/staff';\r\nimport moment from'moment'\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CCardHeader,\r\n  CNav,\r\n  CNavLink,\r\n  CNavItem,\r\n  CTabContent,\r\n  CTabPane,\r\n  CCard,\r\n  CCardBody,\r\n  CTabs,\r\n  CButton,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CLabel,\r\n  CInput,\r\n  CForm,\r\n  CFormGroup,\r\n  CSelect,\r\n  CButtonGroup,\r\n  CTooltip\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport StaffDefault from './Staffs/StaffDefault'\r\nimport StaffsChart from './Staffs/StaffsChart'\r\nimport StaffsContact from './Staffs/StaffsContact'\r\nimport StaffsKin from './Staffs/StaffsKin'\r\nimport StaffsPhoto from './Staffs/StaffsPhoto'\r\nimport StaffsData from './Staffs/StaffsData'\r\nimport StaffsEducation from './Staffs/StaffsEducation'\r\nimport StaffsEmployment from './Staffs/StaffsEmployment'\r\nimport StaffsJob from './Staffs/StaffsJob'\r\nimport StaffsLeave from './Staffs/StaffsLeave'\r\nimport StaffsProfessional from './Staffs/StaffsProfessional'\r\nimport StaffsWork from './Staffs/StaffsWork'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Select from 'react-select';\r\n\r\nconst Staffs = (props) => {\r\n    const [active, setActive] = useState(0)\r\n    const [leaveid, setleaveid] = useState(0)\r\n    const [dates, setDates] = useState(new Date())\r\n    const [departmentid, setdepartmentid] = useState([])\r\n    const [levelid, setlevelid] = useState(0)\r\n    const [datastore, setDatastore] = useState([])\r\n    const [data1store, setData1store] = useState([])\r\n    const [dataq, setDataq] = useState([])\r\n    const [data1, setData1] = useState([])\r\n    const [search, setsearch] = useState('')\r\n\r\n    \r\n      useEffect(() => {\r\n        let params = {\r\n          data:JSON.stringify(\r\n          {\r\n              'schoolid':props.user.activeschool.id\r\n          }),\r\n          cat:'selected',\r\n          table:'staffs',\r\n          narration:'get all staffs'\r\n      }\r\n        props.getStaffs(params)\r\n      }, [props.user])\r\n\r\n      useEffect(() => {\r\n        if(props.staffs.staffs && Array.isArray(props.staffs.staffs))\r\n        {\r\n          let d = props.staffs.staffs.filter(rw=>rw!==null).filter(rw =>rw !== null || rw !== undefined);\r\n          let d1 = d.map((p, i)=>p.id);\r\n          let d2 = d1.join(',')\r\n          \r\n          setDataq(d);\r\n          setData1(d2);\r\n          setDatastore(d);\r\n          setData1store(d2);\r\n          //get ids\r\n        } \r\n\r\n      }, [props.staffs.staffs])\r\n      \r\n      let acs = props.user.user.access !== undefined && props.user.user.access.length > 0 ? JSON.parse(props.user.user.access) : {};\r\n      let deparray = []\r\n      let levarr = []\r\n      \r\n      dataq.forEach(element => {\r\n         let a = {};\r\n         let b = {};\r\n         a['label'] = element.departmentname;\r\n         a['value'] = element.departmentid;\r\n         b['label'] = element.levelname;\r\n         b['value'] = element.levelid;\r\n         let d = deparray.filter(rw=>rw.value == element.departmentid)\r\n         if(Array.isArray(d) && d.length > 1){}else{deparray.push(a) ;}\r\n         let e = levarr.filter(rw=>rw.value ==element.levelid)\r\n         if(Array.isArray(e) && e.length > 1){}else{ levarr.push(a) ;}\r\n      });\r\n      \r\n      let secarry = {}\r\n      let sec = []\r\n      \r\n      if(Object.keys(acs).length > 0 && props.isAdmin !== false)\r\n      {\r\n         \r\n          let ids = props.user.activeschool !== undefined ? props.user.activeschool.id : null;\r\n          \r\n          if(acs !== undefined  && acs.hasOwnProperty(ids))\r\n          {\r\n            let acss = Object.keys(acs[ids]);\r\n            \r\n            if(acss !== undefined && acss.includes(\"0\") )\r\n            {\r\n              secarry = acs[ids][0]\r\n              \r\n            }else{\r\n              return <Redirect to=\"/\" />\r\n\r\n            }\r\n           \r\n          }else\r\n          {\r\n           return <Redirect to=\"/\" />\r\n          }\r\n      }else if(props.user.isAdmin === true)\r\n      {\r\n        // return <Redirect to=\"/\" />\r\n      }\r\n      else\r\n      {\r\n          return <Redirect to=\"/\" />\r\n      }\r\n  \r\n      const handleSubmit = () =>{\r\n\r\n      }\r\n\r\n      const handleLev = (event) =>{\r\n        setlevelid(event);\r\n      }\r\n\r\n      const handleDep = (event) =>{\r\n        setdepartmentid(event);\r\n      }\r\n\r\n     \r\n  let data = dataq;\r\n  if(search.length > 0)\r\n  {\r\n    let datas = dataq.filter(rw=>rw.surname.toLowerCase().includes(search.toLowerCase()) \r\n    || rw.firstname.toLowerCase().includes(search.toLowerCase()) \r\n    || rw.middlename.toLowerCase().includes(search.toLowerCase())\r\n    || rw.employment_no.toLowerCase().includes(search.toLowerCase())\r\n    )\r\n    data = datas;\r\n  }\r\n\r\n  let redirectAttendance = () =>{\r\n      window.open(process.env.PUBLIC_URL+\"#/attendance_staff/\")\r\n}\r\n  \r\n  return (\r\n    <>\r\n    <CRow>\r\n    <CCol xs=\"12\" md=\"12\" className=\"mb-4\">\r\n        <CCard>\r\n          <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"9\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">Staffs List <small>{ dates ? <i> Attendance {moment(dates).format(\"DD MMM, YYYY\")}</i>:''}</small></h4>\r\n              <div className=\"small text-muted\">{props.user.activeschool.name}</div>\r\n            </CCol>\r\n            <CCol sm=\"3\" className=\"d-md-block\">\r\n              <CButtonGroup>\r\n              <CTooltip content={`Set Attendance date`}>\r\n              <CButton\r\n                    data-target='#formz' \r\n                    data-toggle=\"collapse\" \r\n                    color=\"primary\"\r\n                    className=\"float-right\"\r\n                    onClick={redirectAttendance}\r\n                    >\r\n                  <CIcon name=\"cil-calendar\"/>\r\n              </CButton>\r\n            </CTooltip>\r\n              <CTooltip content={`Search by department`}>\r\n              <CDropdown className=\"m-0\">\r\n              <CDropdownToggle color=\"dark\" >\r\n              <CIcon name='cil-user-follow'  />\r\n              </CDropdownToggle>\r\n              <CDropdownMenu className='bg-dark'>\r\n                <CForm className=\"px-4 py-3\" >\r\n                <Select\r\n                      closeMenuOnSelect={false}\r\n                      styles={{color:'#000000', backgroundColor:'black'}}\r\n                      value={departmentid}\r\n                      isMulti\r\n                      options={deparray}\r\n                      onChange={handleDep}\r\n                    />   \r\n                </CForm>\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n            </CTooltip>\r\n              <CTooltip content={`Search by level`}>\r\n                <CDropdown className=\"m-0\">\r\n              <CDropdownToggle color=\"info\" >\r\n              <CIcon name='cil-user-follow'  />\r\n              </CDropdownToggle>\r\n              <CDropdownMenu className='bg-info'>\r\n                <CForm className=\"px-4 py-3\" >\r\n                <Select\r\n                      closeMenuOnSelect={true}\r\n                      defaultValue={levelid}\r\n                      isMulti\r\n                      options={levarr}\r\n                      onChange={handleLev}\r\n                    />   \r\n                </CForm>\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n            </CTooltip>\r\n                <CButton \r\n                    data-target='#formz' \r\n                    data-toggle=\"collapse\" \r\n                    color=\"primary\"\r\n                    className=\"float-right\">\r\n                  <CIcon name=\"cil-cloud-download\"/>\r\n                </CButton>\r\n              </CButtonGroup>\r\n            </CCol>\r\n          </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CTabs activeTab={active} onActiveTabChange={idx => setActive(idx)}>\r\n              <CNav variant=\"tabs\">\r\n              <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-chart-pie\"/>\r\n                    { active === 0 && ' Action'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n              <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-chart-pie\"/>\r\n                    { active === 1 && ' Dashboard'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-user\" />\r\n                    { active === 2 && ' Biodata'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-contact\" />\r\n                    { active === 3 && ' Contact'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-map\" />\r\n                    { active === 4 && ' Next of Kins'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                  <CIcon name='cil-image'/>\r\n                    { active === 5 && ' Photo Gallery'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                  <CIcon name='cil-paint'/>\r\n                    { active === 6 && ' Employment'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                  <CIcon name='cil-book'/>\r\n                    { active === 7 && ' Education'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-badge\"/>\r\n                    { active === 8 && ' Professional'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-mug-tea\"/>\r\n                    { active === 9 && ' Work'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-flight-takeoff\"/>\r\n                    { active === 10 && ' Leave'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-weightlifitng\"/>\r\n                    { active === 11 && ' Job'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n               \r\n              </CNav>\r\n              <CTabContent>\r\n                <CTabPane>\r\n                  <StaffDefault \r\n                    staffs={data} \r\n                    setsearch={(e)=>setsearch(e)} \r\n                    dateactive={dates} \r\n                    data1={data1} \r\n                    setDates={(e)=>setDates(e)}/>\r\n                </CTabPane>\r\n                <CTabPane><StaffsChart staffs={data} /></CTabPane>\r\n                <CTabPane><StaffsData staffs={data} /></CTabPane>\r\n                <CTabPane><StaffsContact staffs={data} /></CTabPane>\r\n                <CTabPane><StaffsKin staffs={data} /></CTabPane>\r\n                <CTabPane><StaffsPhoto staffs={data} /></CTabPane>\r\n                <CTabPane><StaffsEmployment staffs={data} /></CTabPane>\r\n                <CTabPane><StaffsEducation staffs={data} datas={data1} /></CTabPane>\r\n                <CTabPane><StaffsProfessional staffs={data} datas={data1} /></CTabPane>\r\n                <CTabPane><StaffsWork staffs={data} datas={data1}  /></CTabPane>\r\n                <CTabPane><StaffsLeave staffs={data} datas={data1} /></CTabPane>\r\n                <CTabPane><StaffsJob staffs={data} datas={data1} /></CTabPane>\r\n              </CTabContent>\r\n            </CTabs>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    staffs : state.staffReducer,\r\n    staffattendance : state.staffattendanceReducer,\r\n    user:state.userReducer\r\n  })\r\n  export default connect(mapStateToProps, {\r\n    getStaffattendances,\r\n    getStaffattendancedailys,\r\n    getStaffattendance,\r\n    registerStaffattendance,\r\n    registerStaffattendancedaily,\r\n    updateStaffattendance,\r\n    updateStaffattendancedaily,\r\n    deleteStaffattendance,\r\n    deleteStaffattendancedaily,\r\n    getStaff,\r\n    getStaffs,\r\n    registerStaff,\r\n    updateStaff,\r\n    deleteStaff\r\n  })(Staffs)\r\n  \r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    STAFF_GET_ONE,\r\n    STAFF_GET_MULTIPLE,\r\n    STAFF_GET_ALL,\r\n    STAFF_GET_BIRTHDAY,\r\n    STAFF_GET_SEARCH,\r\n    STAFF_REGISTER_SUCCESS,\r\n    STAFF_REGISTER_FAIL,\r\n    STAFF_LOADING,\r\n    STAFF_LOADING_ERROR,\r\n    STAFF_UPDATE_SUCCESS,\r\n    STAFF_UPDATE_FAIL,\r\n    STAFF_DELETE_SUCCESS,\r\n    STAFF_DELETE_FAIL\r\n} from \"./../../types/staff/staff\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'staffs';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFF \r\nexport const getStaffs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STAFF \r\nexport const getStaffAll = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                      \r\n                dispatch({\r\n                    type: STAFF_GET_ALL,\r\n                    payload: res.data\r\n                 })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                   type : STAFF_LOADING_ERROR,\r\n                   payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const searchStaff = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_SEARCH,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const birthday = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_BIRTHDAY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET SINGLE STAFF \r\nexport const getStaff = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFF_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFF DELETE\r\nexport const deleteStaff = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFF REGISTER\r\nexport const registerStaff = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFF UPDATE\r\nexport const updateStaff = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STAFFATTENDANCE_GET_ONE,\r\n    STAFFATTENDANCE_GET_MULTIPLE,\r\n    STAFFATTENDANCE_GET_DAILY,\r\n    STAFFATTENDANCE_REGISTER_SUCCESS,\r\n    STAFFATTENDANCE_REGISTER_DAILY,\r\n    STAFFATTENDANCE_REGISTER_FAIL,\r\n    STAFFATTENDANCE_LOADING,\r\n    STAFFATTENDANCE_LOADING_ERROR,\r\n    STAFFATTENDANCE_UPDATE_SUCCESS,\r\n    STAFFATTENDANCE_UPDATE_DAILY,\r\n    STAFFATTENDANCE_UPDATE_FAIL,\r\n    STAFFATTENDANCE_DELETE_SUCCESS,\r\n    STAFFATTENDANCE_DELETE_DAILY,\r\n    STAFFATTENDANCE_DELETE_FAIL\r\n} from \"./../../types/staff/staffattendance\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'access';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFFATTENDANCE \r\nexport const getStaffattendances = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFFATTENDANCE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFFATTENDANCE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFFATTENDANCE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STAFFATTENDANCE \r\nexport const getStaffattendancedailys = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFFATTENDANCE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFFATTENDANCE_GET_DAILY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFFATTENDANCE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STAFFATTENDANCE \r\nexport const getStaffattendance = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFFATTENDANCE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//GET SINGLE STAFFATTENDANCE \r\nexport const getStaffattendancedaily = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFFATTENDANCE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFFATTENDANCE DELETE\r\nexport const deleteStaffattendance = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFATTENDANCE_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFATTENDANCE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFFATTENDANCE DELETE\r\nexport const deleteStaffattendancedaily = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFATTENDANCE_DELETE_DAILY,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFATTENDANCE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFFATTENDANCE REGISTER\r\nexport const registerStaffattendance = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFATTENDANCE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFATTENDANCE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n//STAFFATTENDANCE REGISTER\r\nexport const registerStaffattendancedaily = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFATTENDANCE_REGISTER_DAILY,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFATTENDANCE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFFATTENDANCE UPDATE\r\nexport const updateStaffattendance = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFATTENDANCE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFATTENDANCE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\nexport const updateStaffattendancedaily = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFATTENDANCE_UPDATE_DAILY,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFATTENDANCE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STAFFEXPERIENCE_GET_ONE,\r\n    STAFFEXPERIENCE_GET_MULTIPLE,\r\n    STAFFEXPERIENCE_REGISTER_SUCCESS,\r\n    STAFFEXPERIENCE_REGISTER_FAIL,\r\n    STAFFEXPERIENCE_LOADING,\r\n    STAFFEXPERIENCE_LOADING_ERROR,\r\n    STAFFEXPERIENCE_UPDATE_SUCCESS,\r\n    STAFFEXPERIENCE_UPDATE_FAIL,\r\n    STAFFEXPERIENCE_DELETE_SUCCESS,\r\n    STAFFEXPERIENCE_DELETE_FAIL\r\n} from \"./../../types/staff/staffexperience\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'access';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFFEXPERIENCE \r\nexport const getStaffexperiences = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFFEXPERIENCE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFFEXPERIENCE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFFEXPERIENCE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STAFFEXPERIENCE \r\nexport const getStaffexperience = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFFEXPERIENCE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFFEXPERIENCE DELETE\r\nexport const deleteStaffexperience = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFEXPERIENCE_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFEXPERIENCE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFFEXPERIENCE REGISTER\r\nexport const registerStaffexperience = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFEXPERIENCE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFEXPERIENCE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFFEXPERIENCE UPDATE\r\nexport const updateStaffexperience = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFEXPERIENCE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFEXPERIENCE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STAFFPROFESSIONAL_GET_ONE,\r\n    STAFFPROFESSIONAL_GET_MULTIPLE,\r\n    STAFFPROFESSIONAL_REGISTER_SUCCESS,\r\n    STAFFPROFESSIONAL_REGISTER_FAIL,\r\n    STAFFPROFESSIONAL_LOADING,\r\n    STAFFPROFESSIONAL_LOADING_ERROR,\r\n    STAFFPROFESSIONAL_UPDATE_SUCCESS,\r\n    STAFFPROFESSIONAL_UPDATE_FAIL,\r\n    STAFFPROFESSIONAL_DELETE_SUCCESS,\r\n    STAFFPROFESSIONAL_DELETE_FAIL\r\n} from \"./../../types/staff/staffprofessional\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'access';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFFPROFESSIONAL \r\nexport const getStaffprofessionals = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFFPROFESSIONAL_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFFPROFESSIONAL_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFFPROFESSIONAL_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STAFFPROFESSIONAL \r\nexport const getStaffprofessional = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFFPROFESSIONAL_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFFPROFESSIONAL DELETE\r\nexport const deleteStaffprofessional = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFPROFESSIONAL_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFPROFESSIONAL_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFFPROFESSIONAL REGISTER\r\nexport const registerStaffprofessional = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFPROFESSIONAL_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFPROFESSIONAL_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFFPROFESSIONAL UPDATE\r\nexport const updateStaffprofessional = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFPROFESSIONAL_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFPROFESSIONAL_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STAFFEDUCATION_GET_ONE,\r\n    STAFFEDUCATION_GET_MULTIPLE,\r\n    STAFFEDUCATION_REGISTER_SUCCESS,\r\n    STAFFEDUCATION_REGISTER_FAIL,\r\n    STAFFEDUCATION_LOADING,\r\n    STAFFEDUCATION_LOADING_ERROR,\r\n    STAFFEDUCATION_UPDATE_SUCCESS,\r\n    STAFFEDUCATION_UPDATE_FAIL,\r\n    STAFFEDUCATION_DELETE_SUCCESS,\r\n    STAFFEDUCATION_DELETE_FAIL\r\n} from \"./../../types/staff/staffeducation\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'access';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFFEDUCATION \r\nexport const getStaffeducations = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFFEDUCATION_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFFEDUCATION_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFFEDUCATION_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STAFFEDUCATION \r\nexport const getStaffeducation = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFFEDUCATION_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFFEDUCATION DELETE\r\nexport const deleteStaffeducation = (params, id )=> (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFEDUCATION_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFEDUCATION_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFFEDUCATION REGISTER\r\nexport const registerStaffeducation = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFEDUCATION_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFEDUCATION_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFFEDUCATION UPDATE\r\nexport const updateStaffeducation = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFEDUCATION_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFEDUCATION_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n"],"sourceRoot":""}