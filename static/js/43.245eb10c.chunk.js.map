{"version":3,"sources":["views/setting/Clasz.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/setting/clasz.js"],"names":["connect","state","claszs","claszReducer","school","schoolReducer","getClaszs","getClasz","registerClasz","updateClasz","deleteClasz","props","history","useHistory","useLocation","search","match","useState","collapse","setCollapse","id","setId","dts","setDts","namez","setNamez","abbrv","setAbbrv","useEffect","params","data","JSON","stringify","cat","table","narration","parseInt","dt","name","onReset","tabl","Array","isArray","filter","rw","undefined","map","row","ind","key","className","color","is_active","size","onClick","item","push","num","nu","fd","FormData","append","onActivate","sm","style","textTransform","data-target","data-toggle","e","preventDefault","show","xl","action","method","htmlFor","type","defaultValue","onChange","target","value","placeholder","length","_slicedToArray","arr","i","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","err","unsupportedIterableToArray","TypeError","path","API_PATH_SETTING","dispatch","getState","token","MAIN_TOKEN","CLASZ_LOADING","axios","get","axiosConfig","then","res","CLASZ_GET_MULTIPLE","payload","catch","CLASZ_LOADING_ERROR","CLASZ_GET_ONE","POST","CLASZ_DELETE_SUCCESS","CLASZ_DELETE_FAIL","post","axiosConfig1","CLASZ_REGISTER_SUCCESS","CLASZ_REGISTER_FAIL","CLASZ_UPDATE_SUCCESS","CLASZ_UPDATE_FAIL"],"mappings":"yLAqPeA,uBAJS,SAACC,GAAD,MAAW,CACjCC,OAASD,EAAME,aACfC,OAASH,EAAMI,cAAcD,UAES,CACtCE,cACAC,aACAC,kBACAC,gBACAC,iBALaV,EAxND,SAACW,GACb,IAAMC,EAAUC,cADO,GAELC,cAAcC,OAAOC,MAAM,gBAAiB,IAC9BC,oBAAS,IAHlB,mBAGhBC,EAHgB,KAGNC,EAHM,OAIHF,mBAAS,MAJN,mBAIhBG,EAJgB,KAIZC,EAJY,OAKDJ,mBAAS,IALR,mBAKhBK,EALgB,KAKXC,EALW,OAMGN,mBAAS,IANZ,mBAMhBO,EANgB,KAMTC,EANS,OAOGR,qBAPH,mBAOhBS,EAPgB,KAOTC,EAPS,KAcvBC,qBAAU,WACR,IAAIC,EAAS,CACXC,KAAKC,KAAKC,UACV,CACI,SAAWrB,EAAMP,OAAOgB,KAE5Ba,IAAI,SACJC,MAAM,SACNC,UAAU,cAEZxB,EAAML,UAAUuB,KAEf,CAAClB,EAAMP,OAAOgB,KAGjBQ,qBAAU,WACR,GAAGR,GAAMgB,SAAShB,GAAM,EACxB,CACE,IAAIiB,EAAKf,EACTG,EAASY,EAAGC,MACZX,EAASU,EAAGX,YAEZD,EAAS,IACTE,EAAS,MAGV,CAACP,IAEJ,IAeMmB,EAAU,kBAAKlB,EAAM,OA8BvBmB,GAFO7B,EAAMT,OAAOA,QAAUuC,MAAMC,QAAQ/B,EAAMT,OAAOA,QAAUS,EAAMT,OAAOA,OAAOyC,QAAO,SAAAC,GAAE,OAAU,OAAPA,QAAsBC,IAAPD,KAAoB,IAE1HE,KAAI,SAACC,EAAKC,GACtB,OAAO,wBAAIC,IAAKD,GACN,wBAAIE,UAAU,eAAeF,EAAM,GACnC,4BAAKD,EAAIT,MACT,wBAAIY,UAAU,eAAeH,EAAIrB,OACjC,wBAAIwB,UAAU,eACd,kBAAC,IAAD,CAAWA,UAAU,kBACnB,kBAAC,IAAD,CAAiBC,MAAmC,IAA5Bf,SAASW,EAAIK,WAAmB,UAAY,SAAUC,KAAK,MACnF,uBAAGH,UAAU,eADb,WAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEI,QAAS,SAACC,GAAD,OAAU3C,EAAQ4C,KAAR,kBAAwBT,EAAI3B,OAC/C,uBAAG8B,UAAU,eAAkB,IAFjC,aAGC,kBAAC,IAAD,CACKI,QAAS,kBApDd,SAACV,EAAIa,GACtB,IAAIC,EAAuB,IAAlBtB,SAASqB,GAAa,EAAI,EAC/BE,EAAK,IAAIC,SACbD,EAAGE,OAAO,KAAMjB,GAChBe,EAAGE,OAAO,YAAaH,GACvB/C,EAAMF,YAAYkD,GA+CiBG,CAAWf,EAAI3B,GAAI2B,EAAIK,aACpC,uBAAGF,UAAuC,IAA5Bd,SAASW,EAAIK,WAAmB,kBAAoB,qBACjE,IAHN,KAGyC,IAA5BhB,SAASW,EAAIK,WAAmB,aAAe,YAC7D,kBAAC,IAAD,CAAeE,QAAS,kBA9DtCjC,GADYgB,EA+DqCU,GA9DxC3B,IACTG,EAAOc,QACPlB,GAAY,GAHD,IAACkB,IA+D4C,uBAAGa,UAAU,eAAkB,IAAzE,UACA,kBAAC,IAAD,CAAeI,QAAS,WAAaP,EAAI3B,KAAU,uBAAG8B,UAAU,iBAAoB,IAApF,mBAOlB,OACE,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACA,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMa,GAAG,KACP,wBAAI3C,GAAG,UAAU8B,UAAU,mBAA3B,UACA,yBAAKA,UAAU,mBAAmBc,MAAO,CAACC,cAAc,eAAgBtD,EAAMP,OAAOkC,OAEvF,kBAAC,IAAD,CAAMyB,GAAG,IAAIb,UAAU,cACrB,kBAAC,IAAD,CACIgB,cAAY,SACZC,cAAY,WACZhB,MAAM,UACNG,QAvHD,SAACc,GACdjD,GAAaD,GACbkD,EAAEC,kBAsHYnB,UAAU,eACZ,uBAAGA,UAAU,mBAKnB,kBAAC,IAAD,KACA,2BAAOA,UAAU,oDACX,2BAAOA,UAAU,eACf,4BACE,wBAAIA,UAAU,eAAd,OACA,4BAAI,uBAAGA,UAAU,eAAjB,UACA,wBAAIA,UAAU,eAAd,IAA6B,uBAAGA,UAAU,qBAA1C,gBACA,wBAAIA,UAAU,eAAc,uBAAGA,UAAU,eAAzC,aAGJ,+BACGV,OAOX,kBAAC,IAAD,CAAW8B,KAAMpD,GACjB,kBAAC,IAAD,CAAMqD,GAAI,GAAKnD,GAAG,UAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAaA,GAAG,UAAU8B,UAAU,mBAClC,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMa,GAAG,KACT,4BAAM3C,GAAMgB,SAAShB,GAAM,EAAI,OAAS,MAAxC,IAA+C,2CAE/C,kBAAC,IAAD,CAAM2C,GAAG,IAAIb,UAAU,cACrB,kBAAC,IAAD,CACIC,MAAM,SACNG,QA1GJ,kBAAKnC,GAAY,IA2Gb+B,UAAU,eACZ,uBAAGA,UAAU,qBAMrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsB,OAAO,GAAGC,OAAO,QACtB,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAQC,QAAQ,WAAhB,SACA,kBAAC,IAAD,CACIC,KAAK,OACLvD,GAAG,UACHkB,KAAK,QACLsC,aAAcpD,EACdqD,SAAU,SAACT,GAAD,OAAK3C,EAAS2C,EAAEU,OAAOC,QACjCC,YAAY,YAEhB,kBAAC,IAAD,CAAW9B,UAAU,cAArB,4BAEF,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAQwB,QAAQ,YAAhB,gBACA,kBAAC,IAAD,CACIC,KAAK,OACLvD,GAAG,WACHkB,KAAK,QACLsC,aAAclD,EACdmD,SAAU,SAACT,GAAD,OAAKzC,EAASyC,EAAEU,OAAOC,QACjCC,YAAY,QAEhB,kBAAC,IAAD,CAAW9B,UAAU,cAArB,kDAMN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASyB,KAAK,SAASrB,QA/Id,WACnB,GAAG9B,EAAMyD,OAAS,EAAE,CAClB,IAAItB,EAAK,IAAIC,SACbD,EAAGE,OAAO,OAAQrC,GAClBmC,EAAGE,OAAO,QAASnC,GACnBiC,EAAGE,OAAO,QAAS,UAEhBzC,GAAMgB,SAAShB,GAAM,GAGtBuC,EAAGE,OAAO,KAAMzC,GAChBuC,EAAGE,OAAO,MAAO,UACjBlD,EAAMF,YAAYkD,KAKlBA,EAAGE,OAAO,WAAW,GACrBF,EAAGE,OAAO,MAAO,UACjBlD,EAAMH,cAAcmD,IAEtBpB,MA0HsDc,KAAK,KAAKF,MAAM,WAAU,kBAAC,IAAD,CAAOb,KAAK,iBAApF,WAAuH,IACvH,kBAAC,IAAD,CAASqC,KAAK,QAAQrB,QAASf,EAASc,KAAK,KAAKF,MAAM,UAAS,kBAAC,IAAD,CAAOb,KAAK,YAA7E,mB,gFCrOC,SAAS4C,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAI1C,MAAMC,QAAQyC,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXC,QAA4BA,OAAOC,YAAYC,OAAOJ,GAAjE,CACA,IAAIK,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAK9C,EAET,IACE,IAAK,IAAiC+C,EAA7BC,EAAKV,EAAIE,OAAOC,cAAmBG,GAAMG,EAAKC,EAAGC,QAAQC,QAChEP,EAAKhC,KAAKoC,EAAGb,QAETK,GAAKI,EAAKP,SAAWG,GAH8CK,GAAK,IAK9E,MAAOO,GACPN,GAAK,EACLC,EAAKK,EACL,QACA,IACOP,GAAsB,MAAhBI,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIH,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBL,EAAKC,IAAM,OAAAa,EAAA,GAA2Bd,EAAKC,IGLjF,WACb,MAAM,IAAIc,UAAU,6IHIgF,K,iCILtG,+MAgBMC,EAAOC,IAGA9F,EAAY,SAAAuB,GAAM,OAAI,SAACwE,EAAUC,GAE1CzE,EAAO0E,MAAQC,IACf3E,EAAOK,MAPM,SASbmE,EAAS,CAAC1B,KAAO8B,MACbC,IAAMC,IAAIR,EAAM,CAACtE,UAAS+E,KACrBC,MAAK,SAAAC,GACFT,EAAS,CACL1B,KAAMoC,IACNC,QAASF,EAAIhF,UAGpBmF,OAAM,SAAAjB,GACHK,EAAS,CACL1B,KAAOuC,IACPF,QAAQhB,SAKfzF,EAAW,SAAAa,GAAE,OAAI,SAACiF,EAAUC,GAErCD,EACI,CACA1B,KAAOwC,IACPH,QAAS5F,MAIJV,EAAc,SAAAmB,GAAM,OAAI,SAACwE,EAAUC,GAC5CI,IAAMU,KAAKjB,EAAM,CAACtE,UAAS+E,KACtBC,MAAK,SAAAC,GACFT,EAAS,CACL1B,KAAM0C,IACNL,QAASnF,EAAOT,QAGvB6F,OAAM,SAAAjB,GACHK,EAAS,CACL1B,KAAO2C,IACPN,QAAUhB,SAMbxF,EAAgB,SAAAsB,GAAI,OAAI,SAAAuE,GACjCK,IAAMa,KAAKpB,EAAMrE,EAAM0F,KAClBX,MAAK,SAAAC,GACFT,EAAS,CACL1B,KAAM8C,IACNT,QAASF,EAAIhF,KAAKA,UAGzBmF,OAAM,SAAAjB,GACHK,EAAS,CACL1B,KAAO+C,IACPV,QAAShB,SAKZvF,EAAc,SAACqB,GAAD,OAAU,SAACuE,EAAUC,GAE5CI,IAAMa,KAAKpB,EAAMrE,EAAM0F,KAClBX,MAAK,SAAAC,GACFT,EAAS,CACL1B,KAAMgD,IACNX,QAASF,EAAIhF,KAAKA,UAGzBmF,OAAM,SAAAjB,GACHK,EAAS,CACL1B,KAAOiD,IACPZ,QAAShB","file":"static/js/43.245eb10c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport  moment from 'moment';\r\nimport {getClaszs, getClasz, registerClasz, updateClasz, deleteClasz} from './../../actions/setting/clasz';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CCollapse,\r\n  CFormText,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n  CDropdownToggle,\r\n  CDropdownMenu\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Clasz = (props) => {\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [dts, setDts] = useState('')\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState()\r\n\r\n  const toggle = (e) => {\r\n    setCollapse(!collapse)\r\n    e.preventDefault()\r\n  }\r\n//GET CLASZS PER SCHOOL\r\n  useEffect(() => {\r\n    let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.school.id\r\n      }),\r\n      cat:'select',\r\n      table:'claszs',\r\n      narration:'get claszs'\r\n  }\r\n    props.getClaszs(params)\r\n    \r\n  }, [props.school.id])\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(id && parseInt(id) > 0)\r\n    {\r\n      let dt = dts;\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [id])\r\n\r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onActivate = (rw, num) =>{\r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    props.updateClasz(fd);\r\n  }\r\n  const onReset = () =>setId(null);\r\n  const onClose = () =>setCollapse(false);\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'claszs');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateClasz(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid',1);\r\n        fd.append('cat', 'insert');\r\n        props.registerClasz(fd)\r\n      }\r\n      onReset()\r\n    }\r\n  }\r\n \r\n  let data = props.claszs.claszs && Array.isArray(props.claszs.claszs) ? props.claszs.claszs.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n  let tabl = data.map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                <td className='text-center'>\r\n                <CDropdown className=\"m-0 btn-group \">\r\n                  <CDropdownToggle color={parseInt(row.is_active) === 0 ? 'success' : 'danger'} size=\"sm\">\r\n                  <i className='fa fa-gear'></i> Action\r\n                  </CDropdownToggle>\r\n                  <CDropdownMenu>\r\n                    <CDropdownItem\r\n                      onClick={(item) => history.push(`/claszs/${row.id}`)}\r\n                     ><i className='fa fa-list'></i>{' '} Subjects</CDropdownItem>\r\n                     <CDropdownItem \r\n                          onClick={()=>onActivate(row.id, row.is_active)} >\r\n                          <i className={parseInt(row.is_active) === 0 ? 'fa fa-thumbs-up' : 'fa fa-thumb-down'}></i>\r\n                          {' '}  {parseInt(row.is_active) === 0 ? 'Deactivate' : 'Activate'}</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onEdit(row)} ><i className='fa fa-edit'></i>{' '}  Edit</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onDelete(row.id, row)}><i className='fa fa-remove'></i>{' '}  Delete</CDropdownItem>\r\n                  \r\n                  </CDropdownMenu>\r\n                </CDropdown>\r\n                </td>\r\n              </tr>\r\n  })\r\n  return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">Claszs</h4>\r\n              <div className=\"small text-muted\" style={{textTransform:'capitalize'}}>{props.school.name}</div>\r\n            </CCol>\r\n            <CCol sm=\"7\" className=\"d-md-block\">\r\n              <CButton \r\n                  data-target='#formz' \r\n                  data-toggle=\"collapse\" \r\n                  color=\"primary\" \r\n                  onClick={toggle}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-plus'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Clasz</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-crosshairs'></i> Abbreviate.</th>\r\n                    <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n        <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Clasz</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-name\">Clasz</CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-name\" \r\n                      name=\"namez\"\r\n                      defaultValue={namez}\r\n                      onChange={(e)=>setNamez(e.target.value)}\r\n                      placeholder=\"Science\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Please enter clasz name</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-abbrv\">Clasz Abbrv </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-abbrv\" \r\n                      name=\"abbrv\"\r\n                      defaultValue={abbrv}\r\n                      onChange={(e)=>setAbbrv(e.target.value)}\r\n                      placeholder=\"SCI\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Please enter clasz abbrv (max 6 characters)</CFormText>\r\n                </CFormGroup>\r\n               \r\n              </CForm>\r\n            </CCardBody>\r\n            \r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n      </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  claszs : state.claszReducer,\r\n  school : state.schoolReducer.school,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getClaszs,\r\n  getClasz,\r\n  registerClasz,\r\n  updateClasz,\r\n  deleteClasz\r\n})(Clasz)\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    CLASZ_GET_ONE,\r\n    CLASZ_GET_MULTIPLE,\r\n    CLASZ_REGISTER_SUCCESS,\r\n    CLASZ_REGISTER_FAIL,\r\n    CLASZ_LOADING,\r\n    CLASZ_LOADING_ERROR,\r\n    CLASZ_UPDATE_SUCCESS,\r\n    CLASZ_UPDATE_FAIL,\r\n    CLASZ_DELETE_SUCCESS,\r\n    CLASZ_DELETE_FAIL\r\n} from \"../../types/setting/clasz\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'claszs';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CLASZ \r\nexport const getClaszs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : CLASZ_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CLASZ_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CLASZ_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CLASZ \r\nexport const getClasz = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CLASZ_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CLASZ DELETE\r\nexport const deleteClasz = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CLASZ REGISTER\r\nexport const registerClasz = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CLASZ UPDATE\r\nexport const updateClasz = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n"],"sourceRoot":""}