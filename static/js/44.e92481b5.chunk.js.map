{"version":3,"sources":["views/setting/Claszunit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/setting/claszunit.js"],"names":["connect","state","claszunits","claszunitReducer","claszs","claszReducer","getClaszunits","getClaszunit","registerClaszunit","updateClaszunit","deleteClaszunit","props","claszunit","useParams","loc","useHistory","useLocation","console","log","search","match","useState","collapse","setCollapse","id","setId","name","setNamez","abbrv","setAbbrv","useEffect","params","data","JSON","stringify","cat","table","narration","onReset","rw","dt","onClose","tabl","Array","isArray","filter","undefined","map","row","ind","key","className","color","size","onClick","started","sm","data-target","data-toggle","e","preventDefault","show","xl","parseInt","action","method","htmlFor","type","defaultValue","onChange","target","value","placeholder","length","fd","FormData","append","_slicedToArray","arr","i","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","path","API_PATH_SETTING","dispatch","getState","token","MAIN_TOKEN","CLASZUNIT_LOADING","axios","get","axiosConfig","then","res","CLASZUNIT_GET_MULTIPLE","payload","catch","CLASZUNIT_LOADING_ERROR","CLASZUNIT_GET_ONE","POST","CLASZUNIT_DELETE_SUCCESS","CLASZUNIT_DELETE_FAIL","post","axiosConfig1","CLASZUNIT_REGISTER_SUCCESS","CLASZUNIT_REGISTER_FAIL","CLASZUNIT_UPDATE_SUCCESS","CLASZUNIT_UPDATE_FAIL"],"mappings":"yLAuOeA,uBAJS,SAACC,GAAD,MAAW,CACjCC,WAAaD,EAAME,iBACnBC,OAASH,EAAMI,gBAEuB,CACtCC,kBACAC,iBACAC,sBACAC,oBACAC,qBALaV,EAzMG,SAACW,GACjB,IAAMC,EAAYC,cAEZC,GADUC,cACJC,eACZC,QAAQC,IAAIJ,GACME,cAAcG,OAAOC,MAAM,gBAAiB,IAA9D,IAL2B,EAMKC,oBAAS,GANd,mBAMpBC,EANoB,KAMVC,EANU,OAOPF,mBAAS,IAPF,mBAOpBG,EAPoB,KAOhBC,EAPgB,OAQFJ,mBAAS,IARP,mBAQpBK,EARoB,KAQdC,EARc,OASDN,qBATC,mBASpBO,EAToB,KASbC,EATa,OAULR,qBAVK,6BAiB3BS,qBAAU,WACR,IAAIC,EAAS,CACXC,KAAKC,KAAKC,UACV,CACI,QAAUtB,EAAUA,YAExBuB,IAAI,SACJC,MAAM,aACNC,UAAU,kBAGZ1B,EAAML,cAAcyB,KACnB,IAEH,IAYMO,EAAU,SAACC,EAAIC,GACjBf,EAAM,MACNE,EAAS,IACTE,EAAS,KAEPY,EAAU,SAACF,EAAIC,GACnBjB,GAAY,IA8BVmB,GADO/B,EAAMT,WAAWA,YAAcyC,MAAMC,QAAQjC,EAAMT,WAAWA,YAAcS,EAAMT,WAAWA,WAAW2C,QAAO,SAAAN,GAAE,MAAS,QAANA,GAAuB,OAAPA,QAAsBO,IAAPP,KAAoB,IAClKM,QAAO,SAAAN,GAAE,OAAS,MAANA,KAAYQ,KAAI,SAACC,EAAKC,GAC9C,OAAO,wBAAIC,IAAKD,GACN,wBAAIE,UAAU,eAAeF,EAAM,GACnC,4BAAKD,EAAItB,MACT,wBAAIyB,UAAU,eAAeH,EAAIpB,OACjC,wBAAIuB,UAAU,eACd,kBAAC,IAAD,CAAWA,UAAU,kBACnB,kBAAC,IAAD,CAAiBC,MAAM,UAAUC,KAAK,MACtC,uBAAGF,UAAU,eADb,WAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAeG,QAAS,WAAeN,EAAIxB,KAA3C,YACA,kBAAC,IAAD,CAAe8B,QAAS,kBA5D1Bf,EA4DqCS,EAAIxB,GA5DrCgB,EA4DyCQ,EA3DzDvB,EAAMc,GACNZ,EAASa,EAAGd,MACZG,EAASW,EAAGe,cACZhC,GAAY,GAJD,IAACgB,EAAIC,IA4DF,QACA,kBAAC,IAAD,CAAec,QAAS,WAAaN,EAAIxB,KAAzC,iBAMlB,OACE,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACA,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMgC,GAAG,KACP,wBAAIhC,GAAG,UAAU2B,UAAU,mBAA3B,eACA,yBAAKA,UAAU,oBAAf,sBAEF,kBAAC,IAAD,CAAMK,GAAG,IAAIL,UAAU,cACrB,kBAAC,IAAD,CACIM,cAAY,SACZC,cAAY,WACZN,MAAM,UACNE,QArGD,SAACK,GACdpC,GAAaD,GACbqC,EAAEC,kBAoGYT,UAAU,eACZ,uBAAGA,UAAU,mBAKnB,kBAAC,IAAD,KACA,2BAAOA,UAAU,oDACX,2BAAOA,UAAU,eACf,4BACE,wBAAIA,UAAU,eAAd,OACA,4BAAI,uBAAGA,UAAU,eAAjB,gBACA,wBAAIA,UAAU,eAAd,IAA6B,uBAAGA,UAAU,mBAA1C,UACA,wBAAIA,UAAU,eAAc,uBAAGA,UAAU,eAAzC,aAGJ,+BACGT,OAOX,kBAAC,IAAD,CAAWmB,KAAMvC,GACjB,kBAAC,IAAD,CAAMwC,GAAI,GAAKtC,GAAG,UAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAaA,GAAG,UAAU2B,UAAU,mBAClC,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMK,GAAG,KACT,4BAAMhC,GAAMuC,SAASvC,GAAM,EAAI,OAAS,MAAxC,IAA+C,iDAE/C,kBAAC,IAAD,CAAMgC,GAAG,IAAIL,UAAU,cACrB,kBAAC,IAAD,CACIC,MAAM,SACNE,QAASb,EACTU,UAAU,eACZ,uBAAGA,UAAU,qBAMrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOa,OAAO,GAAGC,OAAO,QACtB,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAQC,QAAQ,WAAhB,cACA,kBAAC,IAAD,CACIC,KAAK,OACL3C,GAAG,UACHE,KAAK,OACL0C,aAAc1C,EACd2C,SAAU,SAACV,GAAD,OAAKhC,EAASgC,EAAEW,OAAOC,QACjCC,YAAY,UAEhB,kBAAC,IAAD,CAAWrB,UAAU,cAArB,sBAEF,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAQe,QAAQ,YAAhB,WACA,kBAAC,IAAD,CACIC,KAAK,OACL3C,GAAG,WACHE,KAAK,QACL0C,aAAcxC,EACdyC,SAAU,SAACV,GAAD,OAAK9B,EAAS8B,EAAEW,OAAOC,QACjCC,YAAY,OAEhB,kBAAC,IAAD,CAAWrB,UAAU,cAArB,iBAMN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASgB,KAAK,SAASb,QAxId,WACnB,GAAG5B,EAAK+C,OAAS,EAAE,CACjB,IAAIC,EAAK,IAAIC,SACbD,EAAGE,OAAO,OAAQlD,GAClBgD,EAAGE,OAAO,QAAShD,GACnB8C,EAAGE,OAAO,QAAS,cAEhBpD,GAAMuC,SAASvC,GAAM,GAGtBkD,EAAGE,OAAO,KAAMpD,GAChBkD,EAAGE,OAAO,MAAO,UACjBjE,EAAMF,gBAAgBiE,KAKtBA,EAAGE,OAAO,UAAWhE,EAAUA,WAC/B8D,EAAGE,OAAO,MAAO,UACjBjE,EAAMH,kBAAkBkE,IAE1BpC,IACAG,MAkHsDY,KAAK,KAAKD,MAAM,WAAU,kBAAC,IAAD,CAAO1B,KAAK,iBAApF,WAAuH,IACvH,kBAAC,IAAD,CAASyC,KAAK,QAAQb,QAAShB,EAASe,KAAK,KAAKD,MAAM,UAAS,kBAAC,IAAD,CAAO1B,KAAK,YAA7E,mB,gFCvNC,SAASmD,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAInC,MAAMC,QAAQkC,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXC,QAA4BA,OAAOC,YAAYC,OAAOJ,GAAjE,CACA,IAAIK,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKxC,EAET,IACE,IAAK,IAAiCyC,EAA7BC,EAAKV,EAAIE,OAAOC,cAAmBG,GAAMG,EAAKC,EAAGC,QAAQC,QAChEP,EAAKQ,KAAKJ,EAAGhB,QAETQ,GAAKI,EAAKV,SAAWM,GAH8CK,GAAK,IAK9E,MAAOQ,GACPP,GAAK,EACLC,EAAKM,EACL,QACA,IACOR,GAAsB,MAAhBI,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIH,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBL,EAAKC,IAAM,OAAAc,EAAA,GAA2Bf,EAAKC,IGLjF,WACb,MAAM,IAAIe,UAAU,6IHIgF,K,iCIJtG,+MAgBMC,EAAOC,IAGA1F,EAAgB,SAAAyB,GAAM,OAAI,SAACkE,EAAUC,GAE9CnE,EAAOoE,MAAQC,IACfrE,EAAOK,MAPM,aASb6D,EAAS,CAAC9B,KAAOkC,MACbC,IAAMC,IAAIR,EAAM,CAAChE,UAASyE,KACrBC,MAAK,SAAAC,GACFT,EAAS,CACL9B,KAAMwC,IACNC,QAASF,EAAI1E,UAGpB6E,OAAM,SAAAjB,GACHK,EAAS,CACL9B,KAAO2C,IACPF,QAAQhB,SAKfrF,EAAe,SAAAiB,GAAE,OAAI,SAACyE,EAAUC,GAEzCD,EACI,CACA9B,KAAO4C,IACPH,QAASpF,MAIJd,EAAkB,SAAAqB,GAAM,OAAI,SAACkE,EAAUC,GAChDI,IAAMU,KAAKjB,EAAM,CAAChE,UAASyE,KACtBC,MAAK,SAAAC,GACFT,EAAS,CACL9B,KAAM8C,IACNL,QAAS7E,EAAOP,QAGvBqF,OAAM,SAAAjB,GACHK,EAAS,CACL9B,KAAO+C,IACPN,QAAUhB,SAMbpF,EAAoB,SAAAwB,GAAI,OAAI,SAAAiE,GACrCK,IAAMa,KAAKpB,EAAM/D,EAAMoF,KAClBX,MAAK,SAAAC,GACFT,EAAS,CACL9B,KAAMkD,IACNT,QAASF,EAAI1E,KAAKA,UAGzB6E,OAAM,SAAAjB,GACHK,EAAS,CACL9B,KAAOmD,IACPV,QAAShB,SAKZnF,EAAkB,SAACuB,GAAD,OAAU,SAACiE,EAAUC,GAEhDI,IAAMa,KAAKpB,EAAM/D,EAAMoF,KAClBX,MAAK,SAAAC,GACFT,EAAS,CACL9B,KAAMoD,IACNX,QAASF,EAAI1E,KAAKA,UAGzB6E,OAAM,SAAAjB,GACHK,EAAS,CACL9B,KAAOqD,IACPZ,QAAShB","file":"static/js/44.e92481b5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from \"react-router-dom\"\r\nimport  moment from 'moment';\r\nimport {getClaszunits, getClaszunit, registerClaszunit, updateClaszunit, deleteClaszunit} from './../../actions/setting/claszunit';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CCollapse,\r\n  CFormText,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n  CDropdownToggle,\r\n  CDropdownMenu\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Claszunit = (props) => {\r\n  const claszunit = useParams()\r\n  const history = useHistory()\r\n  const loc = useLocation()\r\n  console.log(loc)\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [name, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState()\r\n  const [cat, setcat] = useState()\r\n\r\n  const toggle = (e) => {\r\n    setCollapse(!collapse)\r\n    e.preventDefault()\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'claszid':claszunit.claszunit\r\n      }),\r\n      cat:'select',\r\n      table:'claszunits',\r\n      narration:'get claszunits'\r\n\r\n  }\r\n    props.getClaszunits(params)\r\n  }, [])\r\n\r\n  const onEdit = (rw, dt) =>{\r\n      setId(rw);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.started);\r\n      setCollapse(true);\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onActivate = (rw, dt) =>{\r\n    \r\n}\r\n  const onReset = (rw, dt) =>{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n\r\n  const handleSubmit = () =>{\r\n    if(name.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', name);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'claszunits');\r\n\r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateClaszunit(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('claszid', claszunit.claszunit);\r\n        fd.append('cat', 'insert');\r\n        props.registerClaszunit(fd)\r\n      }\r\n      onReset()\r\n      onClose()\r\n    }\r\n  }\r\n \r\n  let data = props.claszunits.claszunits && Array.isArray(props.claszunits.claszunits) ? props.claszunits.claszunits.filter(rw =>rw != 'null' || rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw =>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                <td className='text-center'>\r\n                <CDropdown className=\"m-0 btn-group \">\r\n                  <CDropdownToggle color=\"success\" size=\"sm\">\r\n                  <i className='fa fa-gear'></i> Action\r\n                  </CDropdownToggle>\r\n                  <CDropdownMenu>\r\n                    <CDropdownItem onClick={()=>onActivate(row.id, row)} >Activate</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onEdit(row.id, row)} >Edit</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onDelete(row.id, row)}>Delete</CDropdownItem>\r\n                  </CDropdownMenu>\r\n                </CDropdown>\r\n                </td>\r\n              </tr>\r\n  })\r\n  return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">Class Units</h4>\r\n              <div className=\"small text-muted\">Academic Calendar</div>\r\n            </CCol>\r\n            <CCol sm=\"7\" className=\"d-md-block\">\r\n              <CButton \r\n                  data-target='#formz' \r\n                  data-toggle=\"collapse\" \r\n                  color=\"primary\" \r\n                  onClick={toggle}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-plus'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Class Units</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-calendar'></i> Abbrv</th>\r\n                    <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n        <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Class Units</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-name\">Class unit</CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-name\" \r\n                      name=\"name\"\r\n                      defaultValue={name}\r\n                      onChange={(e)=>setNamez(e.target.value)}\r\n                      placeholder=\"JSS1A\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Please enter unit</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-abbrv\">Abbrv. </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-abbrv\" \r\n                      name=\"abbrv\"\r\n                      defaultValue={abbrv}\r\n                      onChange={(e)=>setAbbrv(e.target.value)}\r\n                      placeholder=\"1A\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Abbreviate</CFormText>\r\n                </CFormGroup>\r\n                \r\n              </CForm>\r\n            </CCardBody>\r\n            \r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n      </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  claszunits : state.claszunitReducer,\r\n  claszs : state.claszReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getClaszunits,\r\n  getClaszunit,\r\n  registerClaszunit,\r\n  updateClaszunit,\r\n  deleteClaszunit\r\n})(Claszunit)\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","\r\nimport axios from 'axios';\r\nimport {\r\n    CLASZUNIT_GET_ONE,\r\n    CLASZUNIT_GET_MULTIPLE,\r\n    CLASZUNIT_REGISTER_SUCCESS,\r\n    CLASZUNIT_REGISTER_FAIL,\r\n    CLASZUNIT_LOADING,\r\n    CLASZUNIT_LOADING_ERROR,\r\n    CLASZUNIT_UPDATE_SUCCESS,\r\n    CLASZUNIT_UPDATE_FAIL,\r\n    CLASZUNIT_DELETE_SUCCESS,\r\n    CLASZUNIT_DELETE_FAIL\r\n} from \"./../../types/setting/claszunit\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'claszunits';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CLASZUNIT \r\nexport const getClaszunits = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : CLASZUNIT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CLASZUNIT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CLASZUNIT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CLASZUNIT \r\nexport const getClaszunit = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CLASZUNIT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CLASZUNIT DELETE\r\nexport const deleteClaszunit = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZUNIT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZUNIT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CLASZUNIT REGISTER\r\nexport const registerClaszunit = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZUNIT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZUNIT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CLASZUNIT UPDATE\r\nexport const updateClaszunit = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZUNIT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZUNIT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n"],"sourceRoot":""}