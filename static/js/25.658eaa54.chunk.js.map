{"version":3,"sources":["views/setting/Form/School.js","views/setting/Table/School.js","views/setting/Stage/School.js","views/setting/Stage/Staff.js","views/setting/Stage/Student.js","views/setting/Form/Calendar.js","views/setting/Table/Calendar.js","views/setting/Stage/Calendar.js","views/setting/Form/Term.js","views/setting/Table/Term.js","views/setting/Stage/Term.js","views/setting/Stage/Terms.js","views/setting/Form/Department.js","views/setting/Table/Department.js","views/setting/Stage/Department.js","actions/setting/unit.js","views/setting/Form/Unit.js","views/setting/Table/Unit.js","views/setting/Stage/Unit.js","views/setting/Form/Subject.js","views/setting/Table/Subject.js","views/setting/Stage/Subject.js","views/setting/Form/Admission.js","views/setting/Table/Admission.js","views/setting/Stage/Admission.js","actions/setting/timetable.js","views/setting/Form/Timetable.js","views/setting/Table/Timetable.js","views/setting/Stage/Timetable.js","views/setting/Form/Clasz.js","views/setting/Table/Clasz.js","views/setting/Stage/Clasz.js","views/setting/Form/Claszunit.js","views/setting/Table/Claszunit.js","views/setting/Stage/Claszunit.js","actions/setting/cbt.js","views/setting/Form/Cbt.js","views/setting/Table/Cbt.js","views/setting/Stage/Cbt.js","actions/setting/cbtexam.js","views/setting/Form/Cbtexam.js","views/setting/Table/Cbtexam.js","views/setting/Stage/Cbtexam.js","views/setting/Form/Account.js","views/setting/Table/Account.js","views/setting/Stage/Account.js","views/setting/Form/Ca.js","views/setting/Table/Ca.js","views/setting/Stage/Ca.js","views/setting/Form/Caunit.js","views/setting/Table/Caunit.js","views/setting/Stage/Caunit.js","actions/setting/grade.js","views/setting/Form/Grade.js","views/setting/Table/Grade.js","views/setting/Stage/Grade.js","views/setting/Form/Gradeunit.js","views/setting/Table/Gradeunit.js","views/setting/Stage/Gradeunit.js","views/setting/Form/Staffclass.js","views/setting/Table/Staffclass.js","views/setting/Stage/Staffclass.js","views/setting/Stage/Staffsubject.js","actions/setting/classfee.js","views/setting/Form/Classfee.js","views/setting/Table/Classfee.js","views/setting/Stage/Classfee.js","views/setting/Form/Week.js","views/setting/Table/Week.js","views/setting/Stage/Week.js","views/setting/Form/Report.js","views/setting/Table/Report.js","views/setting/Stage/Report.js","views/setting/Form/Fee.js","views/setting/Table/Fee.js","views/setting/Stage/Fee.js","actions/setting/expense.js","views/setting/Form/Expense.js","views/setting/Table/Expense.js","views/setting/Stage/Expense.js","actions/setting/expenseunit.js","views/setting/Form/Expenseunit.js","views/setting/Table/Expenseunit.js","views/setting/Stage/Expenseunit.js","actions/setting/inventory.js","views/setting/Form/Inventory.js","views/setting/Table/Inventory.js","views/setting/Stage/Inventory.js","actions/setting/inventoryunit.js","views/setting/Form/Inventoryunit.js","views/setting/Table/Inventoryunit.js","views/setting/Stage/Inventoryunit.js","actions/setting/maintenance.js","views/setting/Form/Maintenance.js","views/setting/Table/Maintenance.js","views/setting/Stage/Maintenance.js","actions/setting/maintenanceunit.js","views/setting/Form/Maintenanceunit.js","views/setting/Table/Maintenanceunit.js","views/setting/Stage/Maintenanceunit.js","actions/setting/office.js","views/setting/Form/Office.js","views/setting/Table/Office.js","views/setting/Stage/Office.js","actions/setting/job.js","views/setting/Form/Job.js","views/setting/Table/Job.js","views/setting/Stage/Job.js","views/setting/Form/Level.js","views/setting/Table/Level.js","views/setting/Stage/Level.js","views/setting/Form/Notice.js","views/setting/Table/Notice.js","views/setting/Stage/Notice.js","views/setting/Setting.js","actions/setting/ca.js","actions/setting/school.js","actions/setting/session.js","actions/setting/admission.js","actions/setting/department.js","actions/setting/fee.js","actions/setting/account.js","views/staff/StaffDashboardSession1.js","views/staff/StaffDashboardDefault.js","actions/setting/term.js","actions/setting/caunit.js","actions/setting/classstaff.js","actions/setting/week.js","actions/setting/level.js","views/setting/Form/Theme.js","views/setting/Table/Theme.js","views/setting/Stage/Theme.js"],"names":["connect","state","schools","schoolReducer","staffs","staffReducer","user","userReducer","registerSchool","updateSchool","deleteSchool","getStaffs","props","useHistory","useLocation","search","match","useState","id","setId","name","setName","abbrv","setAbbrv","phone1","setPhone1","phone2","setPhone2","email","setEmail","typeid","setTypeid","address","setAddress","country","setCountry","states","setStates","links","setLinks","color","setColor","sign","setSign","useEffect","params","data","JSON","stringify","activeschool","cat","table","narration","parseInt","dt","signed","Array","isArray","filter","rw","map","ind","key","value","surname","firstname","xl","className","sm","onClick","onClose","action","method","htmlFor","type","onChange","e","target","placeholder","vlaue","xs","src","process","width","height","alt","onError","onerror","custom","files","variant","length","fd","FormData","append","size","onReset","getSchools","getSchool","history","tabl","undefined","row","style","href","signatoryname","onEdit","onActivate","is_activate","onDelete","editer","submenu","prp","item","push","page","collapse","setCollapse","dts","setDts","Header","icon","para","title","school","toggle","edits","show","prop","index","md","to","backgroundColor","lg","marginTop","marginBottom","fontFamily","textAlign","borderRadius","description","students","studentReducer","sessions","sessionReducer","registerSession","updateSession","deleteSession","namez","setNamez","starts","setStarts","ends","setEnds","started","ended","defaultValue","getSessions","getSession","console","log","moment","format","addr","hasOwnProperty","Calendar","terms","termReducer","registerTerm","updateTerm","deleteTerm","pid","getTerms","getTerm","is_active","cursor","setActiveTerm","ses","sess","num","sch","nu","tem","qid","tems","dat","dat1","sid","departments","departmentReducer","registerDepartment","updateDepartment","deleteDepartment","getDepartments","getDepartment","tag","did","kid","path","API_PATH_SETTING","getUnits","dispatch","getState","token","MAIN_TOKEN","UNIT_LOADING","axios","get","axiosConfig","then","res","UNIT_GET_MULTIPLE","payload","catch","err","UNIT_LOADING_ERROR","deleteUnit","POST","UNIT_DELETE_SUCCESS","UNIT_DELETE_FAIL","registerUnit","post","axiosConfig1","UNIT_REGISTER_SUCCESS","UNIT_REGISTER_FAIL","updateUnit","UNIT_UPDATE_SUCCESS","UNIT_UPDATE_FAIL","units","unitReducer","getUnit","UNIT_GET_ONE","subjects","subjectReducer","registerSubject","updateSubject","deleteSubject","departmentid","setDepartmentid","unitid","setUnitid","departmentname","setDepartmentname","unitname","setUnitname","params1","setElement","subs","sub","unis","uni","getSubjects","getSubject","admissions","admissionReducer","registerAdmission","updateAdmission","deleteAdmission","getAdmissions","getAdmission","getTimetables","TIMETABLE_LOADING","TIMETABLE_GET_MULTIPLE","TIMETABLE_LOADING_ERROR","deleteTimetable","TIMETABLE_DELETE_SUCCESS","TIMETABLE_DELETE_FAIL","registerTimetable","TIMETABLE_REGISTER_SUCCESS","TIMETABLE_REGISTER_FAIL","updateTimetable","TIMETABLE_UPDATE_SUCCESS","TIMETABLE_UPDATE_FAIL","timetables","timetableReducer","getTimetable","TIMETABLE_GET_ONE","claszs","claszReducer","registerClasz","updateClasz","deleteClasz","getClaszs","getClasz","claszunits","claszunitReducer","registerClaszunit","updateClaszunit","deleteClaszunit","getClaszunits","getClaszunit","getCbts","CBT_LOADING","CBT_GET_MULTIPLE","CBT_LOADING_ERROR","deleteCbt","CBT_DELETE_SUCCESS","CBT_DELETE_FAIL","registerCbt","CBT_REGISTER_SUCCESS","CBT_REGISTER_FAIL","updateCbt","CBT_UPDATE_SUCCESS","CBT_UPDATE_FAIL","cbts","cbtReducer","getCbt","CBT_GET_ONE","getCbtexams","CBTEXAM_LOADING","CBTEXAM_GET_MULTIPLE","CBTEXAM_LOADING_ERROR","deleteCbtexam","CBTEXAM_DELETE_SUCCESS","CBTEXAM_DELETE_FAIL","registerCbtexam","CBTEXAM_REGISTER_SUCCESS","CBTEXAM_REGISTER_FAIL","updateCbtexam","CBTEXAM_UPDATE_SUCCESS","CBTEXAM_UPDATE_FAIL","cbtexams","cbtexamReducer","claszid","setClaszid","subjectid","setSubjectid","noq","setNoq","teststart","setteststart","testend","settestend","testtime","settesttime","itemid","itemid1","claszarray","dropdowns","clarray","subjectarray","subarray","themes","themeReducer","getCbtexam","CBTEXAM_GET_ONE","getThemes","setid","setclaszid","setsubjectid","large","setLarge","accordion","setAccordion","store","setstore","qbank","qb","question","parse","block","claszname","Object","keys","pr","ih","qs","includes","score","toggleQue","subjectname","subjecid","classid","qdb","loadQ","questions","closeButton","accounts","accountReducer","registerAccount","updateAccount","deleteAccount","getAccounts","getAccount","cas","caReducer","registerCa","updateCa","deleteCa","maxscore","setMaxscore","getCas","getCa","1","2","3","caunits","caunitReducer","registerCaunit","updateCaunit","deleteCaunit","getCaunits","getCaunit","cz","czs","getGrades","GRADE_LOADING","GRADE_GET_MULTIPLE","GRADE_LOADING_ERROR","deleteGrade","GRADE_DELETE_SUCCESS","GRADE_DELETE_FAIL","registerGrade","GRADE_REGISTER_SUCCESS","GRADE_REGISTER_FAIL","updateGrade","GRADE_UPDATE_SUCCESS","GRADE_UPDATE_FAIL","grades","gradeReducer","getGrade","GRADE_GET_ONE","gradeunits","gradeunitReducer","registerGradeunit","updateGradeunit","deleteGradeunit","minscore","setMinscore","comment","setComment","handleSubmit","getGradeunits","getGradeunit","classstaffs","classstaffReducer","registerClassstaff","updateClassstaff","deleteClassstaff","staff","setStaff","sessionid","termid","clientid","starray","groupid","getClassstaffs","getClassstaff","itemname","clientname","Swal","staffsubjects","staffsubjectReducer","getStaffsubjects","deleteStaffsubject","updateStaffsubject","getClassfees","CLASSFEE_LOADING","CLASSFEE_GET_MULTIPLE","CLASSFEE_LOADING_ERROR","deleteClassfee","CLASSFEE_DELETE_SUCCESS","CLASSFEE_DELETE_FAIL","registerClassfee","CLASSFEE_REGISTER_SUCCESS","CLASSFEE_REGISTER_FAIL","updateClassfee","CLASSFEE_UPDATE_SUCCESS","CLASSFEE_UPDATE_FAIL","classfees","classfeeReducer","fees","feeReducer","getFees","feeid","setFeeid","amount","setAmount","ar","forEach","feename","closeMenuOnSelect","isMulti","options","event","ele","getClassfee","CLASSFEE_GET_ONE","Number","toFixed","weeks","weekReducer","registerWeek","updateWeek","deleteWeek","startdate","setStartdate","enddate","setEnddate","closedate","setClosedate","closed","getWeeks","getWeek","Date","settingz","reports","reportReducer","registerReport","updateReport","deleteReport","settitle","setabbrv","clasz","setclasz","ca","setca","setcomposite","grade","setgrade","settermid","setsessionid","setting","setsetting","setpage","report","ccl","cal","split","co","composite","se","params2","params3","handleSubmitGrade","session_array","term_array","ca_array","checked","toString","d","sel","f","loadca","setting_array","loadset","grade_array","loadgrade","clasz_array","loadSelect","sessionname","termname","prev","join","getReports","getReport","textTransform","modal","setModal","registerFee","updateFee","deleteFee","getFee","getExpenses","EXPENSE_LOADING","EXPENSE_GET_MULTIPLE","EXPENSE_LOADING_ERROR","deleteExpense","EXPENSE_DELETE_SUCCESS","EXPENSE_DELETE_FAIL","registerExpense","EXPENSE_REGISTER_SUCCESS","EXPENSE_REGISTER_FAIL","updateExpense","EXPENSE_UPDATE_SUCCESS","EXPENSE_UPDATE_FAIL","expenses","expenseReducer","getExpense","EXPENSE_GET_ONE","getExpenseunits","EXPENSEUNIT_LOADING","EXPENSEUNIT_GET_MULTIPLE","EXPENSEUNIT_LOADING_ERROR","deleteExpenseunit","EXPENSEUNIT_DELETE_SUCCESS","EXPENSEUNIT_DELETE_FAIL","registerExpenseunit","EXPENSEUNIT_REGISTER_SUCCESS","EXPENSEUNIT_REGISTER_FAIL","updateExpenseunit","EXPENSEUNIT_UPDATE_SUCCESS","EXPENSEUNIT_UPDATE_FAIL","expenseunits","expenseunitReducer","getExpenseunit","EXPENSEUNIT_GET_ONE","getInventorys","INVENTORY_LOADING","INVENTORY_GET_MULTIPLE","INVENTORY_LOADING_ERROR","deleteInventory","INVENTORY_DELETE_SUCCESS","INVENTORY_DELETE_FAIL","registerInventory","INVENTORY_REGISTER_SUCCESS","INVENTORY_REGISTER_FAIL","updateInventory","INVENTORY_UPDATE_SUCCESS","INVENTORY_UPDATE_FAIL","inventorys","inventoryReducer","getInventory","INVENTORY_GET_ONE","getInventoryunits","INVENTORYUNIT_LOADING","INVENTORYUNIT_GET_MULTIPLE","INVENTORYUNIT_LOADING_ERROR","deleteInventoryunit","INVENTORYUNIT_DELETE_SUCCESS","INVENTORYUNIT_DELETE_FAIL","registerInventoryunit","INVENTORYUNIT_REGISTER_SUCCESS","INVENTORYUNIT_REGISTER_FAIL","updateInventoryunit","INVENTORYUNIT_UPDATE_SUCCESS","INVENTORYUNIT_UPDATE_FAIL","inventoryunits","inventoryunitReducer","getInventoryunit","INVENTORYUNIT_GET_ONE","getMaintenances","MAINTENANCE_LOADING","MAINTENANCE_GET_MULTIPLE","MAINTENANCE_LOADING_ERROR","deleteMaintenance","MAINTENANCE_DELETE_SUCCESS","MAINTENANCE_DELETE_FAIL","registerMaintenance","MAINTENANCE_REGISTER_SUCCESS","MAINTENANCE_REGISTER_FAIL","updateMaintenance","MAINTENANCE_UPDATE_SUCCESS","MAINTENANCE_UPDATE_FAIL","maintenances","maintenanceReducer","getMaintenance","MAINTENANCE_GET_ONE","getMaintenanceunits","MAINTENANCEUNIT_LOADING","MAINTENANCEUNIT_GET_MULTIPLE","MAINTENANCEUNIT_LOADING_ERROR","deleteMaintenanceunit","MAINTENANCEUNIT_DELETE_SUCCESS","MAINTENANCEUNIT_DELETE_FAIL","registerMaintenanceunit","MAINTENANCEUNIT_REGISTER_SUCCESS","MAINTENANCEUNIT_REGISTER_FAIL","updateMaintenanceunit","MAINTENANCEUNIT_UPDATE_SUCCESS","MAINTENANCEUNIT_UPDATE_FAIL","maintenanceunits","maintenanceunitReducer","getMaintenanceunit","MAINTENANCEUNIT_GET_ONE","getOffices","OFFICE_LOADING","OFFICE_GET_MULTIPLE","OFFICE_LOADING_ERROR","deleteOffice","OFFICE_DELETE_SUCCESS","OFFICE_DELETE_FAIL","registerOffice","OFFICE_REGISTER_SUCCESS","OFFICE_REGISTER_FAIL","updateOffice","OFFICE_UPDATE_SUCCESS","OFFICE_UPDATE_FAIL","offices","officeReducer","getOffice","OFFICE_GET_ONE","getJobs","JOB_LOADING","JOB_GET_MULTIPLE","JOB_LOADING_ERROR","deleteJob","JOB_DELETE_SUCCESS","JOB_DELETE_FAIL","registerJob","JOB_REGISTER_SUCCESS","JOB_REGISTER_FAIL","updateJob","JOB_UPDATE_SUCCESS","JOB_UPDATE_FAIL","jobs","jobReducer","getJob","JOB_GET_ONE","levels","levelReducer","registerLevel","updateLevel","deleteLevel","getLevels","getLevel","notices","noticeReducer","registerNotice","updateNotice","deleteNotice","setTitle","message","setMessage","source","setSource","mid","getNotices","getNotice","activeTerm","useParams","cats","controls","confirm","perms","Component","acs","access","mainedt","isAdmin","ids","perm","Terms","Theme","CA_LOADING","CA_GET_MULTIPLE","CA_LOADING_ERROR","CA_GET_ONE","CA_DELETE_SUCCESS","CA_DELETE_FAIL","CA_REGISTER_SUCCESS","CA_REGISTER_FAIL","CA_UPDATE_SUCCESS","CA_UPDATE_FAIL","TABLE_NAME","SCHOOL_LOADING","SCHOOL_GET_MULTIPLE","SCHOOL_LOADING_ERROR","SCHOOL_GET_ONE","SCHOOL_DELETE_SUCCESS","SCHOOL_DELETE_FAIL","SCHOOL_REGISTER_SUCCESS","SCHOOL_REGISTER_FAIL","SCHOOL_UPDATE_SUCCESS","SCHOOL_UPDATE_FAIL","SESSION_LOADING","SESSION_GET_MULTIPLE","SESSION_LOADING_ERROR","SESSION_GET_ONE","SESSION_DELETE_SUCCESS","SESSION_DELETE_FAIL","SESSION_REGISTER_SUCCESS","SESSION_REGISTER_FAIL","SESSION_UPDATE_SUCCESS","SESSION_UPDATE_FAIL","ADMISSION_LOADING","ADMISSION_GET_MULTIPLE","ADMISSION_LOADING_ERROR","ADMISSION_GET_ONE","ADMISSION_DELETE_SUCCESS","ADMISSION_DELETE_FAIL","ADMISSION_REGISTER_SUCCESS","ADMISSION_REGISTER_FAIL","ADMISSION_UPDATE_SUCCESS","ADMISSION_UPDATE_FAIL","DEPARTMENT_LOADING","DEPARTMENT_GET_MULTIPLE","DEPARTMENT_LOADING_ERROR","DEPARTMENT_GET_ONE","DEPARTMENT_DELETE_SUCCESS","DEPARTMENT_DELETE_FAIL","DEPARTMENT_REGISTER_SUCCESS","DEPARTMENT_REGISTER_FAIL","DEPARTMENT_UPDATE_SUCCESS","DEPARTMENT_UPDATE_FAIL","FEE_LOADING","FEE_GET_MULTIPLE","FEE_LOADING_ERROR","FEE_GET_ONE","FEE_DELETE_SUCCESS","FEE_DELETE_FAIL","FEE_REGISTER_SUCCESS","FEE_REGISTER_FAIL","FEE_UPDATE_SUCCESS","FEE_UPDATE_FAIL","ACCOUNT_LOADING","ACCOUNT_GET_MULTIPLE","ACCOUNT_LOADING_ERROR","ACCOUNT_GET_ONE","ACCOUNT_DELETE_SUCCESS","ACCOUNT_DELETE_FAIL","ACCOUNT_REGISTER_SUCCESS","ACCOUNT_REGISTER_FAIL","ACCOUNT_UPDATE_SUCCESS","ACCOUNT_UPDATE_FAIL","Dashboard","activeterm","toggleMenu","getUserDatas","getUserSchools","getUserTerms","getUserdropdowns","settSchool","settTerm","showmenu","setShowmenu","myschools","changeSchool","mySchoolData","StaffDashboardMenu","changeTerm","TERM_LOADING","TERM_GET_MULTIPLE","TERM_LOADING_ERROR","TERM_GET_ONE","TERM_DELETE_SUCCESS","TERM_DELETE_FAIL","TERM_REGISTER_SUCCESS","TERM_REGISTER_FAIL","TERM_UPDATE_FAIL","TERM_UPDATE_SUCCESS","CAUNIT_LOADING","CAUNIT_GET_MULTIPLE","CAUNIT_LOADING_ERROR","CAUNIT_GET_ONE","CAUNIT_DELETE_SUCCESS","CAUNIT_DELETE_FAIL","CAUNIT_REGISTER_SUCCESS","CAUNIT_REGISTER_FAIL","CAUNIT_UPDATE_SUCCESS","CAUNIT_UPDATE_FAIL","API_PATH_STAFF","CLASSSTAFF_LOADING","CLASSSTAFF_GET_MULTIPLE","CLASSSTAFF_LOADING_ERROR","CLASSSTAFF_GET_ONE","CLASSSTAFF_DELETE_SUCCESS","CLASSSTAFF_DELETE_FAIL","CLASSSTAFF_REGISTER_SUCCESS","CLASSSTAFF_REGISTER_FAIL","CLASSSTAFF_UPDATE_SUCCESS","CLASSSTAFF_UPDATE_FAIL","WEEK_LOADING","WEEK_GET_MULTIPLE","WEEK_LOADING_ERROR","WEEK_GET_ONE","WEEK_DELETE_SUCCESS","WEEK_DELETE_FAIL","WEEK_REGISTER_SUCCESS","WEEK_REGISTER_FAIL","WEEK_UPDATE_SUCCESS","WEEK_UPDATE_FAIL","LEVEL_LOADING","LEVEL_GET_MULTIPLE","LEVEL_LOADING_ERROR","LEVEL_GET_ONE","LEVEL_DELETE_SUCCESS","LEVEL_DELETE_FAIL","LEVEL_REGISTER_SUCCESS","LEVEL_REGISTER_FAIL","LEVEL_UPDATE_SUCCESS","LEVEL_UPDATE_FAIL","termarray","registerTheme","updateTheme","deleteTheme","moduleid","setModuleid","topic","setTopic","setTermid","setTermname","objective","setObjective","content","setContent","material","setMaterial","termnamex","termnames","termz","module","config","toolbar","editor","getData","4","getTheme","whiteSpace","dangerouslySetInnerHTML","__html","replace"],"mappings":"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","file":"static/js/25.658eaa54.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerSchool, updateSchool, deleteSchool} from './../../../actions/setting/school';\r\nimport {getStaffs} from './../../../actions/staff/staff';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CInputFile,\r\n  CSelect,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst School = (props) => {\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n  const [name, setName] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n  const [phone1, setPhone1] = useState('')\r\n  const [phone2, setPhone2] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [typeid, setTypeid] = useState(null)\r\n  const [address, setAddress] = useState('')\r\n  const [country, setCountry] = useState('')\r\n  const [states, setStates] = useState('')\r\n  const [links, setLinks] = useState('')\r\n  const [color, setColor] = useState('')\r\n  const [sign, setSign] = useState(0)\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n      data:JSON.stringify(\r\n      {\r\n        'schoolid': props.user.activeschool.id\r\n      }),\r\n      cat:'select',\r\n      table:'staffs',\r\n      narration:'get staffs'\r\n    }\r\n    props.getStaffs(params)\r\n    \r\n    \r\n  }, [props.user.activeschool])\r\n  useEffect(() => {\r\n    if(parseInt(props.data.id) > 0){\r\n        let dt = props.data;\r\n        setId(dt.id);\r\n        setName(dt.name);\r\n        setAbbrv(dt.abbrv);\r\n        setTypeid(dt.typeid);\r\n        setPhone1(dt.phone1);\r\n        setPhone2(dt.phone2);\r\n        setEmail(dt.email);\r\n        setLinks(dt.links);\r\n        setSign(dt.signed);\r\n        setColor(dt.color);\r\n        setAddress(dt.address);\r\n        setCountry(dt.country);\r\n        setStates(dt.states);\r\n    }else\r\n    {\r\n      setId(null);\r\n        setName('');\r\n        setAbbrv('');\r\n        setPhone1('');\r\n        setPhone2('');\r\n        setEmail('');\r\n        setAddress('');\r\n        setCountry('');\r\n        setStates('');\r\n\r\n    }\r\n      \r\n  }, [props.data])\r\n\r\n  \r\n\r\n  const handleSubmit = () =>{\r\n    if(name.length > 0)\r\n    {\r\n      let fd = new FormData();\r\n      fd.append('name', name);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('phone1', phone1);\r\n      fd.append('phone2', phone2);\r\n      fd.append('email', email);\r\n      fd.append('typeid', typeid);\r\n      fd.append('country', country);\r\n      fd.append('states', states);\r\n      fd.append('address', address);\r\n      fd.append('files', links);\r\n      fd.append('signed', sign);\r\n      fd.append('color', color);\r\n      fd.append('table', 'schools');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateSchool(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('cat', 'insert');\r\n        props.registerSchool(fd)\r\n      }\r\n      //props.onReset()\r\n    }\r\n  }\r\n\r\n  const changeImg = (e) =>{\r\n    setLinks(e.target.files[0]);\r\n}\r\nlet stafarray = props.staffs && Array.isArray(props.staffs) ? props.staffs : [];\r\n  let starray = stafarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.surname} {rw.firstname}</option>\r\n  })\r\n \r\n   return (\r\n        <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> School</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={props.onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-name\">School</CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-name\"\r\n                      value={name}\r\n                      onChange={(e)=>setName(e.target.value)}\r\n                      placeholder=\"MESL SENIOR SECONDARY SCHOOL\" \r\n                    />\r\n                  <CFormText className=\"help-block\">ENTER THE FULL NAME OF THE SCHOOL</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-abbrv\">Abbrv./Matriculation Number prefix </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-abbrv\" \r\n                      value={abbrv}\r\n                      onChange={(e)=>setAbbrv(e.target.value)}\r\n                      placeholder=\"MESL/KS/\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Abbreviation</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-abbrv\">Phone</CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-phone1\" \r\n                      name=\"phone1\"\r\n                      value={phone1}\r\n                      onChange={(e)=>setPhone1(e.target.value)}\r\n                      placeholder=\"080000000000\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Main phone number</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-phone2\">Alternative Phone </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-phone2\" \r\n                      name=\"phone2\"\r\n                      value={phone2}\r\n                      onChange={(e)=>setPhone2(e.target.value)}\r\n                      placeholder=\"080000000000\" \r\n                    />\r\n                  \r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-email\">Email </CLabel>\r\n                  <CInput \r\n                      type=\"email\" \r\n                      id=\"nf-email\" \r\n                      name=\"email\"\r\n                      value={email}\r\n                      onChange={(e)=>setEmail(e.target.value)}\r\n                      placeholder=\"in@gmail.com\" \r\n                    />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-color\">Theme Color </CLabel>\r\n                  <CInput \r\n                      type=\"color\" \r\n                      id=\"nf-color\" \r\n                      name=\"color\"\r\n                      value={color}\r\n                      onChange={(e)=>setColor(e.target.value)}\r\n                    />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-address\">Address </CLabel>\r\n                  <CInput \r\n                      type=\"textarea\" \r\n                      id=\"nf-address\" \r\n                      name=\"address\"\r\n                      value={address}\r\n                      onChange={(e)=>setAddress(e.target.value)}\r\n                      placeholder=\"12 Bakonle way....\" \r\n                    />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-states\">State </CLabel>\r\n                  <CInput \r\n                      type=\"states\" \r\n                      id=\"nf-states\" \r\n                      name=\"states\"\r\n                      value={states}\r\n                      onChange={(e)=>setStates(e.target.value)}\r\n                      placeholder=\"Lagos State\" \r\n                    />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-country\">Country </CLabel>\r\n                  <CInput \r\n                      type=\"country\" \r\n                      id=\"nf-country\" \r\n                      name=\"country\"\r\n                      value={country}\r\n                      onChange={(e)=>setCountry(e.target.value)}\r\n                      placeholder=\"Nigeria\" \r\n                    />\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"typeid\">Category</CLabel>\r\n                  <CSelect\r\n                      id=\"typeid\" \r\n                      name=\"typeid\"\r\n                      onChange={(e)=>setTypeid(e.target.value)}\r\n                      placeholder=\"\" \r\n                    >\r\n                      <option vlaue=\"1\">Secondary</option>\r\n                      <option vlaue=\"2\">Primary</option>\r\n                  </CSelect>\r\n                  <CFormText className=\"help-block\">Select Signatory</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"type\">Signatory</CLabel>\r\n                  <CInput\r\n                      type=\"text\" \r\n                      id=\"sign\" \r\n                      value={sign}\r\n                      name=\"sign\"\r\n                      onChange={(e)=>setSign(e.target.value)}\r\n                      placeholder=\"Full Name\" \r\n                    />\r\n                      \r\n                  <CFormText className=\"help-block\">Select Signatory</CFormText>\r\n                </CFormGroup>\r\n                \r\n                  <CLabel htmlFor=\"nf-address\">School Logo </CLabel>\r\n                  <CFormGroup className='text-center'>\r\n                  <CRow xs={12}>\r\n                    <CCol xs={12}>\r\n                            <img \r\n                                src={process.env.REACT_APP_SERVER_URL+ links} \r\n                                className=\"m-0 p-0\" \r\n                                width='100px'\r\n                                height='100px'\r\n                                alt={links} \r\n                                onError={(e)=>{e.target.onerror=null; e.target.src='icons/slack.png'} }\r\n                             />\r\n                        </CCol>\r\n                        <CCol xs={12}>\r\n                      <CInputFile \r\n                      custom\r\n                      id=\"custom-file-input\"\r\n                      name='picture1'\r\n                      onChange={changeImg}\r\n                      />\r\n                      <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\r\n                      Choose file...\r\n                      </CLabel>\r\n                      </CCol>\r\n                      </CRow>\r\n                </CFormGroup>\r\n              </CForm>\r\n            </CCardBody>\r\n            \r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  schools : state.schoolReducer,\r\n  staffs : state.staffReducer.staffs,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerSchool,\r\n  updateSchool,\r\n  deleteSchool,\r\n  getStaffs,\r\n})(School)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getSchools, getSchool, registerSchool, updateSchool, deleteSchool} from './../../../actions/setting/school';\r\nimport { useHistory} from 'react-router-dom'\r\nimport {\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CCol,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst School = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>\r\n                  <CRow>\r\n                    <CCol xs={2}>\r\n                      <img\r\n                        src={process.env.REACT_APP_SERVER_URL+ row.links}\r\n                        height='auto'\r\n                        width='100%'\r\n                        onError={(e)=>{e.target.onerror=null; e.target.src='icons/slack.png'} }\r\n                        className='img-fluid'\r\n                      />\r\n                    </CCol>\r\n                    <CCol xs={10}>\r\n                    <strong style={{color:row.color}}>{row.name}</strong>\r\n                    <div className=\"small text-muted\">{row.abbrv}</div>\r\n                    <div className=\"small text-muted\">{row.address}{\" \"}{row.states}{\" \"}{row.country}</div>\r\n                    <span>Phone</span>: <strong><a href={`tel:${row.phone1}`}>{row.phone1}</a> <a href={`mailto:${row.phone2}`}>{row.phone2}</a></strong><br/>\r\n                    <span>Email</span>: <strong><a href={`mailto:${row.email}`}>{row.email}</a></strong> <br/>\r\n                    <span>Signatory</span>: <strong>{row.signatoryname}</strong> <br/>\r\n                    <button onClick={()=>props.onEdit(row)} className='btn btn-sm btn-link hidden-print'><i className='fa fa-edit'></i> Edit</button>\r\n                    <button onClick={()=>props.onActivate(row.id, row.is_activate)} className='btn btn-sm btn-link hidden-print'><i className='fa fa-lock'></i> Lock</button>\r\n                    <button onClick={()=>props.onDelete(row)} className='btn btn-sm btn-link hidden-print'><i className='fa fa-trash hidden-print'></i> Delete</button>\r\n                    </CCol>\r\n                    </CRow>\r\n                </td>\r\n                \r\n                \r\n              { props.editer === true  && props.submenu.length > 0 ? <td className='text-center'>\r\n                <CDropdown className=\"m-0 btn-group \">\r\n                  <CDropdownToggle color=\"success\" size=\"sm\">\r\n                  <i className='fa fa-gear'></i> Action\r\n                  </CDropdownToggle>\r\n                  <CDropdownMenu>\r\n                    {\r\n                      props.submenu.map((prp, ind)=>{\r\n                        return <CDropdownItem onClick={(item) => history.push(`/${prp.page}/${row.id}`)}>{prp.name}</CDropdownItem>\r\n                      })\r\n                    }\r\n                     {props.editer === true ?\r\n                     <>\r\n                      <CDropdownItem onClick={()=>props.onEdit(row)} >Edit</CDropdownItem>\r\n                      <CDropdownItem onClick={()=>props.onDelete(row)}>Delete</CDropdownItem>\r\n                    </>:\"\"\r\n                     }\r\n                  </CDropdownMenu>\r\n                </CDropdown>\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> School</th>\r\n                    { props.editer === true  && props.submenu.length > 0 ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  schools : state.schoolReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getSchools,\r\n  getSchool,\r\n  registerSchool,\r\n  updateSchool,\r\n  deleteSchool\r\n})(School)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport  moment from 'moment';\r\nimport {getSchools, getSchool, deleteSchool} from './../../../actions/setting/school';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport SchoolForm from'./../Form/School'\r\nimport SchoolTable from'./../Table/School'\r\nimport Header from './Header';\r\n\r\n\r\nconst School = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n      data:JSON.stringify({}),\r\n      cat:'all',\r\n      table:'schools',\r\n      narration:'get schools'\r\n  }\r\n    props.getSchools(params)\r\n    \r\n  }, [])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.schools.schools && Array.isArray(props.schools.schools) ? props.schools.schools.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <SchoolTable  \r\n                data={data}\r\n                editer={props.edits}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <SchoolForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  schools : state.schoolReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getSchools,\r\n  deleteSchool\r\n})(School)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n  CContainer,\r\n} from '@coreui/react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport StaffDashboardDefault from './../../staff/StaffDashboardDefault'\r\nimport Header from './Header';\r\n\r\n\r\nconst Staff = (props) => {\r\n\r\n \r\n\r\n  let data = props.para.submenu && Array.isArray(props.para.submenu) ? props.para.submenu : []\r\n   \r\n   return (\r\n       <>\r\n       <CCard>\r\n       <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              />\r\n       </CCard>\r\n       <CRow>\r\n           {\r\n               data.map((prop, index)=>{\r\n                return <CCol sm=\"6\" md=\"4\"><Link key={index} to={`${prop.links}`} style={{color:'teal'}}>\r\n                <CCard className='text-center' style={{backgroundColor:'teal', color:'white'}} >\r\n                  <CCardBody className='text-center flex align-self-center justify-contents-center'>\r\n                    <CContainer>\r\n                    <CRow className='text-center' lg={12} style={{marginTop:'10px', marginBottom:'10px'}}>\r\n                    <CCol>\r\n                       <h5 style={{fontFamily:'Boogaloo'}}>{prop.name}</h5>\r\n                    </CCol>\r\n                    </CRow>\r\n                    <CRow className='text-center flex align-self-center justify-contents-center' lg={12} style={{marginTop:'10px', marginBottom:'20px', textAlign:'center'}}>\r\n                      <CCol>\r\n                        <img\r\n                          src={process.env.PUBLIC_URL + prop.icon}\r\n                          height=\"100px\"\r\n                          style={{borderRadius:'50%'}}\r\n                          />\r\n                      </CCol>\r\n                    </CRow>\r\n                    <CCol>\r\n                       <small style={{fontFamily:'Quicksand'}}>{prop.description}</small>\r\n                    </CCol>\r\n                   \r\n                    </CContainer>\r\n                  </CCardBody>\r\n                </CCard>\r\n                </Link> </CCol>\r\n\r\n               })\r\n           }\r\n        </CRow>\r\n        </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  staffs : state.staffReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  \r\n})(Staff)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CContainer,\r\n} from '@coreui/react'\r\nimport { Link } from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\n\r\nconst Student = (props) => {\r\n  let data = props.para.submenu && Array.isArray(props.para.submenu) ? props.para.submenu : []\r\n  \r\n   return (\r\n       <>\r\n       <CCard>\r\n       <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              />\r\n       </CCard>\r\n       <CRow>\r\n           {\r\n               data.map((prop, index)=>{\r\n                return <CCol sm=\"6\" md=\"4\"><Link key={index} to={`${prop.links}`} style={{color:'teal'}}>\r\n                <CCard className='text-center' style={{backgroundColor:'maroon', color:'white'}} >\r\n                  <CCardBody className='text-center flex align-self-center justify-contents-center'>\r\n                    <CContainer>\r\n                    <CRow className='text-center' lg={12} style={{marginTop:'10px', marginBottom:'10px'}}>\r\n                    <CCol>\r\n                       <h5 style={{fontFamily:'Boogaloo'}}>{prop.name}</h5>\r\n                    </CCol>\r\n                    </CRow>\r\n                    <CRow className='text-center flex align-self-center justify-contents-center' lg={12} style={{marginTop:'10px', marginBottom:'20px', textAlign:'center'}}>\r\n                      <CCol>\r\n                        <img\r\n                          src={process.env.PUBLIC_URL + prop.icon}\r\n                          height=\"100px\"\r\n                          style={{borderRadius:'50%'}}\r\n                          />\r\n                      </CCol>\r\n                    </CRow>\r\n                    <CCol>\r\n                       <small style={{fontFamily:'Quicksand'}}>{prop.description}</small>\r\n                    </CCol>\r\n                   \r\n                    </CContainer>\r\n                  </CCardBody>\r\n                </CCard>\r\n                </Link> </CCol>\r\n\r\n               })\r\n           }\r\n        </CRow>\r\n        </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  students : state.studentReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  \r\n})(Student)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerSession, updateSession, deleteSession} from './../../../actions/setting/session';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Session = (props) => {\r\n    const history = useHistory()\r\n    const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n    const [collapse, setCollapse] = useState(false)\r\n    const [id, setId] = useState('')\r\n    const [dts, setDts] = useState('')\r\n    const [namez, setNamez] = useState('')\r\n    const [starts, setStarts] = useState()\r\n    const [ends, setEnds] = useState()\r\n  \r\n    const toggle = (e) => {\r\n      setCollapse(!collapse)\r\n      e.preventDefault()\r\n    }\r\n  //GET SESSIONS PER SCHOOL\r\n   \r\n  \r\n    //CHANGE STATE AS EDIT OR ADD\r\n    useEffect(() => {\r\n      if(props.data.id && parseInt(props.data.id) > 0)\r\n      {\r\n        let dt = props.data\r\n        setId(dt.id);\r\n        setNamez(dt.name);\r\n        setStarts(dt.started);\r\n        setEnds(dt.ended);\r\n      }else{\r\n        setNamez('');\r\n        setStarts('');\r\n        setEnds('');\r\n      }\r\n      \r\n    }, [props.data])\r\n  \r\n    \r\n    const onReset = () =>setId(null);\r\n    const onClose = () =>setCollapse(false);\r\n  \r\n    const handleSubmit = () =>{\r\n      if(namez.length > 0){\r\n        let fd = new FormData();\r\n        fd.append('name', namez);\r\n        fd.append('started', starts);\r\n        fd.append('ended', ends);\r\n        fd.append('table', 'sessions');\r\n        \r\n  \r\n        if(id && parseInt(id) > 0)\r\n        {\r\n          //UPDATE \r\n          fd.append('id', id);\r\n          fd.append('cat', 'update');\r\n          props.updateSession(fd)\r\n          \r\n        }else\r\n        {\r\n          //INSERT\r\n          fd.append('schoolid', props.user.activeschool.id);\r\n          fd.append('cat', 'insert');\r\n          props.registerSession(fd)\r\n        }\r\n        onReset()\r\n      }\r\n    }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Session</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Session</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"name\"\r\n                  defaultValue={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"2020_2021\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter session</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-starts\">Session Starts </CLabel>\r\n              <CInput \r\n                  type=\"date\" \r\n                  id=\"nf-starts\" \r\n                  name=\"starts\"\r\n                  defaultValue={starts}\r\n                  onChange={(e)=>setStarts(e.target.value)}\r\n                  placeholder=\"date\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter date session starts</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-ends\">Session ends </CLabel>\r\n              <CInput \r\n                  type=\"date\" \r\n                  id=\"nf-ends\" \r\n                  name=\"ends\"\r\n                  defaultValue={ends}\r\n                  onChange={(e)=>setEnds(e.target.value)}\r\n                  placeholder=\"date\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter date session ends</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        \r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  sessions : state.sessionReducer,\r\n  user : state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerSession,\r\n  updateSession,\r\n  deleteSession\r\n})(Session)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport  moment from 'moment';\r\nimport {getSessions, getSession, registerSession, updateSession, deleteSession} from './../../../actions/setting/session';\r\nimport { useHistory} from 'react-router-dom'\r\nimport {\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownToggle,\r\n  CDropdownMenu\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Session = (props) => {\r\n  const history = useHistory()\r\n  console.log(props)\r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{moment(row.started).format('MMM D, YYYY')}</td>\r\n                <td className='text-center'>{moment(row.ended).format('MMM D, YYYY')}</td>\r\n                \r\n              { props.editer === true  || props.submenu.length > 0 ? \r\n              <td className='text-center'>\r\n                <CDropdown className=\"m-0 btn-group \">\r\n                  <CDropdownToggle color=\"success\" size=\"sm\">\r\n                  <i className='fa fa-gear'></i> Action\r\n                  </CDropdownToggle>\r\n                  <CDropdownMenu>\r\n                    {\r\n                      props.submenu.map((prp, ind)=>{\r\n                        let addr = prp.links+row.id+'/0/0/0/0';\r\n                       return <CDropdownItem key={ind} onClick={(item) => history.push(addr)}>{prp.name}</CDropdownItem>\r\n                      })\r\n                    }\r\n                     {props.editer === true ?\r\n                     <>\r\n                      <CDropdownItem onClick={()=>props.onEdit(row)} >Edit</CDropdownItem>\r\n                      <CDropdownItem onClick={()=>props.onDelete(row)}>Delete</CDropdownItem>\r\n                    </>:\"\"\r\n                     }\r\n                  </CDropdownMenu>\r\n                </CDropdown>\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-lighst\" style={{backgroundColor:'navy', color:'white'}}>\r\n                  <tr>\r\n                  <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Session</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-calendar'></i> Start</th>\r\n                    <th className=\"text-center\"><i className='fa fa-calendar'></i> End</th>\r\n                    { props.editer === true  ||  props.submenu.length > 0 ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  sessions : state.sessionReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getSessions,\r\n  getSession,\r\n  registerSession,\r\n  updateSession,\r\n  deleteSession\r\n})(Session)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getSessions, getSession, deleteSession} from './../../../actions/setting/session';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport CalendarForm from'./../Form/Calendar'\r\nimport CalendarTable from'./../Table/Calendar'\r\nimport Header from './Header';\r\n\r\n\r\nconst Session = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n        let params = {\r\n          data:JSON.stringify({\r\n            'schoolid':props.user.activeschool.id\r\n          }),\r\n          cat:'select',\r\n          table:'sessions',\r\n          narration:'get sessions'\r\n      }\r\n        props.getSessions(params)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.sessions.sessions && Array.isArray(props.sessions.sessions) ? props.sessions.sessions.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <CalendarTable  \r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <CalendarForm \r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  sessions : state.sessionReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getSessions,\r\n  deleteSession\r\n})(Session)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerTerm, updateTerm, deleteTerm} from './../../../actions/setting/term';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Term = (props) => {\r\n    const history = useHistory()\r\n    const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n    const [collapse, setCollapse] = useState(false)\r\n    const [id, setId] = useState('')\r\n    const [dts, setDts] = useState('')\r\n    const [namez, setNamez] = useState('')\r\n    const [starts, setStarts] = useState()\r\n    const [ends, setEnds] = useState()\r\n  \r\n    const toggle = (e) => {\r\n      setCollapse(!collapse)\r\n      e.preventDefault()\r\n    }\r\n  //GET TERMS PER SCHOOL\r\n   \r\n  \r\n    //CHANGE STATE AS EDIT OR ADD\r\n    useEffect(() => {\r\n      if(props.data.id && parseInt(props.data.id) > 0)\r\n      {\r\n        let dt = props.data\r\n        setId(dt.id);\r\n        setNamez(dt.name);\r\n        setStarts(dt.started);\r\n        setEnds(dt.ended);\r\n      }else{\r\n        setNamez('');\r\n        setStarts('');\r\n        setEnds('');\r\n      }\r\n      \r\n    }, [props.data])\r\n  \r\n    \r\n    const onReset = () =>setId(null);\r\n    const onClose = () =>setCollapse(false);\r\n  \r\n    const handleSubmit = () =>{\r\n      if(namez.length > 0){\r\n        let fd = new FormData();\r\n        fd.append('name', namez);\r\n        fd.append('started', starts);\r\n        fd.append('ended', ends);\r\n        fd.append('table', 'terms');\r\n        \r\n  \r\n        if(id && parseInt(id) > 0)\r\n        {\r\n          //UPDATE \r\n          fd.append('id', id);\r\n          fd.append('cat', 'update');\r\n          props.updateTerm(fd)\r\n          \r\n        }else\r\n        {\r\n          //INSERT\r\n          fd.append('sessionid', props.pid);\r\n          fd.append('cat', 'insert');\r\n          props.registerTerm(fd)\r\n        }\r\n        onReset()\r\n      }\r\n    }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Term</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Term</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"name\"\r\n                  defaultValue={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"First term\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter term</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-starts\">Term Starts </CLabel>\r\n              <CInput \r\n                  type=\"date\" \r\n                  id=\"nf-starts\" \r\n                  name=\"starts\"\r\n                  defaultValue={starts}\r\n                  onChange={(e)=>setStarts(e.target.value)}\r\n                  placeholder=\"date\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter date term starts</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-ends\">Term ends </CLabel>\r\n              <CInput \r\n                  type=\"date\" \r\n                  id=\"nf-ends\" \r\n                  name=\"ends\"\r\n                  defaultValue={ends}\r\n                  onChange={(e)=>setEnds(e.target.value)}\r\n                  placeholder=\"date\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter date term ends</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        \r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  terms : state.termReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerTerm,\r\n  updateTerm,\r\n  deleteTerm\r\n})(Term)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport  moment from 'moment';\r\nimport {getTerms, getTerm, registerTerm, updateTerm, deleteTerm} from './../../../actions/setting/term';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Term = (props) => {\r\n  const history = useHistory()\r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind} style={{color:parseInt(row.is_active) == 1 ? 'blue':'red'}}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{moment(row.started).format('MMM D, YYYY')}</td>\r\n                <td className='text-center'>{moment(row.ended).format('MMM D, YYYY')}</td>    \r\n              { props.editer === true  || props.submenu.length > 0 ? \r\n              <td className='text-center'>\r\n                <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active, props.user.activeschool.id)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-up text-success' : 'fa-thumbs-down text-danger'} ml-2 px-2`}></i></a>\r\n                <a style={{cursor:'pointer'}} title='Menu' onClick={(item) => history.push(`/setting/3/${props.pid}/${row.id}/0/0/0`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                <a style={{cursor:'pointer'}} title='Edit' onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                <a style={{cursor:'pointer'}} title='Delete' onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n              </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table  table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-lighst\" style={{backgroundColor:'navy', color:'white'}}>\r\n                  <tr>\r\n                  <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Term</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-calendar'></i> Start</th>\r\n                    <th className=\"text-center\"><i className='fa fa-calendar'></i> End</th>\r\n                    { props.editer === true  ||  props.submenu.length > 0 ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n            </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  terms : state.termReducer,\r\n  user: state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getTerms,\r\n  getTerm,\r\n  registerTerm,\r\n  updateTerm,\r\n  deleteTerm\r\n})(Term)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getTerms, getTerm, deleteTerm, setActiveTerm} from './../../../actions/setting/term';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport TermForm from'./../Form/Term'\r\nimport TermTable from'./../Table/Term'\r\nimport Header from './Header';\r\n\r\n\r\nconst Term = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'sessionid':props.pid\r\n        }),\r\n        cat:'select',\r\n        table:'terms',\r\n        narration:'get terms'\r\n  \r\n    }\r\n    props.getTerms(params)\r\n    \r\n  }, [props.pid])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onActivate = (rw, num, sch) =>{\r\n  \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('schoolid', sch);\r\n    fd.append('sessionid', props.pid);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'updateterm');\r\n    fd.append('table', 'terms');\r\n    fd.append('narration', `activate 0r deactivate term ${nu}`);\r\n    props.setActiveTerm(fd);\r\n\r\n  }\r\n\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n\r\n  //GET SESSION NAME\r\n  let ses = props.sessions.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n\r\n  let data = props.terms.terms && Array.isArray(props.terms.terms) ? props.terms.terms.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              pid={props.pid}\r\n              icon={props.para.icon}\r\n              title={sess} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <TermTable  \r\n                pid={props.pid}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n                onActivate={onActivate}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <TermForm \r\n                pid={props.pid}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  terms : state.termReducer,\r\n  sessions : state.sessionReducer.sessions,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getTerms,\r\n  deleteTerm,\r\n  setActiveTerm\r\n})(Term)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n  CContainer,\r\n} from '@coreui/react'\r\nimport { Link } from 'react-router-dom';\r\nimport Header from './Header';\r\n\r\n\r\nconst Term = (props) => {\r\n\r\n //GET SESSION NAME\r\n let ses = props.sessions.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n\r\n //GET SESSION NAME\r\n let tem = props.terms.filter(rw=>parseInt(rw.id) === parseInt(props.qid));\r\n let tems = tem && Array.isArray(tem) && tem.length > 0 ? tem[0].name : 'None'\r\n\r\n  let dat = props.para.submenu && Array.isArray(props.para.submenu) ? props.para.submenu : [];\r\n  let dat1 = dat && Array.isArray(dat) ? dat.filter(rw=>parseInt(rw.id) === 1) : [];\r\n  let data = dat1[0].submenu && Array.isArray(dat1[0].submenu) ? dat1[0].submenu : [];\r\n   \r\n   return (\r\n       <>\r\n       <CCard>\r\n       <Header \r\n              icon={dat1[0].icon}\r\n              title={`${sess} ${tems} ${dat1[0].name}`} \r\n              school={props.school} \r\n              />\r\n       </CCard>\r\n       <CRow>\r\n           {\r\n               data.map((prop, index)=>{\r\n                return <CCol sm=\"6\" md=\"4\"><Link key={index} to={`/setting/${props.sid}/${props.pid}/${props.qid}/${prop.id}/0/0/0`} style={{color:'teal'}}>\r\n                <CCard className='text-center' style={{backgroundColor:'purple', color:'white'}} >\r\n                  <CCardBody className='text-center flex align-self-center justify-contents-center'>\r\n                    <CContainer>\r\n                    <CRow className='text-center' lg={12} style={{marginTop:'10px', marginBottom:'10px'}}>\r\n                    <CCol>\r\n                       <h5 style={{fontFamily:'Boogaloo'}}>{prop.name}</h5>\r\n                    </CCol>\r\n                    </CRow>\r\n                    <CRow className='text-center flex align-self-center justify-contents-center' lg={12} style={{marginTop:'10px', marginBottom:'20px', textAlign:'center'}}>\r\n                      <CCol>\r\n                        <img\r\n                          src={process.env.PUBLIC_URL +  prop.icon}\r\n                          height=\"100px\"\r\n                          style={{borderRadius:'50%'}}\r\n                          />\r\n                      </CCol>\r\n                    </CRow>\r\n                    <CCol>\r\n                       <small style={{fontFamily:'Quicksand'}}>{prop.description}</small>\r\n                    </CCol>\r\n                   \r\n                    </CContainer>\r\n                  </CCardBody>\r\n                </CCard>\r\n                </Link> </CCol>\r\n\r\n               })\r\n           }\r\n        </CRow>\r\n        </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  terms : state.termReducer.terms,\r\n  sessions : state.sessionReducer.sessions\r\n})\r\nexport default connect(mapStateToProps, {\r\n  \r\n})(Term)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerDepartment, updateDepartment, deleteDepartment} from './../../../actions/setting/department';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Department = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'departments');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateDepartment(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerDepartment(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Department</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Department</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Science\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter department name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Dept. Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"SCI\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter department abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  departments : state.departmentReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerDepartment,\r\n  updateDepartment,\r\n  deleteDepartment\r\n})(Department)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getDepartments, getDepartment, registerDepartment, updateDepartment, deleteDepartment} from './../../../actions/setting/department';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Department = (props) => {\r\n  const history = useHistory();\r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                  Array.isArray(props.submenu) && props.submenu.length > 0 ? \r\n                  props.submenu.map((prp, ind)=>{\r\n                            return <a style={{cursor:'pointer'}} key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${row.id}/0/0/0/0`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        }):''\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Department</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  departments : state.departmentReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getDepartments,\r\n  getDepartment,\r\n  registerDepartment,\r\n  updateDepartment,\r\n  deleteDepartment\r\n})(Department)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getDepartments, updateDepartment, deleteDepartment} from './../../../actions/setting/department';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport DepartmentForm from'./../Form/Department'\r\nimport DepartmentTable from'./../Table/Department'\r\nimport Header from './Header';\r\n\r\n\r\nconst Department = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n \r\n  //GET DEPARTMENTS PER SCHOOL\r\n  useEffect(() => {\r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.user.activeschool.id\r\n      }),\r\n      cat:'select',\r\n      table:'departments',\r\n      narration:'get departments'\r\n      }\r\n      props.getDepartments(params)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'departments');\r\n    fd.append('narration', `activate ande disable department ${nu}`);\r\n    props.updateDepartment(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.departments.departments && Array.isArray(props.departments.departments) ? props.departments.departments.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              sid={props.sid}\r\n              pid={props.pid}\r\n              qid={props.qid}\r\n              did={props.did}\r\n              kid={props.kid}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <DepartmentTable  \r\n                data={data}\r\n                sid={props.sid}\r\n                pid={props.pid}\r\n                qid={props.qid}\r\n                did={props.did}\r\n                kid={props.kid}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <DepartmentForm \r\n              sid={props.sid}\r\n              pid={props.pid}\r\n              qid={props.qid}\r\n              did={props.did}\r\n              kid={props.kid}\r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  departments : state.departmentReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getDepartments,\r\n  updateDepartment,\r\n  deleteDepartment\r\n})(Department)\r\n","\r\nimport axios from 'axios';\r\nimport {\r\n    UNIT_GET_ONE,\r\n    UNIT_GET_MULTIPLE,\r\n    UNIT_REGISTER_SUCCESS,\r\n    UNIT_REGISTER_FAIL,\r\n    UNIT_LOADING,\r\n    UNIT_LOADING_ERROR,\r\n    UNIT_UPDATE_SUCCESS,\r\n    UNIT_UPDATE_FAIL,\r\n    UNIT_DELETE_SUCCESS,\r\n    UNIT_DELETE_FAIL\r\n} from \"./../../types/setting/unit\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'units';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL UNIT \r\nexport const getUnits = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : UNIT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: UNIT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : UNIT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE UNIT \r\nexport const getUnit = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : UNIT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//UNIT DELETE\r\nexport const deleteUnit = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: UNIT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : UNIT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//UNIT REGISTER\r\nexport const registerUnit = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: UNIT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : UNIT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //UNIT UPDATE\r\nexport const updateUnit = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: UNIT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : UNIT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerUnit, updateUnit, deleteUnit} from './../../../actions/setting/unit';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Unit = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'units');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateUnit(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('departmentid', props.pid);\r\n        fd.append('cat', 'insert');\r\n        props.registerUnit(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Unit</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Unit</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"JSS2A\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter unit name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Abbrv. </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"2A\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter unit abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  units : state.unitReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerUnit,\r\n  updateUnit,\r\n  deleteUnit\r\n})(Unit)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getUnits, getUnit, registerUnit, updateUnit, deleteUnit} from './../../../actions/setting/unit';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Unit = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Class unit</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  units : state.unitReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getUnits,\r\n  getUnit,\r\n  registerUnit,\r\n  updateUnit,\r\n  deleteUnit\r\n})(Unit)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getUnits, getUnit, deleteUnit} from './../../../actions/setting/unit';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport UnitForm from'./../Form/Unit'\r\nimport UnitTable from'./../Table/Unit'\r\nimport Header from './Header';\r\n\r\n\r\nconst Unit = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'departmentid':props.pid\r\n        }),\r\n        cat:'select',\r\n        table:'units',\r\n        narration:'get units'\r\n  \r\n    }\r\n    props.getUnits(params)\r\n    \r\n  }, [props.pid])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n\r\n  //GET DEPARTMENT NAME\r\n  let ses = props.departments.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n \r\n  let data = props.units.units && Array.isArray(props.units.units) ? props.units.units.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              pid={props.pid}\r\n              icon={props.para.icon}\r\n              title={sess} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <UnitTable  \r\n                pid={props.pid}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <UnitForm \r\n                pid={props.pid}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  units : state.unitReducer,\r\n  departments : state.departmentReducer.departments,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getUnits,\r\n  deleteUnit\r\n})(Unit)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerSubject, updateSubject, deleteSubject} from './../../../actions/setting/subject';\r\nimport {getDepartments} from './../../../actions/setting/department';\r\nimport {getUnits} from './../../../actions/setting/unit';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CSelect,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { setElement } from '../../../actions/common';\r\n\r\n\r\nconst Subject = (props) => {\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n  const [typeid, setTypeid] = useState(null)\r\n  const [departmentid, setDepartmentid] = useState(null)\r\n  const [unitid, setUnitid] = useState(null)\r\n  const [departmentname, setDepartmentname] = useState(null)\r\n  const [unitname, setUnitname] = useState(null)\r\n  //GET DEPARTMENTS PER SCHOOL\r\n  useEffect(() => {\r\n\r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'is_active':0\r\n      }),\r\n      cat:'selected',\r\n      table:'departments',\r\n      narration:'get departments'\r\n        }\r\n      props.getDepartments(params)\r\n\r\n      let params1 = {\r\n        data:JSON.stringify(\r\n        {\r\n            'is_active':0\r\n        }),\r\n        cat:'selected',\r\n        table:'units',\r\n        narration:'get units'\r\n          }\r\n        props.getUnits(params1)\r\n    \r\n    \r\n  }, [])\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setTypeid(dt.typeid);\r\n      setAbbrv(dt.abbrv);\r\n      setDepartmentid(dt.departmentid);\r\n      setUnitid(dt.unitid);\r\n      setDepartmentname(dt.departmentname);\r\n      setUnitname(dt.unitname);\r\n      setElement('nf-department', dt.departmentid)\r\n      setElement('nf-unit', dt.unitid)\r\n      setElement('typeid', dt.typeid)\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n      setDepartmentid(null);\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('departmentid', departmentid);\r\n      fd.append('unitid', unitid);\r\n      fd.append('typeid', typeid);\r\n      fd.append('table', 'subjects');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateSubject(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerSubject(fd)\r\n      }\r\n      setId(null);\r\n      \r\n    }\r\n  }\r\n\r\n  let subs = props.departments.departments;\r\n  let sub = subs !== undefined && Array.isArray(subs) ? subs.filter(rw=>parseInt(rw.is_active) == 0).map((row, ind)=>{\r\n  return <option key={ind} value={row.id}>{row.name}</option>\r\n  }):'';\r\n\r\n  let unis = props.units.units;\r\n  let uni = unis !== undefined && Array.isArray(unis) ? unis.filter(rw=>parseInt(rw.is_active) == 0 && parseInt(rw.departmentid) === parseInt(departmentid)).map((row, ind)=>{\r\n  return <option key={ind} value={row.id}>{row.name}</option>\r\n  }):'';\r\n  \r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Subject</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Subject</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Mathematics\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter subject name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"MATHS\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter subject abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-department\">Department </CLabel>\r\n              <CSelect  \r\n                  id=\"nf-department\" \r\n                  name=\"department\"\r\n                  value={departmentid}\r\n                  onChange={(e)=>setDepartmentid(e.target.value)}\r\n                >\r\n                  {id && parseInt(id) > 0 ?<option value={departmentid}>{departmentname})</option>: <option></option>}\r\n                 {sub}\r\n              </CSelect>\r\n              <CFormText className=\"help-block\">Please select department</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-unit\">Unit </CLabel>\r\n              <CSelect  \r\n                  id=\"nf-unit\" \r\n                  name=\"unit\"\r\n                  value={unitid}\r\n                  onChange={(e)=>setUnitid(e.target.value)}\r\n                >\r\n                {id && parseInt(id) > 0 ?<option value={unitid}>{unitname}</option>: <option></option>}\r\n                 {uni}\r\n              </CSelect>\r\n              <CFormText className=\"help-block\">Please select unit</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n                  <CLabel htmlFor=\"typeid\">Category</CLabel>\r\n                  <CSelect\r\n                      id=\"typeid\" \r\n                      name=\"typeid\"\r\n                      onChange={(e)=>setTypeid(e.target.value)}\r\n                      placeholder=\"\" \r\n                    >\r\n                      <option></option>\r\n                      <option value=\"1\">Secondary</option>\r\n                      <option value=\"2\">Primary</option>\r\n                  </CSelect>\r\n                  <CFormText className=\"help-block\">Select Signatory</CFormText>\r\n                </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  subjects : state.subjectReducer,\r\n  departments : state.departmentReducer,\r\n  units : state.unitReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerSubject,\r\n  updateSubject,\r\n  deleteSubject,\r\n  getDepartments,\r\n  getUnits\r\n})(Subject)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getSubjects, getSubject, registerSubject, updateSubject, deleteSubject} from './../../../actions/setting/subject';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Subject = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                <td className='text-center'>{row.departmentname}</td>\r\n                <td className='text-center'>{row.unitname}</td>\r\n                <td className='text-center'>{parseInt(row.typeid) === 1 ? 'Secondary' :'Primary'}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title='Scheme of Work' onClick={(item) => history.push(`/setting/${props.sid}/${row.id}/0/0/0/0`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Subject</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Department</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Unit</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Category</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  subjects : state.subjectReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getSubjects,\r\n  getSubject,\r\n  registerSubject,\r\n  updateSubject,\r\n  deleteSubject\r\n})(Subject)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getSubjects, updateSubject, deleteSubject} from './../../../actions/setting/subject';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport SubjectForm from'./../Form/Subject'\r\nimport SubjectTable from'./../Table/Subject'\r\nimport Header from './Header';\r\n\r\n\r\nconst Subject = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET SUBJECTS PER SCHOOL\r\n  useEffect(() => {\r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'is_delete':0\r\n      }),\r\n      cat:'selected',\r\n      table:'subjects',\r\n      narration:'get subjects'\r\n        }\r\n      props.getSubjects(params)\r\n   \r\n    \r\n  }, [])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'subjects');\r\n    fd.append('narration', `activate ande disable subject ${nu}`);\r\n    props.updateSubject(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.subjects.subjects && Array.isArray(props.subjects.subjects) ? props.subjects.subjects.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n           sid={props.sid}\r\n           pid={props.pid}\r\n           qid={props.qid}\r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <SubjectTable  \r\n                data={data}\r\n                sid={props.sid}\r\n                pid={props.pid}\r\n                qid={props.qid}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <SubjectForm \r\n                id={id}\r\n                sid={props.sid}\r\n                pid={props.pid}\r\n                qid={props.qid}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  subjects : state.subjectReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getSubjects,\r\n  updateSubject,\r\n  deleteSubject\r\n})(Subject)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerAdmission, updateAdmission, deleteAdmission} from './../../../actions/setting/admission';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Admission = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'admissions');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateAdmission(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerAdmission(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Admission</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Admission</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Science\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter admission name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Dept. Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"SCI\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter admission abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  admissions : state.admissionReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerAdmission,\r\n  updateAdmission,\r\n  deleteAdmission\r\n})(Admission)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getAdmissions, getAdmission, registerAdmission, updateAdmission, deleteAdmission} from './../../../actions/setting/admission';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Admission = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Admission</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  admissions : state.admissionReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getAdmissions,\r\n  getAdmission,\r\n  registerAdmission,\r\n  updateAdmission,\r\n  deleteAdmission\r\n})(Admission)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getAdmissions, updateAdmission, deleteAdmission} from './../../../actions/setting/admission';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport AdmissionForm from'./../Form/Admission'\r\nimport AdmissionTable from'./../Table/Admission'\r\nimport Header from './Header';\r\n\r\n\r\nconst Admission = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET ADMISSIONS PER SCHOOL\r\n  useEffect(() => {\r\n    if(props.activeschool !== undefined && props.activeschool.hasOwnProperty('id') && parseInt(props.activeschool))\r\n    {\r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.activeschool.id\r\n      }),\r\n      cat:'select',\r\n      table:'admissions',\r\n      narration:'get admissions'\r\n        }\r\n      props.getAdmissions(params)\r\n    }\r\n    \r\n  }, [props.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'admissions');\r\n    fd.append('narration', `activate ande disable admission ${nu}`);\r\n    props.updateAdmission(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.admissions.admissions && Array.isArray(props.admissions.admissions) ? props.admissions.admissions.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <AdmissionTable  \r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <AdmissionForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  admissions : state.admissionReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getAdmissions,\r\n  updateAdmission,\r\n  deleteAdmission\r\n})(Admission)\r\n","import axios from 'axios';\r\nimport {\r\n    TIMETABLE_GET_ONE,\r\n    TIMETABLE_GET_MULTIPLE,\r\n    TIMETABLE_REGISTER_SUCCESS,\r\n    TIMETABLE_REGISTER_FAIL,\r\n    TIMETABLE_LOADING,\r\n    TIMETABLE_LOADING_ERROR,\r\n    TIMETABLE_UPDATE_SUCCESS,\r\n    TIMETABLE_UPDATE_FAIL,\r\n    TIMETABLE_DELETE_SUCCESS,\r\n    TIMETABLE_DELETE_FAIL\r\n} from \"../../types/setting/timetable\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'timetables';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL TIMETABLE \r\nexport const getTimetables = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : TIMETABLE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: TIMETABLE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : TIMETABLE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE TIMETABLE \r\nexport const getTimetable = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : TIMETABLE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//TIMETABLE DELETE\r\nexport const deleteTimetable = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: TIMETABLE_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : TIMETABLE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//TIMETABLE REGISTER\r\nexport const registerTimetable = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: TIMETABLE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : TIMETABLE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //TIMETABLE UPDATE\r\nexport const updateTimetable = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: TIMETABLE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : TIMETABLE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerTimetable, updateTimetable, deleteTimetable} from './../../../actions/setting/timetable';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Timetable = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'timetables');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateTimetable(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerTimetable(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Timetable</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Timetable</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Science\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter timetable name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Dept. Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"SCI\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter timetable abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  timetables : state.timetableReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerTimetable,\r\n  updateTimetable,\r\n  deleteTimetable\r\n})(Timetable)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getTimetables, getTimetable, registerTimetable, updateTimetable, deleteTimetable} from './../../../actions/setting/timetable';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Timetable = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Timetable</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  timetables : state.timetableReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getTimetables,\r\n  getTimetable,\r\n  registerTimetable,\r\n  updateTimetable,\r\n  deleteTimetable\r\n})(Timetable)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getTimetables, updateTimetable, deleteTimetable} from './../../../actions/setting/timetable';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport TimetableForm from'./../Form/Timetable'\r\nimport TimetableTable from'./../Table/Timetable'\r\nimport Header from './Header';\r\n\r\n\r\nconst Timetable = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET TIMETABLES PER SCHOOL\r\n  useEffect(() => {\r\n    if(props.activeschool !== undefined && props.activeschool.hasOwnProperty('id') && parseInt(props.activeschool))\r\n    {\r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.activeschool.id\r\n      }),\r\n      cat:'select',\r\n      table:'timetables',\r\n      narration:'get timetables'\r\n        }\r\n      props.getTimetables(params)\r\n    }\r\n    \r\n  }, [props.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'timetables');\r\n    fd.append('narration', `activate ande disable timetable ${nu}`);\r\n    props.updateTimetable(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.timetables.timetables && Array.isArray(props.timetables.timetables) ? props.timetables.timetables.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <TimetableTable  \r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <TimetableForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  timetables : state.timetableReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getTimetables,\r\n  updateTimetable,\r\n  deleteTimetable\r\n})(Timetable)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerClasz, updateClasz, deleteClasz} from './../../../actions/setting/clasz';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CSelect\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { setElement } from '../../../actions/common';\r\n\r\n\r\nconst Clasz = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n  const [typeid, setTypeid] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n      setTypeid(dt.typeid);\r\n      setElement('typeid', dt.typeid)\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      //fd.append('typeid', typeid);\r\n      fd.append('table', 'claszs');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateClasz(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('typeid', props.user.activeschool.typeid);\r\n        fd.append('cat', 'insert');\r\n        props.registerClasz(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Clasz</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Clasz</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Science\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter clasz name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Dept. Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"SCI\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter clasz abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n                  <CLabel htmlFor=\"typeid\">Category</CLabel>\r\n                  <CSelect\r\n                      id=\"typeid\" \r\n                      name=\"typeid\"\r\n                      onChange={(e)=>setTypeid(e.target.value)}\r\n                      placeholder=\"\" \r\n                    >\r\n                      <option></option>\r\n                      <option value=\"1\">Secondary</option>\r\n                      <option value=\"2\">Primary</option>\r\n                  </CSelect>\r\n                  <CFormText className=\"help-block\">Select Signatory</CFormText>\r\n                </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  claszs : state.claszReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerClasz,\r\n  updateClasz,\r\n  deleteClasz\r\n})(Clasz)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getClaszs, getClasz, registerClasz, updateClasz, deleteClasz} from './../../../actions/setting/clasz';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Clasz = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                <td className='text-center'>{parseInt(row.typeid) === 1 ? 'Secondary' :'Primary'}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${row.id}/0/0/0/0/0`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Clasz</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> SCHOOL</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  claszs : state.claszReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getClaszs,\r\n  getClasz,\r\n  registerClasz,\r\n  updateClasz,\r\n  deleteClasz\r\n})(Clasz)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getClaszs, updateClasz, deleteClasz} from './../../../actions/setting/clasz';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport ClaszForm from'./../Form/Clasz'\r\nimport ClaszTable from'./../Table/Clasz'\r\nimport Header from './Header';\r\n\r\n\r\nconst Clasz = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET CLASZS PER SCHOOL\r\n  useEffect(() => {\r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'typeid':props.user.activeschool.typeid\r\n      }),\r\n      cat:'selected',\r\n      table:'claszs',\r\n      narration:'get claszs'\r\n      }\r\n      props.getClaszs(params)\r\n    }\r\n    \r\n  }, [props.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'claszs');\r\n    fd.append('narration', `activate ande disable clasz ${nu}`);\r\n    props.updateClasz(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.claszs.claszs && Array.isArray(props.claszs.claszs) ? props.claszs.claszs.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n          />\r\n         <CCardBody className='table-responsive'>\r\n            <ClaszTable  \r\n                sid={props.sid}\r\n                pid={props.pid}\r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <ClaszForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  claszs : state.claszReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getClaszs,\r\n  updateClasz,\r\n  deleteClasz\r\n})(Clasz)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerClaszunit, updateClaszunit, deleteClaszunit} from './../../../actions/setting/claszunit';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Claszunit = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'claszunits');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateClaszunit(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('claszid', props.pid);\r\n        fd.append('cat', 'insert');\r\n        props.registerClaszunit(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Class unit</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Unit</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"JSS2A\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter claszunit name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Abbrv. </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"2A\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter claszunit abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  claszunits : state.claszunitReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerClaszunit,\r\n  updateClaszunit,\r\n  deleteClaszunit\r\n})(Claszunit)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getClaszunits, getClaszunit, registerClaszunit, updateClaszunit, deleteClaszunit} from './../../../actions/setting/claszunit';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Claszunit = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Class unit</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  claszunits : state.claszunitReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getClaszunits,\r\n  getClaszunit,\r\n  registerClaszunit,\r\n  updateClaszunit,\r\n  deleteClaszunit\r\n})(Claszunit)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getClaszunits, getClaszunit, deleteClaszunit} from './../../../actions/setting/claszunit';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport ClaszunitForm from'./../Form/Claszunit'\r\nimport ClaszunitTable from'./../Table/Claszunit'\r\nimport Header from './Header';\r\n\r\n\r\nconst Claszunit = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'claszid':props.pid\r\n        }),\r\n        cat:'select',\r\n        table:'claszunits',\r\n        narration:'get claszunits'\r\n  \r\n    }\r\n    props.getClaszunits(params)\r\n    \r\n  }, [props.pid])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n\r\n  //GET CLASZ NAME\r\n  let ses = props.claszs.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n \r\n  let data = props.claszunits.claszunits && Array.isArray(props.claszunits.claszunits) ? props.claszunits.claszunits.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              pid={props.pid}\r\n              icon={props.para.icon}\r\n              title={sess} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <ClaszunitTable  \r\n                pid={props.pid}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <ClaszunitForm \r\n                pid={props.pid}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  claszunits : state.claszunitReducer,\r\n  claszs : state.claszReducer.claszs,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getClaszunits,\r\n  deleteClaszunit\r\n})(Claszunit)\r\n","import axios from 'axios';\r\nimport {\r\n    CBT_GET_ONE,\r\n    CBT_GET_MULTIPLE,\r\n    CBT_REGISTER_SUCCESS,\r\n    CBT_REGISTER_FAIL,\r\n    CBT_LOADING,\r\n    CBT_LOADING_ERROR,\r\n    CBT_UPDATE_SUCCESS,\r\n    CBT_UPDATE_FAIL,\r\n    CBT_DELETE_SUCCESS,\r\n    CBT_DELETE_FAIL\r\n} from \"../../types/setting/cbt\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'cbts';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CBT \r\nexport const getCbts = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : CBT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CBT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CBT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CBT \r\nexport const getCbt = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CBT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CBT DELETE\r\nexport const deleteCbt = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CBT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CBT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CBT REGISTER\r\nexport const registerCbt = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CBT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CBT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CBT UPDATE\r\nexport const updateCbt = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CBT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CBT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerCbt, updateCbt, deleteCbt} from './../../../actions/setting/cbt';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CSelect\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { setElement } from '../../../actions/common';\r\n\r\n\r\nconst Cbt = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n  const [typeid, setTypeid] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'cbts');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateCbt(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerCbt(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Cbt</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Cbt</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Science\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter cbt name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Dept. Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"SCI\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter cbt abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n                  <CLabel htmlFor=\"typeid\">Category</CLabel>\r\n                  <CSelect\r\n                      id=\"typeid\" \r\n                      name=\"typeid\"\r\n                      onChange={(e)=>setTypeid(e.target.value)}\r\n                      placeholder=\"\" \r\n                    >\r\n                      <option></option>\r\n                      <option value=\"1\">Secondary</option>\r\n                      <option value=\"2\">Primary</option>\r\n                  </CSelect>\r\n                  <CFormText className=\"help-block\">Select Signatory</CFormText>\r\n                </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  cbts : state.cbtReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerCbt,\r\n  updateCbt,\r\n  deleteCbt\r\n})(Cbt)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getCbts, getCbt, registerCbt, updateCbt, deleteCbt} from './../../../actions/setting/cbt';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Cbt = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${row.id}/0/0/0/0/0`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i>Test Title</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  cbts : state.cbtReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getCbts,\r\n  getCbt,\r\n  registerCbt,\r\n  updateCbt,\r\n  deleteCbt\r\n})(Cbt)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getCbts, updateCbt, deleteCbt} from './../../../actions/setting/cbt';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport CbtForm from'./../Form/Cbt'\r\nimport CbtTable from'./../Table/Cbt'\r\nimport Header from './Header';\r\n\r\n\r\nconst Cbt = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET CBTS PER SCHOOL\r\n  useEffect(() => {\r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'is_active':0\r\n      }),\r\n      cat:'selected',\r\n      table:'cbts',\r\n      narration:'get cbts'\r\n      }\r\n      props.getCbts(params)\r\n    }\r\n    \r\n  }, [props.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'cbts');\r\n    fd.append('narration', `activate ande disable cbt ${nu}`);\r\n    props.updateCbt(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.cbts.cbts && Array.isArray(props.cbts.cbts) ? props.cbts.cbts.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n          />\r\n         <CCardBody className='table-responsive'>\r\n            <CbtTable  \r\n                sid={props.sid}\r\n                pid={props.pid}\r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <CbtForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  cbts : state.cbtReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getCbts,\r\n  updateCbt,\r\n  deleteCbt\r\n})(Cbt)\r\n","import axios from 'axios';\r\nimport {\r\n    CBTEXAM_GET_ONE,\r\n    CBTEXAM_GET_MULTIPLE,\r\n    CBTEXAM_REGISTER_SUCCESS,\r\n    CBTEXAM_REGISTER_FAIL,\r\n    CBTEXAM_LOADING,\r\n    CBTEXAM_LOADING_ERROR,\r\n    CBTEXAM_UPDATE_SUCCESS,\r\n    CBTEXAM_UPDATE_FAIL,\r\n    CBTEXAM_DELETE_SUCCESS,\r\n    CBTEXAM_DELETE_FAIL\r\n} from \"../../types/setting/cbtexam\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'cbtexams';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CBTEXAM \r\nexport const getCbtexams = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : CBTEXAM_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CBTEXAM_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CBTEXAM_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CBTEXAM \r\nexport const getCbtexam = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CBTEXAM_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CBTEXAM DELETE\r\nexport const deleteCbtexam = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CBTEXAM_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CBTEXAM_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CBTEXAM REGISTER\r\nexport const registerCbtexam = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CBTEXAM_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CBTEXAM_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CBTEXAM UPDATE\r\nexport const updateCbtexam = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CBTEXAM_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CBTEXAM_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerCbtexam, updateCbtexam, deleteCbtexam} from './../../../actions/setting/cbtexam';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CTextarea,\r\n  CSelect\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {setElement} from './../../../actions/common'\r\n\r\n\r\nconst Cbtexam = (props) => {\r\n  const [id, setId] = useState(null)\r\n  const [claszid, setClaszid] = useState(null)\r\n  const [subjectid, setSubjectid] = useState(null)\r\n  const [noq, setNoq] = useState(null)\r\n  const [teststart, setteststart] = useState(null)\r\n  const [testend, settestend] = useState(null)\r\n  const [testtime, settesttime] = useState(null)\r\n  \r\n  //GET CBTEXAMS PER SCHOOL\r\n \r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data !== undefined && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      \r\n      setId(dt.id);\r\n      setClaszid(dt.itemid);\r\n      setSubjectid(dt.itemid1);\r\n      setNoq(dt.noq);\r\n      settesttime(dt.testtime);\r\n      setteststart(dt.teststart);\r\n      settestend(dt.testend);\r\n      setElement('nf-subjectid', dt.itemid1 )\r\n      setElement('nf-claszid', dt.itemid )\r\n    }else{\r\n      setId(null);\r\n      setNoq('');\r\n      setSubjectid('');\r\n      setClaszid('');\r\n      settesttime('');\r\n      setteststart('');\r\n      settestend('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    \r\n      let fd = new FormData();\r\n      fd.append('claszid', claszid);\r\n      fd.append('subjectid', subjectid);\r\n      fd.append('testtime', testtime);\r\n      fd.append('teststart', teststart);\r\n      fd.append('testend', testend);\r\n      fd.append('noq', noq);\r\n      fd.append('table', 'cbtexams');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateCbtexam(fd)\r\n        \r\n      }else if(props.pid && parseInt(props.pid) > 0)\r\n      {\r\n        //INSERT\r\n        fd.append('cbtid', props.pid);\r\n        fd.append('cat', 'insert');\r\n        props.registerCbtexam(fd)\r\n      }\r\n      //props.onReset()\r\n    \r\n  }\r\n\r\n  let claszarray = props.user.dropdowns && Array.isArray(props.user.dropdowns) ? props.user.dropdowns[1] : [];\r\n  let clarray = Array.isArray(claszarray) ? claszarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.name}</option>\r\n  }):<option></option>\r\n\r\n  let subjectarray = props.user.dropdowns && Array.isArray(props.user.dropdowns) ? props.user.dropdowns[2] : [];\r\n  let subarray = Array.isArray(subjectarray) ? subjectarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.name}</option>\r\n  }):<option></option>\r\n\r\n  \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Subjects Allocation</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={props.onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n             \r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-subjectid\">Subject </CLabel>\r\n                  <CSelect\r\n                      type=\"text\" \r\n                      id=\"nf-subjectid\" \r\n                      name=\"subjectid\"\r\n                      defaultValue={subjectid}\r\n                      onChange={(e)=>setSubjectid(e.target.value)}\r\n                      placeholder=\"\" \r\n                    >\r\n                      {subarray}\r\n                  </CSelect>\r\n                  <CFormText className=\"help-block\">Select the subject</CFormText>\r\n                </CFormGroup>\r\n             <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-claszid\">Class </CLabel>\r\n                  <CSelect\r\n                      type=\"text\" \r\n                      id=\"nf-claszid\" \r\n                      name=\"claszid\"\r\n                      onChange={(e)=>setClaszid(e.target.value)}\r\n                      placeholder=\"\" \r\n                    >\r\n                      {clarray}\r\n                  </CSelect>\r\n                  <CFormText className=\"help-block\">Select the class</CFormText>\r\n                </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-noq\">No of Questions</CLabel>\r\n              <CInput \r\n                  type=\"number\" \r\n                  id=\"nf-noq\" \r\n                  name=\"noq\"\r\n                  value={noq}\r\n                  onChange={(e)=>setNoq(e.target.value)}\r\n                  placeholder=\"0\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter number of question</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-testtime\">Test Duration in minutes</CLabel>\r\n              <CInput \r\n                  type=\"number\" \r\n                  id=\"nf-testtime\" \r\n                  name=\"testtime\"\r\n                  value={testtime}\r\n                  onChange={(e)=>settesttime(e.target.value)}\r\n                  placeholder=\"0\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter duration of exam in minutes</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-teststart\">Test Start</CLabel>\r\n              <CInput \r\n                  type=\"datetime-local\" \r\n                  id=\"nf-teststart\" \r\n                  name=\"teststart\"\r\n                  value={teststart}\r\n                  onChange={(e)=>setteststart(e.target.value)}\r\n                  placeholder=\"0\" \r\n                />\r\n              <CFormText className=\"help-block\">When should the test start?</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-testend\">Test End</CLabel>\r\n              <CInput \r\n                  type=\"datetime-local\" \r\n                  id=\"nf-testend\" \r\n                  name=\"testend\"\r\n                  value={testend}\r\n                  onChange={(e)=>settestend(e.target.value)}\r\n                  placeholder=\"0\" \r\n                />\r\n              <CFormText className=\"help-block\">When should the test end?</CFormText>\r\n            </CFormGroup>\r\n                </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n      )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  cbtexams : state.cbtexamReducer,\r\n  user:state.userReducer,\r\n  activeschool:state.userReducer.activeschool,\r\n  claszs : state.claszReducer.claszs,\r\n  subjects : state.subjectReducer.subjects,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerCbtexam,\r\n  updateCbtexam,\r\n  deleteCbtexam\r\n})(Cbtexam)\r\n","import React,{use, useEffect, useState} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getCbtexams, getCbtexam, registerCbtexam, updateCbtexam, deleteCbtexam} from './../../../actions/setting/cbtexam';\r\nimport {getThemes} from './../../../actions/setting/theme';\r\nimport { useHistory} from 'react-router-dom'\r\nimport { \r\n    CButton, CCard, CCardBody, CCardHeader, CCollapse, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle \r\n} from '@coreui/react';\r\n\r\n\r\n\r\n\r\n\r\nconst Cbtexam = (props) => {\r\n  const history = useHistory()\r\n\r\n  const [id, setid] = useState(null)\r\n  const [claszid, setclaszid] = useState(null)\r\n  const [subjectid, setsubjectid] = useState(null)\r\n  const [large, setLarge] = useState(false)\r\n  const [accordion, setAccordion] = useState(0)\r\n  const [store, setstore] = useState({})\r\n\r\n  const handleSubmit = () =>{\r\n    \r\n    let fd = new FormData();\r\n    fd.append('questions', JSON.stringify(store));\r\n    fd.append('table', 'cbtexams');\r\n    \r\n    if(id && parseInt(id) > 0)\r\n    {\r\n      //UPDATE \r\n      fd.append('id', id);\r\n      fd.append('cat', 'update');\r\n      props.updateCbtexam(fd)\r\n      \r\n    }\r\n  \r\n}\r\n\r\n  const toggleQue = (id, question) =>{\r\n      let score = {...store}\r\n      if(Object.keys(score).includes(id))\r\n      {\r\n         delete score[id]\r\n         setstore(score)\r\n      }else{\r\n          score[id] = question\r\n          setstore(score)\r\n      }\r\n      \r\n  }\r\n  const loadQ = (id, subjecid, classid, qdb)=>{\r\n      setid(id)\r\n      setsubjectid(subjecid)\r\n      setclaszid(classid)\r\n      setstore(qdb !== undefined && qdb.length > 0 ? JSON.parse(qdb):{})\r\n      setLarge(large=>!large)\r\n      let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'claszid':classid,\r\n            'subjectid':subjecid,\r\n            'is_active':0\r\n        }),\r\n        cat:'selected',\r\n        table:'themes',\r\n        narration:'get Questions'\r\n  \r\n    }\r\n    props.getThemes(params)\r\n  }\r\n  let themes = props.themes && Array.isArray(props.themes) ? props.themes.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let qbank = themes.map((prop, ind)=>{\r\n      let qb = prop.question.length > 0 ? JSON.parse(prop.question): {};\r\n      //let que = \r\n        return <CCard className=\"mb-0 \" >\r\n        <CCardHeader id=\"headingOne\">\r\n          <CButton \r\n            block \r\n            color=\"link\" \r\n            className=\"text-left m-0 p-0\" \r\n            onClick={() => setAccordion(accordion === parseInt(prop.id) ? null : parseInt(prop.id))}\r\n          >\r\n            <h5 className=\"m-0 p-0\">{`${prop.claszname}${\" \"} ${prop.name}  `}</h5>\r\n          </CButton>\r\n        </CCardHeader>\r\n        <CCollapse show={accordion === parseInt(prop.id)}>\r\n          <CCardBody>\r\n           {Object.keys(qb).map((pr, ih)=>{\r\n               let qs = qb[pr]\r\n               return <CCard \r\n                        key={ih} \r\n                        className={Object.keys(store).includes(pr) ? \"bg-success\" : ''}\r\n                        onClick={()=>toggleQue(pr, qs)}\r\n                        >\r\n                   <CCardBody>\r\n                       {qs.question}\r\n                   </CCardBody>\r\n               </CCard>\r\n           })}\r\n          </CCardBody>\r\n        </CCollapse>\r\n      </CCard>\r\n  })\r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.subjectname}</td>\r\n                <td className='text-center'>{row.claszname}</td>\r\n                <td className='text-center'>{row.teststart}</td>\r\n                <td className='text-center'>{row.testend}</td>\r\n                <td className='text-center'>{row.testtime}</td>\r\n                <td className='text-center'>\r\n                    <button\r\n                    size=\"sm\"\r\n                    onClick={()=>loadQ(row.id, row.subjectid, row.claszid, row.questions)}\r\n                    >\r\n                        Questions</button>\r\n                    </td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n    <>\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> SUBJECT</th>\r\n                    <th><i className='fa fa-list'></i> CLASS</th>\r\n                    <th><i className='fa fa-list'></i> START DATE</th>\r\n                    <th><i className='fa fa-list'></i> START END</th>\r\n                    <th><i className='fa fa-list'></i> DURATION</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n              <CModal \r\n              show={large} \r\n              onClose={() => setLarge(!large)}\r\n              size=\"lg\"\r\n            >\r\n              <CModalHeader closeButton>\r\n            <CModalTitle>QUESTIONS {`(${Object.keys(store).length} selected)`}</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n              <CCardBody>\r\n            <div id=\"accordion\">\r\n            {qbank}\r\n               </div>\r\n          </CCardBody>\r\n               \r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"primary\" onClick={handleSubmit}>Save Selected Questions ({Object.keys(store).length})</CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() => setLarge(!large)}>Cancel</CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n            </>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  cbtexams : state.cbtexamReducer,\r\n  themes : state.themeReducer.themes\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getCbtexams,\r\n  getCbtexam,\r\n  registerCbtexam,\r\n  updateCbtexam,\r\n  deleteCbtexam,\r\n  getThemes\r\n})(Cbtexam)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getCbtexams, getCbtexam, deleteCbtexam} from './../../../actions/setting/cbtexam';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport CbtexamForm from'./../Form/Cbtexam'\r\nimport CbtexamTable from'./../Table/Cbtexam'\r\nimport Header from './Header';\r\n\r\n\r\nconst Cbtexam = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'cbtid':props.pid\r\n        }),\r\n        cat:'selected',\r\n        table:'cbtexams',\r\n        narration:'get cbtexams'\r\n  \r\n    }\r\n    props.getCbtexams(params)\r\n    \r\n  }, [props.pid])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n\r\n  //GET CLASZ NAME\r\n  let ses = props.cbts.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n \r\n  let data = props.cbtexams.cbtexams && Array.isArray(props.cbtexams.cbtexams) ? props.cbtexams.cbtexams.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              pid={props.pid}\r\n              icon={props.para.icon}\r\n              title={sess} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <CbtexamTable  \r\n                pid={props.pid}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <CbtexamForm \r\n                pid={props.pid}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  cbtexams : state.cbtexamReducer,\r\n  cbts : state.cbtReducer.cbts,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getCbtexams,\r\n  deleteCbtexam\r\n})(Cbtexam)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerAccount, updateAccount, deleteAccount} from './../../../actions/setting/account';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Account = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'accounts');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateAccount(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerAccount(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Account</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Account</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"West Africa Examination Council\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter account name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Account No. </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"WAEC\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter account number</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  accounts : state.accountReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerAccount,\r\n  updateAccount,\r\n  deleteAccount\r\n})(Account)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getAccounts, getAccount, registerAccount, updateAccount, deleteAccount} from './../../../actions/setting/account';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Account = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-condensed table-dark table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Account</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  accounts : state.accountReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getAccounts,\r\n  getAccount,\r\n  registerAccount,\r\n  updateAccount,\r\n  deleteAccount\r\n})(Account)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getAccounts, updateAccount, deleteAccount} from './../../../actions/setting/account';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport AccountForm from'./../Form/Account'\r\nimport AccountTable from'./../Table/Account'\r\nimport Header from './Header';\r\n\r\n\r\nconst Account = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET ACCOUNTS PER SCHOOL\r\n  useEffect(() => {\r\n   \r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.user.activeschool.id\r\n      }),\r\n      cat:'selected',\r\n      table:'accounts',\r\n      narration:'get accounts'\r\n      }\r\n      props.getAccounts(params)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'accounts');\r\n    fd.append('narration', `activate ande disable account ${nu}`);\r\n    props.updateAccount(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.accounts.accounts && Array.isArray(props.accounts.accounts) ? props.accounts.accounts.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <AccountTable  \r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <AccountForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  accounts : state.accountReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getAccounts,\r\n  updateAccount,\r\n  deleteAccount\r\n})(Account)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerCa, updateCa, deleteCa} from './../../../actions/setting/ca';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Ca = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n  const [maxscore, setMaxscore] = useState()\r\n  const [starts, setStarts] = useState()\r\n  const [ends, setEnds] = useState()\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n      setMaxscore(dt.maxscore);\r\n      setStarts(dt.started);\r\n      setEnds(dt.ended);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n      setMaxscore(0);\r\n      setStarts('');\r\n      setEnds('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('maxscore', maxscore);\r\n      fd.append('started', starts);\r\n      fd.append('ended', ends);\r\n      fd.append('table', 'cas');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateCa(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('typeid', props.did);\r\n        fd.append('termid', props.qid);\r\n        fd.append('cat', 'insert');\r\n        props.registerCa(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> CA</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={props.onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-namez\">Name </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-namez\" \r\n                      name=\"namez\"\r\n                      defaultValue={namez}\r\n                      onChange={(e)=>setNamez(e.target.value)}\r\n                      placeholder=\"First Continious Assessment\" \r\n                    />\r\n                  <CFormText className=\"help-block\">set assessment name</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-abbrv\">Abbreviation </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-abbrv\" \r\n                      name=\"abbrv\"\r\n                      defaultValue={abbrv}\r\n                      onChange={(e)=>setAbbrv(e.target.value)}\r\n                      placeholder=\"CA1\" \r\n                    />\r\n                  <CFormText className=\"help-block\">abbreviate name</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-maxscore\">Maximum Score </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-maxscore\" \r\n                      name=\"maxscore\"\r\n                      defaultValue={maxscore}\r\n                      onChange={(e)=>setMaxscore(e.target.value)}\r\n                      placeholder=\"20\" \r\n                    />\r\n                  <CFormText className=\"help-block\">set the maximum score students can attain on this assessment</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n              <CLabel htmlFor=\"nf-starts\">Commence Entry </CLabel>\r\n              <CInput \r\n                  type=\"date\" \r\n                  id=\"nf-starts\" \r\n                  name=\"starts\"\r\n                  value={starts}\r\n                  onChange={(e)=>setStarts(e.target.value)}\r\n                  placeholder=\"date\" \r\n                />\r\n              <CFormText className=\"help-block\">Please select when to start compiling result</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-ends\">Close Entry </CLabel>\r\n              <CInput \r\n                  type=\"date\" \r\n                  id=\"nf-ends\" \r\n                  name=\"ends\"\r\n                  value={ends}\r\n                  onChange={(e)=>setEnds(e.target.value)}\r\n                  placeholder=\"date\" \r\n                />\r\n              <CFormText className=\"help-block\">Please select when to stop entering result</CFormText>\r\n            </CFormGroup>\r\n                </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n    \r\n           )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  cas : state.caReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerCa,\r\n  updateCa,\r\n  deleteCa\r\n})(Ca)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport {getCas, getCa, registerCa, updateCa, deleteCa} from './../../../actions/setting/ca';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Ca = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td className='text-left'>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                <td className='text-center'>{row.maxscore}</td>\r\n                <td className='text-center'>{moment(row.started).format('MMM D, YYYY')}</td>\r\n                <td className='text-center'>{moment(row.ended).format('MMM D, YYYY')}</td>    \r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    <a  key={ind} title='Assessement Items' onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${props.qid}/${props.did}/${row.id}/0/0`)}><i className='fa fa-list ml-2 px-2'></i></a>     \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    \r\n                    <th><i className='fa fa-list text-center'></i> ASSESSMENT NAME</th>\r\n                    <th><i className='fa fa-bullseye text-center'></i> ABBRV</th>\r\n                    <th><i className='fa fa-list'></i> MAX SCORE</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-calendar'></i> COMMENCES</th>\r\n                    <th className=\"text-center\"><i className='fa fa-calendar'></i> ENDS</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  cas : state.caReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getCas,\r\n  getCa,\r\n  registerCa,\r\n  updateCa,\r\n  deleteCa\r\n})(Ca)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getCas, getCa, deleteCa, updateCa} from './../../../actions/setting/ca';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport CaForm from'./../Form/Ca'\r\nimport CaTable from'./../Table/Ca'\r\nimport Header from './Header';\r\n\r\n\r\nconst Ca = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'termid':props.qid,\r\n            'typeid':props.did\r\n        }),\r\n        cat:'select',\r\n        table:'cas',\r\n        narration:'get cas'\r\n  \r\n    }\r\n    props.getCas(params)\r\n    \r\n  }, [props.pid, props.did])\r\n\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'claszs');\r\n    fd.append('narration', `activate ande disable clasz ${nu}`);\r\n    props.updateCa(fd);\r\n\r\n  }\r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n  let arr = {\r\n      1:'Academic Assessments',\r\n      2:'Behavioral Assessment ',\r\n      3:'Skills Assessment'\r\n  }\r\n\r\n  //GET TERM NAME\r\n  let ses = props.sessions.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n\r\n  let tem = props.terms.filter(rw=>parseInt(rw.id) === parseInt(props.qid));\r\n  let tems = tem && Array.isArray(tem) && tem.length > 0 ? tem[0].name : 'None'\r\n\r\n  let data = props.cas.cas && Array.isArray(props.cas.cas) ? props.cas.cas.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              sid={props.sid}\r\n              pid={props.pid}\r\n              qid={props.qid}\r\n              did={props.did}\r\n              kid={props.kid}\r\n              icon={props.para.icon}\r\n              title={sess +\" \"+tems+\" Term : \"+arr[props.did]}\r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <CaTable  \r\n                sid={props.sid}\r\n                pid={props.pid}\r\n                qid={props.qid}\r\n                did={props.did}\r\n                kid={props.kid}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onActivate={onActivate}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <CaForm \r\n                sid={props.sid}\r\n                pid={props.pid}\r\n                qid={props.qid}\r\n                did={props.did}\r\n                kid={props.kid}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  cas : state.caReducer,\r\n  terms : state.termReducer.terms,\r\n  sessions : state.sessionReducer.sessions,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getCas,\r\n  deleteCa,\r\n  updateCa\r\n})(Ca)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerCaunit, updateCaunit, deleteCaunit} from './../../../actions/setting/caunit';\r\nimport { useHistory, useLocaunittion } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Caunit = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n  const [maxscore, setMaxscore] = useState()\r\n  const [starts, setStarts] = useState()\r\n  const [ends, setEnds] = useState()\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n      setMaxscore(dt.maxscore);\r\n      setStarts(dt.started);\r\n      setEnds(dt.ended);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n      setMaxscore(0);\r\n      setStarts('');\r\n      setEnds('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('maxscore', maxscore);\r\n      fd.append('started', starts);\r\n      fd.append('ended', ends);\r\n      fd.append('table', 'caunits');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateCaunit(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('caid', props.kid);\r\n        fd.append('cat', 'insert');\r\n        props.registerCaunit(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"caunitrd-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> CAUNIT</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={props.onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-namez\">Name </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-namez\" \r\n                      name=\"namez\"\r\n                      defaultValue={namez}\r\n                      onChange={(e)=>setNamez(e.target.value)}\r\n                      placeholder=\"First Continious Assessment\" \r\n                    />\r\n                  <CFormText className=\"help-block\">set assessment name</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-abbrv\">Abbreviation </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-abbrv\" \r\n                      name=\"abbrv\"\r\n                      defaultValue={abbrv}\r\n                      onChange={(e)=>setAbbrv(e.target.value)}\r\n                      placeholder=\"CAUNIT1\" \r\n                    />\r\n                  <CFormText className=\"help-block\">abbreviate name</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-maxscore\">Maximum Score </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-maxscore\" \r\n                      name=\"maxscore\"\r\n                      defaultValue={maxscore}\r\n                      onChange={(e)=>setMaxscore(e.target.value)}\r\n                      placeholder=\"20\" \r\n                    />\r\n                  <CFormText className=\"help-block\">set the maximum score students caunitn attain on this assessment</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n              <CLabel htmlFor=\"nf-starts\">Commence Entry </CLabel>\r\n              <CInput \r\n                  type=\"date\" \r\n                  id=\"nf-starts\" \r\n                  name=\"starts\"\r\n                  defaultValue={starts}\r\n                  onChange={(e)=>setStarts(e.target.value)}\r\n                  placeholder=\"date\" \r\n                />\r\n              <CFormText className=\"help-block\">Please select when to start compiling result</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-ends\">Close Entry </CLabel>\r\n              <CInput \r\n                  type=\"date\" \r\n                  id=\"nf-ends\" \r\n                  name=\"ends\"\r\n                  defaultValue={ends}\r\n                  onChange={(e)=>setEnds(e.target.value)}\r\n                  placeholder=\"date\" \r\n                />\r\n              <CFormText className=\"help-block\">Please select when to stop entering result</CFormText>\r\n            </CFormGroup>\r\n                </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n    \r\n           )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  caunits : state.caunitReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerCaunit,\r\n  updateCaunit,\r\n  deleteCaunit\r\n})(Caunit)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport {getCaunits, getCaunit, registerCaunit, updateCaunit, deleteCaunit} from './../../../actions/setting/caunit';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\nconst Caunit = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td className='text-left'>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                <td className='text-center'>{row.maxscore}</td>\r\n                <td className='text-center'>{moment(row.started).format('MMM D, YYYY')}</td>\r\n                <td className='text-center'>{moment(row.ended).format('MMM D, YYYY')}</td>    \r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    \r\n                    <th><i className='fa fa-list text-center'></i> ASSESSMENT TYPE </th>\r\n                    <th><i className='fa fa-bullseye text-center'></i> ABBRV</th>\r\n                    <th><i className='fa fa-list'></i> MAX SCORE</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-calendar'></i> COMMENCES</th>\r\n                    <th className=\"text-center\"><i className='fa fa-calendar'></i> ENDS</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  caunits : state.caunitReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getCaunits,\r\n  getCaunit,\r\n  registerCaunit,\r\n  updateCaunit,\r\n  deleteCaunit\r\n})(Caunit)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getCaunits, getCaunit, deleteCaunit, updateCaunit} from './../../../actions/setting/caunit';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport CaunitForm from'./../Form/Caunit'\r\nimport CaunitTable from'./../Table/Caunit'\r\nimport Header from './Header';\r\n\r\n\r\nconst Caunit = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'caid':props.kid\r\n        }),\r\n        cat:'select',\r\n        table:'caunits',\r\n        narration:'get caunits'\r\n  \r\n    }\r\n    props.getCaunits(params)\r\n    \r\n  }, [props.kid])\r\n\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'caunits');\r\n    fd.append('narration', `activate ande disable CA unit item ${rw} - ${nu}`);\r\n    props.updateCaunit(fd);\r\n\r\n  }\r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n  let arr = {\r\n      1:'Academic Assessments',\r\n      2:'Behavioral Assessment ',\r\n      3:'Skills Assessment'\r\n  }\r\n\r\n  //GET TERM NAME\r\n  let ses = props.sessions.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n\r\n  let tem = props.terms.filter(rw=>parseInt(rw.id) === parseInt(props.qid));\r\n  let tems = tem && Array.isArray(tem) && tem.length > 0 ? tem[0].name : 'None'\r\n\r\n  let cz = props.cas.filter(rw=>parseInt(rw.id) === parseInt(props.kid));\r\n  let czs = cz && Array.isArray(cz) && cz.length > 0 ? cz[0].name : 'None'\r\n\r\n  let data = props.caunits.caunits && Array.isArray(props.caunits.caunits) ? props.caunits.caunits.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              sid={props.sid}\r\n              pid={props.pid}\r\n              qid={props.qid}\r\n              did={props.did}\r\n              kid={props.kid}\r\n              icon={props.para.icon}\r\n              title={sess +\" \"+tems+\": \"+arr[props.did]+\" \"+czs}\r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <CaunitTable  \r\n                sid={props.sid}\r\n                pid={props.pid}\r\n                qid={props.qid}\r\n                did={props.did}\r\n                kid={props.kid}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onActivate={onActivate}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <CaunitForm \r\n                sid={props.sid}\r\n                pid={props.pid}\r\n                qid={props.qid}\r\n                did={props.did}\r\n                kid={props.kid}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  caunits : state.caunitReducer,\r\n  cas : state.caReducer.cas,\r\n  terms : state.termReducer.terms,\r\n  sessions : state.sessionReducer.sessions,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getCaunits,\r\n  deleteCaunit,\r\n  updateCaunit\r\n})(Caunit)\r\n","import axios from 'axios';\r\nimport {\r\n    GRADE_GET_ONE,\r\n    GRADE_GET_MULTIPLE,\r\n    GRADE_REGISTER_SUCCESS,\r\n    GRADE_REGISTER_FAIL,\r\n    GRADE_LOADING,\r\n    GRADE_LOADING_ERROR,\r\n    GRADE_UPDATE_SUCCESS,\r\n    GRADE_UPDATE_FAIL,\r\n    GRADE_DELETE_SUCCESS,\r\n    GRADE_DELETE_FAIL\r\n} from \"../../types/setting/grade\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'grades';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL GRADE \r\nexport const getGrades = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : GRADE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: GRADE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : GRADE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE GRADE \r\nexport const getGrade = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : GRADE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//GRADE DELETE\r\nexport const deleteGrade = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GRADE_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : GRADE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//GRADE REGISTER\r\nexport const registerGrade = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GRADE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : GRADE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //GRADE UPDATE\r\nexport const updateGrade = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GRADE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : GRADE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerGrade, updateGrade, deleteGrade} from './../../../actions/setting/grade';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Grade = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'grades');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateGrade(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerGrade(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Grade</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Grade</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"West Africa Examination Council\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter grade name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Grade Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"WAEC\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter grade abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  grades : state.gradeReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerGrade,\r\n  updateGrade,\r\n  deleteGrade\r\n})(Grade)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getGrades, getGrade, registerGrade, updateGrade, deleteGrade} from './../../../actions/setting/grade';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Grade = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = Array.isArray(data) ? data.filter(rw=>rw !== null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        Array.isArray(props.submenu) ? props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) =>history.push(`/setting/${props.sid}/${row.id}/0/0/0/0/0`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        }):''\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  }):''\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Grade</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  grades : state.gradeReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getGrades,\r\n  getGrade,\r\n  registerGrade,\r\n  updateGrade,\r\n  deleteGrade\r\n})(Grade)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getGrades, updateGrade, deleteGrade} from './../../../actions/setting/grade';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport GradeForm from'./../Form/Grade'\r\nimport GradeTable from'./../Table/Grade'\r\nimport Header from './Header';\r\n\r\n\r\nconst Grade = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET GRADES PER SCHOOL\r\n  useEffect(() => {\r\n   \r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.user.activeschool.id\r\n      }),\r\n      cat:'select',\r\n      table:'grades',\r\n      narration:'get grades'\r\n      }\r\n      props.getGrades(params)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'grades');\r\n    fd.append('narration', `activate ande disable grade ${nu}`);\r\n    props.updateGrade(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.grades.grades && Array.isArray(props.grades.grades) ? props.grades.grades.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <GradeTable  \r\n               sid={props.sid}\r\n               pid={props.pid}\r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <GradeForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  grades : state.gradeReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getGrades,\r\n  updateGrade,\r\n  deleteGrade\r\n})(Grade)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerGradeunit, updateGradeunit, deleteGradeunit} from './../../../actions/setting/gradeunit';\r\nimport { useHistory, useLogradeunittion } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CTextarea,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Gradeunit = (props) => {\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n  const [maxscore, setMaxscore] = useState(0)\r\n  const [minscore, setMinscore] = useState(0)\r\n  const [color, setColor] = useState()\r\n  const [comment, setComment] = useState()\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n      setMaxscore(dt.maxscore);\r\n      setMinscore(dt.minscore);\r\n      setColor(dt.color);\r\n      setComment(dt.comment);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n      setMaxscore(0);\r\n      setMinscore(0);\r\n      setColor('');\r\n      setComment('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    console.log(namez)\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('maxscore', maxscore);\r\n      fd.append('minscore', minscore);\r\n      fd.append('comment', comment);\r\n      fd.append('color', color);\r\n      fd.append('table', 'gradeunits');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateGradeunit(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('gradeid', props.pid);\r\n        //fd.append('schoolid', props.pid);\r\n        fd.append('cat', 'insert');\r\n        props.registerGradeunit(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"gradeunitrd-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> GRADE UNIT</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={props.onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-namez\">Name </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-namez\" \r\n                      name=\"namez\"\r\n                      defaultValue={namez}\r\n                      onChange={(e)=>setNamez(e.target.value)}\r\n                      placeholder=\"Excellent\" \r\n                    />\r\n                  <CFormText className=\"help-block\">set assessment name</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-abbrv\">Abbreviation </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-abbrv\" \r\n                      name=\"abbrv\"\r\n                      defaultValue={abbrv}\r\n                      onChange={(e)=>setAbbrv(e.target.value)}\r\n                      placeholder=\"A1\" \r\n                    />\r\n                  <CFormText className=\"help-block\">ALIAS</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-maxscore\">Maximum Score </CLabel>\r\n                  <CInput \r\n                      type=\"number\" \r\n                      id=\"nf-maxscore\" \r\n                      name=\"maxscore\"\r\n                      defaultValue={maxscore}\r\n                      onChange={(e)=>setMaxscore(e.target.value)}\r\n                      placeholder=\"100\" \r\n                    />\r\n                  <CFormText className=\"help-block\">set the maximum score students gradeunitn attain on this assessment</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-minscore\">Minimum Score </CLabel>\r\n                  <CInput \r\n                      type=\"number\" \r\n                      id=\"nf-minscore\" \r\n                      name=\"minscore\"\r\n                      defaultValue={minscore}\r\n                      onChange={(e)=>setMinscore(e.target.value)}\r\n                      placeholder=\"75\" \r\n                    />\r\n                  <CFormText className=\"help-block\">set the maximum score students gradeunitn attain on this assessment</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n              <CLabel htmlFor=\"nf-color\">Grade Color </CLabel>\r\n              <CInput \r\n                  type=\"color\" \r\n                  id=\"nf-color\" \r\n                  name=\"color\"\r\n                  defaultValue={color}\r\n                  onChange={(e)=>setColor(e.target.value)}\r\n                  placeholder=\"date\" \r\n                />\r\n              <CFormText className=\"help-block\">Select a color to display the grades</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-comment\">Comment</CLabel>\r\n              <CTextarea \r\n                  id=\"nf-comment\" \r\n                  name=\"comment\"\r\n                  defaultValue={comment}\r\n                  onChange={(e)=>setComment(e.target.value)}\r\n                  placeholder=\"Keep it up, you doing well..\" \r\n                ></CTextarea>\r\n              <CFormText className=\"help-block\">Add a comment to be displayed for students with cumulative avaerage that meet the above range of scores</CFormText>\r\n            </CFormGroup>\r\n                </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={()=>handleSubmit()} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n    \r\n           )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  gradeunits : state.gradeunitReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerGradeunit,\r\n  updateGradeunit,\r\n  deleteGradeunit\r\n})(Gradeunit)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getGradeunits, getGradeunit, registerGradeunit, updateGradeunit, deleteGradeunit} from './../../../actions/setting/gradeunit';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Gradeunit = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td style={{color: row.color}}>{row.name}{\" (\"}{row.abbrv}{\") \"}</td>\r\n                <td className=\"text-center\" style={{color: row.color}}><strong>{row.maxscore}{\" - \"}{row.minscore}</strong></td>\r\n                <td style={{color: row.color}}>{row.comment}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                   \r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Name</th>\r\n                    <th><i className='fa fa-list'></i> Range</th>\r\n                    <th><i className='fa fa-list'></i> Comment</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  gradeunits : state.gradeunitReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getGradeunits,\r\n  getGradeunit,\r\n  registerGradeunit,\r\n  updateGradeunit,\r\n  deleteGradeunit\r\n})(Gradeunit)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getGradeunits, getGradeunit, deleteGradeunit} from './../../../actions/setting/gradeunit';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport GradeunitForm from'./../Form/Gradeunit'\r\nimport GradeunitTable from'./../Table/Gradeunit'\r\nimport Header from './Header';\r\n\r\n\r\nconst Gradeunit = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'gradeid':props.pid\r\n        }),\r\n        cat:'selected',\r\n        table:'gradeunits',\r\n        narration:'get gradeunits'\r\n  \r\n    }\r\n    props.getGradeunits(params)\r\n    \r\n  }, [props.pid])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n\r\n  //GET GRADE NAME\r\n  let ses = props.grades.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n \r\n  let data = props.gradeunits.gradeunits && Array.isArray(props.gradeunits.gradeunits) ? props.gradeunits.gradeunits.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              pid={props.pid}\r\n              icon={props.para.icon}\r\n              title={sess} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <GradeunitTable  \r\n                pid={props.pid}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <GradeunitForm \r\n                pid={props.pid}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  gradeunits : state.gradeunitReducer,\r\n  grades : state.gradeReducer.grades,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getGradeunits,\r\n  deleteGradeunit\r\n})(Gradeunit)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerClassstaff, updateClassstaff, deleteClassstaff} from '../../../actions/setting/classstaff';\r\nimport {getStaffs} from './../../../actions/staff/staff';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CTextarea,\r\n  CSelect\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {setElement} from './../../../actions/common'\r\n\r\n\r\nconst Classstaff = (props) => {\r\n  const [id, setId] = useState(null)\r\n  const [claszid, setClaszid] = useState(null)\r\n  const [staff, setStaff] = useState(null)\r\n  let sessionid = props.pid;\r\n  let termid = props.qid;\r\n  let groupid = 1;\r\n  //GET CLASSSTAFFS PER SCHOOL\r\n  useEffect(() => {\r\n    if(props.activeschool !== undefined && parseInt(props.activeschool.id) > 0){\r\n        let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'schoolid': props.activeschool.id,\r\n            'is_active':0\r\n        }),\r\n        cat:'select',\r\n        table:'staffs',\r\n        narration:'get staffs'\r\n        }\r\n        props.getStaffs(params)\r\n\r\n    }\r\n  }, [props.activeschool])\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data !== undefined && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setStaff(dt.clientid);\r\n      setClaszid(dt.itemid);\r\n      setElement('nf-claszid', dt.itemid )\r\n      setElement('nf-staff', dt.clientid )\r\n    }else{\r\n      setId(null);\r\n      setStaff('');\r\n      setStaff('');\r\n      setClaszid('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(parseInt(staff) > 0)\r\n    {\r\n      let fd = new FormData();\r\n      fd.append('itemid', claszid);\r\n      fd.append('clientid', staff);\r\n      fd.append('checker', groupid+'_'+termid+'_'+staff+'_'+claszid);\r\n      fd.append('table', 'accessstaffclass');\r\n      fd.append('sessionid', sessionid);\r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'updates');\r\n        props.updateClassstaff(fd)\r\n        \r\n      }else if(termid && parseInt(termid) > 0)\r\n      {\r\n        //INSERT\r\n        fd.append('grp', groupid);\r\n        fd.append('termid', termid);\r\n        fd.append('cat', 'inserts');\r\n        props.registerClassstaff(fd)\r\n      }\r\n      props.onReset()\r\n    }\r\n  }\r\n\r\n  let claszarray = props.user.dropdowns && Array.isArray(props.user.dropdowns) ? props.user.dropdowns[1] : [];\r\n  let clarray = claszarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.name}</option>\r\n  })\r\n\r\n  let stafarray = props.staffs && Array.isArray(props.staffs) ? props.staffs : [];\r\n  let starray = stafarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.surname} {rw.firstname}</option>\r\n  })\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Classstaff</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={props.onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n              <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-staff\">Staff </CLabel>\r\n                  <CSelect\r\n                      type=\"text\" \r\n                      id=\"nf-staff\" \r\n                      name=\"staff\"\r\n                      onChange={(e)=>setStaff(e.target.value)}\r\n                      placeholder=\"\" \r\n                    >\r\n                      <option></option>\r\n                      {starray}\r\n                  </CSelect>\r\n                  <CFormText className=\"help-block\">Select the staff</CFormText>\r\n                </CFormGroup>\r\n             <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-claszid\">Class </CLabel>\r\n                  <CSelect\r\n                      type=\"text\" \r\n                      id=\"nf-claszid\" \r\n                      name=\"claszid\"\r\n                      onChange={(e)=>setClaszid(e.target.value)}\r\n                      placeholder=\"\" \r\n                    >\r\n                      <option></option>\r\n                      {clarray}\r\n                  </CSelect>\r\n                  <CFormText className=\"help-block\">Select the class</CFormText>\r\n                </CFormGroup>\r\n                </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n      )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  classstaffs : state.classstaffReducer,\r\n  user:state.userReducer,\r\n  activeschool:state.userReducer.activeschool,\r\n  claszs : state.claszReducer.claszs,\r\n  staffs : state.staffReducer.staffs,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerClassstaff,\r\n  updateClassstaff,\r\n  deleteClassstaff,\r\n  getStaffs\r\n})(Classstaff)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getClassstaffs, getClassstaff, registerClassstaff, updateClassstaff, deleteClassstaff} from '../../../actions/setting/classstaff';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Classstaff = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td className='text-center'>{row.itemname}</td>\r\n                <td>{row.clientname}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                   \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row.id)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> CLASS</th>\r\n                    <th><i className='fa fa-list'></i> CLASS TEACHER</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  classstaffs : state.classstaffReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getClassstaffs,\r\n  getClassstaff,\r\n  registerClassstaff,\r\n  updateClassstaff,\r\n  deleteClassstaff\r\n})(Classstaff)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getClassstaffs, getClassstaff, deleteClassstaff, updateClassstaff} from '../../../actions/setting/classstaff';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport Swal from 'sweetalert'\r\nimport StaffClassForm from'./../Form/Staffclass'\r\nimport StaffClassTable from'./../Table/Staffclass'\r\nimport Header from './Header';\r\n\r\n\r\nconst Classstaff = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'termid':props.qid,\r\n            'sessionid':props.pid,\r\n            'grp':1\r\n        }),\r\n        cat:'staffclass',\r\n        table:'accessstaffclass',\r\n        narration:'get classstaffs'\r\n  \r\n    }\r\n    props.getClassstaffs(params)\r\n    \r\n  }, [props.pid])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = id =>{\r\n    \r\n    Swal(\"Are you sure you want to delete this information, You will not be able to restore the data.\"+{id})\r\n    .then((value) => {\r\n      if(value === true && parseInt(id) > 0)\r\n      {\r\n          let fd = new FormData();\r\n          fd.append('id', id);\r\n          fd.append('sessionid', props.pid);\r\n          fd.append('table', 'staffclasss')\r\n          fd.append('cat', 'deletes')\r\n          props.deleteClassstaff(fd, id);\r\n      }else{\r\n        Swal(`Not deleted`);\r\n      }\r\n      \r\n    });\r\n    \r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'updates');\r\n    fd.append('sessionid', props.pid);\r\n    fd.append('table', 'accessstaffclass');\r\n    fd.append('narration', `activate and disable class ${nu}`);\r\n    props.updateClassstaff(fd);   \r\n\r\n  }\r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n\r\n  \r\n  //GET TERM NAME\r\n  let ses = props.sessions.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n\r\n  let tem = props.terms.filter(rw=>parseInt(rw.id) === parseInt(props.qid));\r\n  let tems = tem && Array.isArray(tem) && tem.length > 0 ? tem[0].name : 'None'\r\n\r\n  let data = props.classstaffs.classstaffs && Array.isArray(props.classstaffs.classstaffs) ? props.classstaffs.classstaffs.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              pid={props.pid}\r\n              qid={props.qid}\r\n              did={props.did}\r\n              icon={props.para.icon}\r\n              title={sess +\" \"+tems+\" Term : Class Allocation\"} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <StaffClassTable  \r\n                pid={props.pid}\r\n                qid={props.qid}\r\n              did={props.did}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onActivate={(id, rw)=>onActivate(id, rw)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <StaffClassForm \r\n                pid={props.pid}\r\n                qid={props.qid}\r\n                did={props.did}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  classstaffs : state.classstaffReducer,\r\n  terms : state.termReducer.terms,\r\n  sessions : state.sessionReducer.sessions,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getClassstaffs,\r\n  deleteClassstaff,\r\n  updateClassstaff\r\n})(Classstaff)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Swal from 'sweetalert';\r\nimport {getStaffsubjects, getStaffsubject, deleteStaffsubject, updateStaffsubject} from './../../../actions/staff/staffsubject';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport StaffsubjectForm from'./../Form/Staffsubject'\r\nimport StaffsubjectTable from'./../Table/Staffsubject'\r\nimport Header from './Header';\r\n\r\n\r\nconst Staffsubject = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  } \r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'termid':props.qid,\r\n            'sessionid':props.pid,\r\n            'grp':2\r\n        }),\r\n        cat:'staffclass',\r\n        table:'accessstaffsubject',\r\n        narration:'get staffsubjects'\r\n  \r\n    }\r\n    props.getStaffsubjects(params)\r\n    \r\n  }, [props.pid])\r\n\r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw) =>{\r\n    \r\n    Swal(\"Are you sure you want to delete you will not be able to restore the data.\")\r\n    .then((value) => {\r\n      if(value === true && parseInt(rw.id) > 0)\r\n      {\r\n          let fd = new FormData();\r\n          fd.append('id', rw.id);\r\n          fd.append('sessionid', props.pid)\r\n          fd.append('table', 'accessstudentsubject')\r\n          fd.append('cat', 'deletes')\r\n          props.deleteStaffsubject(fd, rw.id);\r\n      }else{\r\n        Swal(`Not deleted`);\r\n      }\r\n      \r\n    });\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'updates');\r\n    fd.append('sessionid', props.pid);\r\n    fd.append('table', 'accessstaffclass');\r\n    fd.append('narration', `activate ande disable class ${nu}`);\r\n    props.updateStaffsubject(fd);\r\n\r\n  }\r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n\r\n  \r\n  //GET TERM NAME\r\n  let ses = props.sessions.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n\r\n  let tem = props.terms.filter(rw=>parseInt(rw.id) === parseInt(props.qid));\r\n  let tems = tem && Array.isArray(tem) && tem.length > 0 ? tem[0].name : 'None'\r\n\r\n  let data = props.staffsubjects.staffsubjects && Array.isArray(props.staffsubjects.staffsubjects) ? props.staffsubjects.staffsubjects.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              pid={props.pid}\r\n              qid={props.qid}\r\n              did={props.did}\r\n              icon={props.para.icon}\r\n              title={sess +\" \"+tems+\" Term : Subjects Allocation\"} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <StaffsubjectTable  \r\n                pid={props.pid}\r\n                qid={props.qid}\r\n                did={props.did}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onActivate={(id, rw)=>onActivate(id, rw)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <StaffsubjectForm \r\n                pid={props.pid}\r\n                qid={props.qid}\r\n                did={props.did}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  staffsubjects : state.staffsubjectReducer,\r\n  terms : state.termReducer.terms,\r\n  sessions : state.sessionReducer.sessions,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getStaffsubjects,\r\n  deleteStaffsubject,\r\n  updateStaffsubject\r\n})(Staffsubject)\r\n","import axios from 'axios';\r\nimport {\r\n    CLASSFEE_GET_ONE,\r\n    CLASSFEE_GET_MULTIPLE,\r\n    CLASSFEE_REGISTER_SUCCESS,\r\n    CLASSFEE_REGISTER_FAIL,\r\n    CLASSFEE_LOADING,\r\n    CLASSFEE_LOADING_ERROR,\r\n    CLASSFEE_UPDATE_SUCCESS,\r\n    CLASSFEE_UPDATE_FAIL,\r\n    CLASSFEE_DELETE_SUCCESS,\r\n    CLASSFEE_DELETE_FAIL\r\n} from \"../../types/setting/classfee\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'classfees';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CLASSFEE \r\nexport const getClassfees = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : CLASSFEE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CLASSFEE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CLASSFEE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CLASSFEE \r\nexport const getClassfee = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CLASSFEE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CLASSFEE DELETE\r\nexport const deleteClassfee = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASSFEE_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASSFEE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CLASSFEE REGISTER\r\nexport const registerClassfee = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASSFEE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASSFEE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CLASSFEE UPDATE\r\nexport const updateClassfee = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASSFEE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASSFEE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerClassfee, updateClassfee, deleteClassfee} from './../../../actions/setting/classfee';\r\nimport {getFees} from './../../../actions/setting/fee';\r\nimport {getClaszs} from './../../../actions/setting/clasz';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport Select from 'react-select'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CTextarea,\r\n  CSelect\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {setElement} from './../../../actions/common'\r\n\r\n\r\n\r\nconst Classfee = (props) => {\r\n  const [id, setId] = useState(null)\r\n  const [claszid, setClaszid] = useState([])\r\n  const [feeid, setFeeid] = useState(null)\r\n  const [amount, setAmount] = useState(0)\r\n  let sessionid = props.pid;\r\n  let termid = props.qid;\r\n  let groupid = 6;\r\n  //GET CLASSFEES PER SCHOOL\r\n  useEffect(() => {\r\n    if(props.activeschool !== undefined && parseInt(props.activeschool.id) > 0){\r\n        let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            \r\n            'is_active':0\r\n        }),\r\n        cat:'select',\r\n        table:'fees',\r\n        narration:'get fees'\r\n        }\r\n        props.getFees(params)\r\n\r\n        let params1 = {\r\n          data:JSON.stringify(\r\n          {\r\n              'typeid': props.activeschool.typeid,\r\n              'is_active':0\r\n          }),\r\n          cat:'select',\r\n          table:'clasz',\r\n          narration:'get clasz'\r\n          }\r\n          props.getClaszs(params1)\r\n\r\n    }\r\n  }, [props.activeschool])\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data !== undefined && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      let ar = {}\r\n      ar['value'] = dt.claszid;\r\n      ar['label'] =  dt.claszname;\r\n      setFeeid(dt.feeid);\r\n      setClaszid([ar]);\r\n      setAmount(dt.amount);\r\n    }else{\r\n      setId(null);\r\n      setFeeid('');\r\n      setAmount('');\r\n      setClaszid([]);\r\n    }\r\n    \r\n  }, [props.data])\r\n \r\n  const handleSubmit = () =>{\r\n    if(Array.isArray(claszid) && claszid.length > 0){\r\n    claszid.forEach(ele=>{\r\n      if(parseInt(feeid) > 0)\r\n      {\r\n        let fd = new FormData();\r\n        fd.append('feeid', feeid);\r\n        fd.append('claszid', ele.value);\r\n        fd.append('amount', amount);\r\n        fd.append('table', 'classfees');\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n          //UPDATE \r\n          fd.append('id', id);\r\n          fd.append('cat', 'update');\r\n          props.updateClassfee(fd)\r\n          \r\n        }else if(termid && parseInt(termid) > 0)\r\n        {\r\n          fd.append('termid', termid);\r\n          fd.append('cat', 'insert');\r\n          props.registerClassfee(fd)\r\n        }\r\n      }\r\n    })\r\n  }\r\n  }\r\n\r\n  let claszarray = props.claszs.claszs && Array.isArray(props.claszs.claszs) ? props.claszs.claszs : [];\r\n  let clarray = [];\r\n  claszarray.forEach(rw =>{\r\n    let ar = {}\r\n      ar['label'] = rw.abbrv;\r\n      ar['value'] = rw.id;\r\n      clarray.push(ar)\r\n  })\r\n \r\n  let stafarray = props.fees && Array.isArray(props.fees) ? props.fees : [];\r\n  let starray = stafarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.name}</option>\r\n  })\r\n  const handleClass = (event) =>{\r\n    setClaszid(event)\r\n\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12} style={{width:'400px'}}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Classfee</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={props.onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n              <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-feeid\">Fee </CLabel>\r\n                  <CSelect\r\n                      type=\"text\" \r\n                      id=\"nf-feeid\" \r\n                      name=\"feeid\"\r\n                      defaultValue={feeid}\r\n                      onChange={(e)=>setFeeid(e.target.value)}\r\n                       \r\n                    >\r\n                      {id && parseInt(id) > 0 ? <option value={props.data.feeid}>{props.data.feename}</option>:<option></option>}\r\n                      {starray}\r\n                  </CSelect>\r\n                  <CFormText className=\"help-block\">Select the feeid</CFormText>\r\n                </CFormGroup>\r\n             <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-claszid\">Class </CLabel>\r\n                  <Select\r\n                      closeMenuOnSelect={false}\r\n                      value={claszid}\r\n                      isMulti\r\n                      options={clarray}\r\n                      onChange={handleClass}\r\n                    />\r\n                  \r\n                  <CFormText className=\"help-block\">Select the class or classes</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-amount\">Amount </CLabel>\r\n                  <CInput\r\n                      type=\"text\" \r\n                      id=\"nf-amount\" \r\n                      name=\"amount\"\r\n                      value={amount}\r\n                      onChange={(e)=>setAmount(e.target.value)}\r\n                      placeholder=\"\" \r\n                   />\r\n                      \r\n                  <CFormText className=\"help-block\">Select amount</CFormText>\r\n                </CFormGroup>\r\n                </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n      )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  classfees : state.classfeeReducer,\r\n  user:state.userReducer,\r\n  activeschool:state.userReducer.activeschool,\r\n  claszs : state.claszReducer,\r\n  fees : state.feeReducer.fees,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerClassfee,\r\n  updateClassfee,\r\n  deleteClassfee,\r\n  getFees,\r\n  getClaszs\r\n})(Classfee)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getClassfees, getClassfee, registerClassfee, updateClassfee, deleteClassfee} from './../../../actions/setting/classfee';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Classfee = (props) => {\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td className='text-center'>{row.claszname}</td>\r\n                <td>{row.feename}</td>\r\n                <td>{Number(row.amount).toFixed(2)}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> CLASS</th>\r\n                    <th><i className='fa fa-list'></i> FEE</th>\r\n                    <th><i className='fa fa-list'></i> AMOUNT</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  classfees : state.classfeeReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getClassfees,\r\n  getClassfee,\r\n  registerClassfee,\r\n  updateClassfee,\r\n  deleteClassfee\r\n})(Classfee)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getClassfees, getClassfee, deleteClassfee, updateClassfee} from './../../../actions/setting/classfee';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport ClassfeeForm from'./../Form/Classfee'\r\nimport ClassfeeTable from'./../Table/Classfee'\r\nimport Header from './Header';\r\n\r\n\r\nconst Classfee = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n  let groupid = 6;\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'termid':props.qid\r\n        }),\r\n        cat:'selected',\r\n        table:'classfees',\r\n        narration:'get classfees'\r\n  \r\n    }\r\n    props.getClassfees(params)\r\n    \r\n  }, [props.pid, groupid])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (data) =>{\r\n    let fd = new FormData();\r\n       fd.append('id', data.id)\r\n       fd.append('table', 'classfees')\r\n       fd.append('cat', 'delete')\r\n       props.deleteClassfee(fd,data)\r\n    }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'classfees');\r\n    fd.append('narration', `activate ande disable class ${nu}`);\r\n    props.updateClassfee(fd);\r\n\r\n  }\r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n\r\n  \r\n  //GET TERM NAME\r\n  let ses = props.sessions.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n\r\n  let tem = props.terms.filter(rw=>parseInt(rw.id) === parseInt(props.qid));\r\n  let tems = tem && Array.isArray(tem) && tem.length > 0 ? tem[0].name : 'None'\r\n\r\n  let data = props.classfees.classfees && Array.isArray(props.classfees.classfees) ? props.classfees.classfees.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              pid={props.pid}\r\n              qid={props.qid}\r\n              did={props.did}\r\n              icon={props.para.icon}\r\n              title={sess +\" \"+tems+\" Term : Class Allocation\"} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <ClassfeeTable  \r\n                pid={props.pid}\r\n                qid={props.qid}\r\n              did={props.did}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onActivate={(id, rw)=>onActivate(id, rw)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <ClassfeeForm \r\n                pid={props.pid}\r\n                qid={props.qid}\r\n                did={props.did}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  classfees : state.classfeeReducer,\r\n  terms : state.termReducer.terms,\r\n  sessions : state.sessionReducer.sessions,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getClassfees,\r\n  deleteClassfee,\r\n  updateClassfee\r\n})(Classfee)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerWeek, updateWeek, deleteWeek} from './../../../actions/setting/week';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Week = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [startdate, setStartdate] = useState('')\r\n  const [enddate, setEnddate] = useState('')\r\n  const [closedate, setClosedate] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setStartdate(dt.started);\r\n      setEnddate(dt.ended);\r\n      setClosedate(dt.closed);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setStartdate('');\r\n      setEnddate('');\r\n      setClosedate('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0 && parseInt(props.sid) > 0)\r\n    {\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('started', startdate);\r\n      fd.append('ended', enddate);\r\n      fd.append('closed', closedate);\r\n      fd.append('table', 'weeks');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateWeek(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('termid', props.sid);\r\n        fd.append('cat', 'insert');\r\n        props.registerWeek(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setStartdate('');\r\n      setEnddate('');\r\n      setClosedate('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Week</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Week</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Week One\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter week name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-startdate\">Week Starts </CLabel>\r\n              <CInput \r\n                  type=\"date\" \r\n                  id=\"nf-startdate\" \r\n                  name=\"startdate\"\r\n                  value={startdate}\r\n                  onChange={(e)=>setStartdate(e.target.value)}\r\n                  placeholder=\"\" \r\n                />\r\n              <CFormText className=\"help-block\">Week starts</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-enddate\">Week  Ends </CLabel>\r\n              <CInput \r\n                  type=\"date\" \r\n                  id=\"nf-enddate\" \r\n                  name=\"enddate\"\r\n                  value={enddate}\r\n                  onChange={(e)=>setEnddate(e.target.value)}\r\n                  placeholder=\"\" \r\n                />\r\n              <CFormText className=\"help-block\">Week ending</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-closedate\">Close Submission</CLabel>\r\n              <CInput \r\n                  type=\"datetime-local\" \r\n                  id=\"nf-closedate\" \r\n                  name=\"closedate\"\r\n                  value={closedate}\r\n                  onChange={(e)=>setClosedate(e.target.value)}\r\n                  placeholder=\"\" \r\n                />\r\n              <CFormText className=\"help-block\">Date to stop submission of lesson plans</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  weeks : state.weekReducer,\r\n  user:state.userReducer,\r\n  \r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerWeek,\r\n  updateWeek,\r\n  deleteWeek\r\n})(Week)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport {getWeeks, getWeek, registerWeek, updateWeek, deleteWeek} from './../../../actions/setting/week';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Week = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{moment(new Date(row.started)).format('dd MM, YYYY')}</td>\r\n                <td className='text-center'>{moment(new Date(row.ended)).format('dd MM, YYYY')}</td>\r\n                <td className='text-center'>{moment(new Date(row.closed)).format('dd MM, YYYY')}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-condensed table-dark table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Week</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Starts</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Ends</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Close</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  weeks : state.weekReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getWeeks,\r\n  getWeek,\r\n  registerWeek,\r\n  updateWeek,\r\n  deleteWeek\r\n})(Week)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getWeeks, updateWeek, deleteWeek} from './../../../actions/setting/week';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport WeekForm from'./../Form/Week'\r\nimport WeekTable from'./../Table/Week'\r\nimport Header from './Header';\r\n\r\n\r\nconst Week = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET WEEKS PER SCHOOL\r\n  useEffect(() => {\r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'termid':props.sid\r\n      }),\r\n      cat:'selected',\r\n      table:'weeks',\r\n      narration:'get weeks'\r\n      }\r\n      props.getWeeks(params)\r\n    \r\n    \r\n  }, [props.sid])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'weeks');\r\n    fd.append('narration', `activate ande disable week ${nu}`);\r\n    props.updateWeek(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n   //GET TERM NAME\r\n   let ses = props.sessions.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n   let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n \r\n   let tem = props.terms.filter(rw=>parseInt(rw.id) === parseInt(props.qid));\r\n   let tems = tem && Array.isArray(tem) && tem.length > 0 ? tem[0].name : 'None'\r\n \r\n  let data = props.weeks.weeks && Array.isArray(props.weeks.weeks) ? props.weeks.weeks.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              title={sess +\" \"+tems+\" Term : \"}\r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <WeekTable  \r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <WeekForm \r\n                id={id}\r\n                sid={props.sid}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  weeks : state.weekReducer,\r\n  user:state.userReducer,\r\n  terms : state.termReducer.terms,\r\n  sessions : state.sessionReducer.sessions,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getWeeks,\r\n  updateWeek,\r\n  deleteWeek\r\n})(Week)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerReport, updateReport, deleteReport} from './../../../actions/setting/report';\r\nimport {getCas} from './../../../actions/setting/ca';\r\nimport {getClaszs} from './../../../actions/setting/clasz';\r\nimport {getTerms} from './../../../actions/setting/term';\r\nimport {getSessions} from './../../../actions/setting/session';\r\nimport {getSubjects} from './../../../actions/setting/subject';\r\nimport {getGrades} from './../../../actions/setting/grade';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CSelect,\r\n  CSwitch,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nlet settingz = [\r\n { 'id': 1, 'name': 'Ranking for all classes'},\r\n { 'id': 2, 'name': 'Ranking for senior classes only '},\r\n { 'id': 3, 'name': 'Ranking for junior classes only'},\r\n { 'id': 4, 'name': 'Show Grading'},\r\n { 'id': 5, 'name': 'Show Subject Ranking'},\r\n { 'id': 6, 'name': 'Show Subject Average'},\r\n { 'id': 7, 'name': 'Show Class Average'},\r\n\r\n]\r\nconst Report = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  \r\n  const [id, setId] = useState(null)\r\n  const [title, settitle] = useState('')\r\n  const [abbrv, setabbrv] = useState('')\r\n  const [clasz, setclasz] = useState([])\r\n  const [ca, setca] = useState([])\r\n  const [composite, setcomposite] = useState({})\r\n  const [grade, setgrade] = useState(0)\r\n  const [termid, settermid] = useState(0)\r\n  const [sessionid, setsessionid] = useState(0)\r\n  const [setting, setsetting] = useState([])\r\n  const [page, setpage] = useState(0)\r\n\r\n  let data = Object.keys(props.reports.report) && Array.isArray(Object.keys(props.reports.report)) ? props.reports.report : [];\r\n  \r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(data.id && parseInt(data.id) > 0)\r\n    {\r\n      let dt = data;\r\n      setId(dt.id);\r\n      settitle(dt.title);\r\n      setabbrv(dt.abbrv);\r\n      setgrade([dt.grade]);\r\n      settermid(dt.termid);\r\n      setsessionid(dt.sessionid);\r\n      let ccl = dt.clasz.length > 0 ? JSON.parse(dt.clasz):[];\r\n      setclasz(ccl);\r\n      let cal = dt.ca.length > 0 ? dt.ca.split(\",\"):[];\r\n      setca(cal);\r\n      let co = dt.composite.length > 0 ? JSON.parse(dt.composite):[];\r\n      setcomposite(co);\r\n      let se = dt.setting.length > 0 ? JSON.parse(dt.setting):[];\r\n      setsetting(se);\r\n\r\n    }else\r\n    {\r\n      setId(null);\r\n      settitle('');\r\n      setabbrv('');\r\n      setgrade(0);\r\n      settermid(0);\r\n      setsessionid(0);\r\n      setclasz({});\r\n      setca({});\r\n      setcomposite({});\r\n      setsetting({});\r\n    }\r\n    \r\n  }, [data])\r\n\r\n\r\n  useEffect(() => {\r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {    \r\n        let params = {\r\n          data:JSON.stringify({\r\n            'schoolid':props.user.activeschool.id\r\n          }),\r\n          cat:'select',\r\n          table:'sessions',\r\n          narration:'get sessions'\r\n      }\r\n        props.getSessions(params)\r\n\r\n        let params1 = {\r\n          data:JSON.stringify({\r\n            'typeid':props.user.activeschool.typeid\r\n          }),\r\n          cat:'selected',\r\n          table:'subjects',\r\n          narration:'get sessions'\r\n      }\r\n        props.getSubjects(params1);\r\n\r\n        let params2 = {\r\n          data:JSON.stringify({\r\n            'typeid':props.user.activeschool.typeid\r\n          }),\r\n          cat:'selected',\r\n          table:'claszs',\r\n          narration:'get sessions'\r\n      }\r\n        props.getClaszs(params2)\r\n\r\n        let params3 = {\r\n          data:JSON.stringify({\r\n            'is_active': 0\r\n          }),\r\n          cat:'selected',\r\n          table:'grades',\r\n          narration:'get grades'\r\n      }\r\n        props.getGrades(params3)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  useEffect(() => {\r\n    let params1 = {\r\n      data:JSON.stringify(\r\n      {\r\n          'sessionid':sessionid\r\n      }),\r\n      cat:'select',\r\n      table:'terms',\r\n      narration:'get terms'\r\n\r\n  }\r\n  props.getTerms(params1)\r\n    let params = {\r\n      data:JSON.stringify(\r\n      {\r\n        'sessionid':sessionid,\r\n        'schoolid':props.user.activeschool.id\r\n      }),\r\n      cat:'dropdowncas',\r\n      table:'dropdowncas',\r\n      narration:'get cas'\r\n\r\n    }\r\n    props.getCas(params)\r\n  }, [sessionid, props.user.activeschool.id])\r\n \r\n  const handleSubmit = () =>{\r\n    if(title.length > 0)\r\n    {\r\n      let fd = new FormData();\r\n      fd.append('title', title);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('sessionid', sessionid);\r\n      fd.append('termid', termid);\r\n      fd.append('cat', 'update');\r\n      fd.append('table', 'reports');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        props.updateReport(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerReport(fd)\r\n      }\r\n    }\r\n  }\r\n  const handleSubmitClass = () =>{\r\n      let fd = new FormData();\r\n    \r\n      fd.append('clasz', JSON.stringify(clasz));\r\n      fd.append('table', 'reports');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateReport(fd);\r\n      }\r\n  }\r\n  const handleSubmitCa = () =>{\r\n    let fd = new FormData();\r\n    \r\n      fd.append('ca', ca.join(\",\"));\r\n      fd.append('table', 'reports');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateReport(fd);\r\n      }\r\n  \r\n  }\r\n  const handleSubmitSetting = () =>{\r\n    let fd = new FormData();\r\n    fd.append('setting', JSON.stringify(setting));\r\n    fd.append('table', 'reports');\r\n    \r\n    if(id && parseInt(id) > 0)\r\n    {\r\n      //UPDATE \r\n      fd.append('id', id);\r\n      fd.append('cat', 'update');\r\n      props.updateReport(fd);\r\n    }\r\n  \r\n  }\r\n  const handleSubmitComposite = () =>{\r\n    let fd = new FormData();\r\n    fd.append('composite', JSON.stringify(composite));\r\n    fd.append('table', 'reports');\r\n    \r\n    if(id && parseInt(id) > 0)\r\n    {\r\n      //UPDATE \r\n      fd.append('id', id);\r\n      fd.append('cat', 'update');\r\n      props.updateReport(fd);\r\n    }\r\n  \r\n  }\r\n  const handleSubmitGrade = () =>{\r\n    let fd = new FormData();\r\n    if(Array.isArray(grade) && grade.length > 0){\r\n    fd.append('grade', grade[0]);\r\n    fd.append('table', 'reports');\r\n    \r\n    if(id && parseInt(id) > 0)\r\n    {\r\n      //UPDATE \r\n      fd.append('id', id);\r\n      fd.append('cat', 'update');\r\n      props.updateReport(fd);\r\n    }\r\n  }\r\n  }\r\n\r\nconst loadSelect = (e, d) =>{\r\n  let sel = [...clasz];\r\n    if(e)\r\n    {\r\n      sel.push(d)\r\n      setclasz(sel)\r\n    }else{\r\n      let f = sel.filter(ele =>parseInt(ele) !== parseInt(d))\r\n      setclasz(f)\r\n    }\r\n }\r\n\r\n const loadca = (e, d) =>{\r\n  let sel = [...ca];\r\n    if(e)\r\n    {\r\n      sel.push(d)\r\n      setca(sel)\r\n    }else{\r\n      let f = sel.filter(ele =>parseInt(ele) !== parseInt(d))\r\n      setca(f)\r\n    }\r\n }\r\n\r\n const loadset = (e, d) =>{\r\n  let sel = [...setting];\r\n  \r\n    if(e)\r\n    {\r\n      sel.push(d)\r\n      setsetting(sel)\r\n    }else{\r\n      let f = sel.filter(ele =>parseInt(ele) !== parseInt(d))\r\n      setsetting(f)\r\n    }\r\n }\r\n\r\n const loadgrade = (e, d) =>{\r\n  let sel = [];\r\n  \r\n    if(e)\r\n    {\r\n      sel.push(d)\r\n      setgrade(sel)\r\n    }else{\r\n      let f = []\r\n      setgrade(f)\r\n    }\r\n }\r\n \r\n///options create\r\nlet sessionarray = props.sessions.sessions && Array.isArray(props.sessions.sessions) ? props.sessions.sessions : [];\r\n  let session_array = sessionarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.name}</option>\r\n});\r\n\r\nlet termarray = props.terms.terms && Array.isArray(props.terms.terms) ? props.terms.terms : [];\r\n  let term_array = termarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.name}</option>\r\n})\r\n\r\nlet caarray = props.cas.cas && Array.isArray(props.cas.cas) && props.cas.cas.length > 0  ? props.cas.cas : [];\r\n  let ca_array = caarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <><CCol xs={12}><CSwitch \r\n    className={'my-auto mx-3'} \r\n    variant={'3d'} \r\n    color={'info'} \r\n    checked={rw.id !== undefined ? Array.isArray(ca) && ca.includes(rw.id.toString()) ? true : false:false}\r\n    onChange={(e)=>loadca(e.target.checked, rw.id)}/><span className=\"pb-auto\">{rw.name}</span></CCol></>\r\n})\r\n\r\nlet setting_array = settingz.filter(rw=>rw !== null).map((rw, ind) =>{\r\n  return <><CCol xs={12}><CSwitch \r\n  className={'my-auto mx-3'} \r\n  variant={'3d'} \r\n  color={'warning'} \r\n  checked={Array.isArray(setting) && setting.includes(rw.id) ? true : false}\r\n  onChange={(e)=>loadset(e.target.checked, rw.id)}/><span className=\"pb-auto\">{rw.name}</span></CCol></>\r\n})\r\n\r\nlet gradearray = props.grades.grades && Array.isArray(props.grades.grades) ? props.grades.grades : [];\r\n  let grade_array = gradearray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return  <><CCol xs={12}><CSwitch \r\n      className={'my-auto mx-3'} \r\n      variant={'3d'} \r\n      color={'dark'} \r\n      checked={Array.isArray(grade) && grade.includes(rw.id.toString()) ? true : false}\r\n      onChange={(e)=>loadgrade(e.target.checked, rw.id)}/><span className=\"pb-auto\">{rw.name}</span></CCol></>\r\n})\r\n\r\nlet subjectarray = props.subjects.subjects && Array.isArray(props.subjects.subjects) ? props.subjects.subjects : [];\r\n  let subject_array = subjectarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.name}</option>\r\n})\r\n\r\nlet claszarray = props.claszs.claszs && Array.isArray(props.claszs.claszs) ? props.claszs.claszs : [];\r\n  let clasz_array = claszarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <><CCol xs={12}><CSwitch \r\n        className={'my-auto mx-3'} \r\n        variant={'3d'} \r\n        color={'primary'} \r\n        checked={Array.isArray(clasz) && clasz.includes(rw.id.toString()) ? true : false}\r\n        onChange={(e)=>loadSelect(e.target.checked, rw.id)}/><span className=\"pb-auto\">{rw.name}</span></CCol></>\r\n})\r\n\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    {page !== 1 && page !== 2 && page !== 3 && page !== 4 && page !== 5 ? \r\n    <CCard>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-title\">Report</CLabel>\r\n              <CInput \r\n                  type=\"text\"\r\n                  size=\"lg\" \r\n                  id=\"nf-title\" \r\n                  title=\"title\"\r\n                  value={title}\r\n                  onChange={(e)=>settitle(e.target.value)}\r\n                  placeholder=\"2020/2021 First Term Result\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter report name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  size=\"lg\"\r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setabbrv(e.target.value)}\r\n                  placeholder=\"3RD 2021\" \r\n                />\r\n              <CFormText className=\"help-block\">Give a short representation of the title (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-sessionid\">Session </CLabel>\r\n                  <CSelect\r\n                      type=\"text\" \r\n                      id=\"nf-sessionid\" \r\n                      name=\"sessionid\"\r\n                      defaultValue={sessionid}\r\n                      onChange={(e)=>setsessionid(e.target.value)}\r\n                       \r\n                    >\r\n                      {id && parseInt(id) > 0 ? <option value={data.sessionid}>{data.sessionname}nn</option>:<option></option>}\r\n                      {session_array}\r\n                  </CSelect>\r\n                  <CFormText className=\"help-block\">Select the session</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-termid\">Term </CLabel>\r\n                  <CSelect\r\n                      type=\"text\" \r\n                      id=\"nf-termid\" \r\n                      name=\"termid\"\r\n                      defaultValue={termid}\r\n                      onChange={(e)=>settermid(e.target.value)}\r\n                       \r\n                    >\r\n                      {id && parseInt(id) > 0 ? <option value={data.termid}>{data.termname}</option>:<option></option>}\r\n                      {term_array}\r\n                  </CSelect>\r\n                  <CFormText className=\"help-block\">Select the Term</CFormText>\r\n                </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          {id > 0 ?\r\n          <CButton type=\"reset\" onClick={(prev)=>setpage(prev=>prev + 1)} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Next..</CButton>:\"\"}\r\n        </CCardFooter>\r\n      </CCard>\r\n      :\"\"}\r\n      {page === 1 ? \r\n    <CCard>\r\n        <CCardBody>\r\n        <CRow><CCol><h5>Which Classes would use this result?</h5></CCol></CRow>\r\n        <CRow>\r\n            {clasz_array}\r\n            </CRow>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n        {id > 0 ?\r\n          <CButton type=\"reset\" onClick={(prev)=>setpage(prev=>prev - 1)} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Prev..</CButton>:\"\"}{\" \"}\r\n          <CButton type=\"button\" onClick={handleSubmitClass} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          {id > 0 ?\r\n          <CButton type=\"reset\" onClick={(prev)=>setpage(prev=>prev + 1)} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Next..</CButton>:\"\"}\r\n        </CCardFooter>\r\n      </CCard>\r\n      :\"\"}\r\n     {page === 2 ? \r\n    <CCard>\r\n        <CCardBody>\r\n        <CRow><CCol><h5>Select Assessments, Behaviors and Skills that will make up this report</h5></CCol></CRow>\r\n        \r\n          <CRow>\r\n            {ca_array}\r\n          </CRow>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          {id > 0 ?\r\n          <CButton type=\"reset\" onClick={(prev)=>setpage(prev=>prev - 1)} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Prev..</CButton>:\"\"}\r\n          <CButton type=\"button\" onClick={handleSubmitCa} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          {id > 0 ?\r\n          <CButton type=\"reset\" onClick={(prev)=>setpage(prev=>prev + 1)} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Next..</CButton>:\"\"}\r\n        </CCardFooter>\r\n      </CCard>\r\n      :\"\"}\r\n       {page === 3 ? \r\n    <CCard>\r\n        <CCardBody>\r\n        <CRow><CCol><h5>What items should display on the report card</h5></CCol></CRow>\r\n        <CRow>\r\n            {setting_array}\r\n            </CRow>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n        {id > 0 ?\r\n          <CButton type=\"reset\" onClick={(prev)=>setpage(prev=>prev - 1)} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Prev..</CButton>:\"\"}\r\n          <CButton type=\"submit\" onClick={handleSubmitSetting} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          {id > 0 ?\r\n          <CButton type=\"reset\" onClick={(prev)=>setpage(prev=>prev + 1)} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Next..</CButton>:\"\"}\r\n        </CCardFooter>\r\n      </CCard>\r\n      :\"\"}\r\n      {page === 4 ? \r\n    <CCard>\r\n        <CCardBody>\r\n          <CRow><CCol><h5>Select the grading system to you use.</h5></CCol></CRow>\r\n            <CRow>\r\n            {grade_array}\r\n            </CRow>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n        {id > 0 ?\r\n          <CButton type=\"reset\" onClick={(prev)=>setpage(prev=>prev - 1)} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Prev..</CButton>:\"\"}\r\n          <CButton type=\"submit\" onClick={handleSubmitGrade} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n        {id > 0 ?\r\n          <CButton type=\"reset\" onClick={(prev)=>setpage(prev=>prev + 1)} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Next..</CButton>:\"\"}\r\n        </CCardFooter>\r\n      </CCard>\r\n      :\"\"}\r\n      {page === 5 ? \r\n    <CCard>\r\n        <CCardBody>\r\n          <CRow><CCol><h5>Setup Composite Subjects.</h5></CCol></CRow>\r\n        <CRow>\r\n            {grade_array}\r\n            </CRow>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n        {id > 0 ?\r\n          <CButton type=\"reset\" onClick={(prev)=>setpage(prev=>prev - 1)} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Prev..</CButton>:\"\"}\r\n          <CButton type=\"submit\" onClick={handleSubmitGrade} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          </CCardFooter>\r\n      </CCard>\r\n      :\"\"}\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  reports : state.reportReducer,\r\n  user : state.userReducer,\r\n  sessions : state.sessionReducer,\r\n  subjects : state.subjectReducer,\r\n  terms : state.termReducer,\r\n  cas : state.caReducer,\r\n  grades : state.gradeReducer,\r\n  claszs : state.claszReducer,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerReport,\r\n  updateReport,\r\n  deleteReport,\r\n  getCas,\r\n  getSessions,\r\n  getTerms,\r\n  getSubjects,\r\n  getGrades,\r\n  getClaszs\r\n})(Report)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getReports, getReport, registerReport, updateReport, deleteReport} from './../../../actions/setting/report';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Report = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td style={{textTransform:'capitalize'}}>{row.title}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }   \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Report</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  reports : state.reportReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getReports,\r\n  getReport,\r\n  registerReport,\r\n  updateReport,\r\n  deleteReport\r\n})(Report)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getReports, getReport, updateReport, deleteReport} from './../../../actions/setting/report';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CButton\r\n} from '@coreui/react'\r\nimport ReportForm from'./../Form/Report'\r\nimport ReportTable from'./../Table/Report'\r\nimport Header from './Header';\r\n\r\n\r\nconst Report = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n  const [modal, setModal] = useState(true)\r\n  const toggle = () => {\r\n    setModal(!modal)\r\n    setDts({})\r\n  }\r\n\r\n  //GET REPORTS PER SCHOOL\r\n  useEffect(() => {\r\n   \r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.user.activeschool.id\r\n      }),\r\n      cat:'select',\r\n      table:'reports',\r\n      narration:'get reports'\r\n      }\r\n      props.getReports(params)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setModal(true);\r\n      props.getReport(dt.id)\r\n  }\r\n\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'reports');\r\n    fd.append('narration', `activate ande disable report ${nu}`);\r\n    props.updateReport(fd);\r\n\r\n  }\r\n\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  \r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.reports.reports && Array.isArray(props.reports.reports) ? props.reports.reports.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <ReportTable  \r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}  \r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CModal \r\n              show={modal} \r\n              onClose={setModal}\r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Prepare Report Card</CModalTitle>\r\n              </CModalHeader> \r\n              <CModalBody>\r\n              <ReportForm \r\n                id={id}\r\n                data={dts}\r\n            />\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                \r\n                <CButton \r\n                  color=\"secondary\" \r\n                  onClick={() => setModal(false)}\r\n                >Cancel</CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n        \r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  reports : state.reportReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getReports,\r\n  getReport,\r\n  updateReport,\r\n  deleteReport\r\n})(Report)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerFee, updateFee, deleteFee} from './../../../actions/setting/fee';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Fee = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'fees');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateFee(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerFee(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Fee</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Fee</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Science\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter fee name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Dept. Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"SCI\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter fee abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  fees : state.feeReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerFee,\r\n  updateFee,\r\n  deleteFee\r\n})(Fee)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getFees, getFee, registerFee, updateFee, deleteFee} from './../../../actions/setting/fee';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Fee = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Fee</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  fees : state.feeReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getFees,\r\n  getFee,\r\n  registerFee,\r\n  updateFee,\r\n  deleteFee\r\n})(Fee)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getFees, updateFee, deleteFee} from './../../../actions/setting/fee';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport FeeForm from'./../Form/Fee'\r\nimport FeeTable from'./../Table/Fee'\r\nimport Header from './Header';\r\n\r\n\r\nconst Fee = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET FEES PER SCHOOL\r\n  useEffect(() => {\r\n   \r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.user.activeschool.id\r\n      }),\r\n      cat:'select',\r\n      table:'fees',\r\n      narration:'get fees'\r\n      }\r\n      props.getFees(params)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'fees');\r\n    fd.append('narration', `activate ande disable fee ${nu}`);\r\n    props.updateFee(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.fees.fees && Array.isArray(props.fees.fees) ? props.fees.fees.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <FeeTable  \r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <FeeForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  fees : state.feeReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getFees,\r\n  updateFee,\r\n  deleteFee\r\n})(Fee)\r\n","import axios from 'axios';\r\nimport {\r\n    EXPENSE_GET_ONE,\r\n    EXPENSE_GET_MULTIPLE,\r\n    EXPENSE_REGISTER_SUCCESS,\r\n    EXPENSE_REGISTER_FAIL,\r\n    EXPENSE_LOADING,\r\n    EXPENSE_LOADING_ERROR,\r\n    EXPENSE_UPDATE_SUCCESS,\r\n    EXPENSE_UPDATE_FAIL,\r\n    EXPENSE_DELETE_SUCCESS,\r\n    EXPENSE_DELETE_FAIL\r\n} from \"../../types/setting/expense\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'expenses';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL EXPENSE \r\nexport const getExpenses = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : EXPENSE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: EXPENSE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : EXPENSE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE EXPENSE \r\nexport const getExpense = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : EXPENSE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//EXPENSE DELETE\r\nexport const deleteExpense = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EXPENSE_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : EXPENSE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//EXPENSE REGISTER\r\nexport const registerExpense = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EXPENSE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : EXPENSE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //EXPENSE UPDATE\r\nexport const updateExpense = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EXPENSE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : EXPENSE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerExpense, updateExpense, deleteExpense} from './../../../actions/setting/expense';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Expense = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'expenses');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateExpense(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerExpense(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Expense</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Expense</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Operational Expenses\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter expense name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Expense Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"OPEXP\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter expense abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  expenses : state.expenseReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerExpense,\r\n  updateExpense,\r\n  deleteExpense\r\n})(Expense)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getExpenses, getExpense, registerExpense, updateExpense, deleteExpense} from './../../../actions/setting/expense';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Expense = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = Array.isArray(data) ? data.filter(rw=>rw !== null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        Array.isArray(props.submenu) ? props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) =>history.push(`/setting/${props.sid}/${row.id}/0/0/0/0/0`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        }):''\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  }):''\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Expense</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  expenses : state.expenseReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getExpenses,\r\n  getExpense,\r\n  registerExpense,\r\n  updateExpense,\r\n  deleteExpense\r\n})(Expense)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getExpenses, updateExpense, deleteExpense} from './../../../actions/setting/expense';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport ExpenseForm from'./../Form/Expense'\r\nimport ExpenseTable from'./../Table/Expense'\r\nimport Header from './Header';\r\n\r\n\r\nconst Expense = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET EXPENSES PER SCHOOL\r\n  useEffect(() => {\r\n   \r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n         // 'schoolid':props.user.activeschool.id,\r\n          'is_delete':0\r\n      }),\r\n      cat:'selected',\r\n      table:'expenses',\r\n      narration:'get expenses'\r\n      }\r\n      props.getExpenses(params)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'expenses');\r\n    fd.append('narration', `activate ande disable expense ${nu}`);\r\n    props.updateExpense(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.expenses.expenses && Array.isArray(props.expenses.expenses) ? props.expenses.expenses.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <ExpenseTable  \r\n               sid={props.sid}\r\n               pid={props.pid}\r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <ExpenseForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  expenses : state.expenseReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getExpenses,\r\n  updateExpense,\r\n  deleteExpense\r\n})(Expense)\r\n","import axios from 'axios';\r\nimport {\r\n    EXPENSEUNIT_GET_ONE,\r\n    EXPENSEUNIT_GET_MULTIPLE,\r\n    EXPENSEUNIT_REGISTER_SUCCESS,\r\n    EXPENSEUNIT_REGISTER_FAIL,\r\n    EXPENSEUNIT_LOADING,\r\n    EXPENSEUNIT_LOADING_ERROR,\r\n    EXPENSEUNIT_UPDATE_SUCCESS,\r\n    EXPENSEUNIT_UPDATE_FAIL,\r\n    EXPENSEUNIT_DELETE_SUCCESS,\r\n    EXPENSEUNIT_DELETE_FAIL\r\n} from \"../../types/setting/expenseunit\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'expenseunits';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL EXPENSEUNIT \r\nexport const getExpenseunits = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : EXPENSEUNIT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: EXPENSEUNIT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : EXPENSEUNIT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE EXPENSEUNIT \r\nexport const getExpenseunit = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : EXPENSEUNIT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//EXPENSEUNIT DELETE\r\nexport const deleteExpenseunit = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EXPENSEUNIT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : EXPENSEUNIT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//EXPENSEUNIT REGISTER\r\nexport const registerExpenseunit = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EXPENSEUNIT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : EXPENSEUNIT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //EXPENSEUNIT UPDATE\r\nexport const updateExpenseunit = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: EXPENSEUNIT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : EXPENSEUNIT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerExpenseunit, updateExpenseunit, deleteExpenseunit} from './../../../actions/setting/expenseunit';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Expenseunit = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'expenseunits');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateExpenseunit(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('expenseid', props.pid);\r\n        fd.append('cat', 'insert');\r\n        props.registerExpenseunit(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Expenseunit</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Expenseunit</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Purchase Books\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter expenseunit name</CFormText>\r\n            </CFormGroup>\r\n            \r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  expenseunits : state.expenseunitReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerExpenseunit,\r\n  updateExpenseunit,\r\n  deleteExpenseunit\r\n})(Expenseunit)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getExpenseunits, getExpenseunit, registerExpenseunit, updateExpenseunit, deleteExpenseunit} from './../../../actions/setting/expenseunit';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Expenseunit = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td style={{color: row.color}}>{row.name}{\" \"}{row.abbrv}</td>\r\n                <td className=\"text-center\" style={{color: row.color}}>{row.maxscore}{\" \"}{row.minscore}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                   \r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Name</th>\r\n                    <th><i className='fa fa-list'></i> Range</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  expenseunits : state.expenseunitReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getExpenseunits,\r\n  getExpenseunit,\r\n  registerExpenseunit,\r\n  updateExpenseunit,\r\n  deleteExpenseunit\r\n})(Expenseunit)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getExpenseunits, updateExpenseunit, deleteExpenseunit} from './../../../actions/setting/expenseunit';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport ExpenseunitForm from'./../Form/Expenseunit'\r\nimport ExpenseunitTable from'./../Table/Expenseunit'\r\nimport Header from './Header';\r\n\r\n\r\nconst Expenseunit = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET EXPENSEUNITS PER SCHOOL\r\n  useEffect(() => {\r\n   \r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'expenseid':props.pid\r\n      }),\r\n      cat:'selected',\r\n      table:'expenseunits',\r\n      narration:'get expenseunits'\r\n      }\r\n      props.getExpenseunits(params)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'expenseunits');\r\n    fd.append('narration', `activate ande disable expenseunit ${nu}`);\r\n    props.updateExpenseunit(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.expenseunits.expenseunits && Array.isArray(props.expenseunits.expenseunits) ? props.expenseunits.expenseunits.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <ExpenseunitTable  \r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <ExpenseunitForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  expenseunits : state.expenseunitReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getExpenseunits,\r\n  updateExpenseunit,\r\n  deleteExpenseunit\r\n})(Expenseunit)\r\n","import axios from 'axios';\r\nimport {\r\n    INVENTORY_GET_ONE,\r\n    INVENTORY_GET_MULTIPLE,\r\n    INVENTORY_REGISTER_SUCCESS,\r\n    INVENTORY_REGISTER_FAIL,\r\n    INVENTORY_LOADING,\r\n    INVENTORY_LOADING_ERROR,\r\n    INVENTORY_UPDATE_SUCCESS,\r\n    INVENTORY_UPDATE_FAIL,\r\n    INVENTORY_DELETE_SUCCESS,\r\n    INVENTORY_DELETE_FAIL\r\n} from \"../../types/setting/inventory\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'inventorys';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL INVENTORY \r\nexport const getInventorys = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : INVENTORY_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: INVENTORY_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : INVENTORY_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE INVENTORY \r\nexport const getInventory = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : INVENTORY_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//INVENTORY DELETE\r\nexport const deleteInventory = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: INVENTORY_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : INVENTORY_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//INVENTORY REGISTER\r\nexport const registerInventory = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: INVENTORY_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : INVENTORY_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //INVENTORY UPDATE\r\nexport const updateInventory = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: INVENTORY_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : INVENTORY_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerInventory, updateInventory, deleteInventory} from './../../../actions/setting/inventory';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Inventory = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'inventorys');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateInventory(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerInventory(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Inventory</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Inventory</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Science\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter inventory name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Dept. Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"SCI\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter inventory abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  inventorys : state.inventoryReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerInventory,\r\n  updateInventory,\r\n  deleteInventory\r\n})(Inventory)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getInventorys, getInventory, registerInventory, updateInventory, deleteInventory} from './../../../actions/setting/inventory';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Inventory = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = Array.isArray(data) ? data.filter(rw=>rw !== null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        Array.isArray(props.submenu) ? props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) =>history.push(`/setting/${props.sid}/${row.id}/0/0/0/0/0`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        }):''\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  }):''\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Inventory</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  inventorys : state.inventoryReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getInventorys,\r\n  getInventory,\r\n  registerInventory,\r\n  updateInventory,\r\n  deleteInventory\r\n})(Inventory)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getInventorys, updateInventory, deleteInventory} from './../../../actions/setting/inventory';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport InventoryForm from'./../Form/Inventory'\r\nimport InventoryTable from'./../Table/Inventory'\r\nimport Header from './Header';\r\n\r\n\r\nconst Inventory = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET INVENTORYS PER SCHOOL\r\n  useEffect(() => {\r\n   \r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.user.activeschool.id\r\n      }),\r\n      cat:'select',\r\n      table:'inventorys',\r\n      narration:'get inventorys'\r\n      }\r\n      props.getInventorys(params)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'inventorys');\r\n    fd.append('narration', `activate ande disable inventory ${nu}`);\r\n    props.updateInventory(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.inventorys.inventorys && Array.isArray(props.inventorys.inventorys) ? props.inventorys.inventorys.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <InventoryTable  \r\n                sid={props.sid}\r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <InventoryForm \r\n                id={id}\r\n                sid={props.sid}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  inventorys : state.inventoryReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getInventorys,\r\n  updateInventory,\r\n  deleteInventory\r\n})(Inventory)\r\n","import axios from 'axios';\r\nimport {\r\n    INVENTORYUNIT_GET_ONE,\r\n    INVENTORYUNIT_GET_MULTIPLE,\r\n    INVENTORYUNIT_REGISTER_SUCCESS,\r\n    INVENTORYUNIT_REGISTER_FAIL,\r\n    INVENTORYUNIT_LOADING,\r\n    INVENTORYUNIT_LOADING_ERROR,\r\n    INVENTORYUNIT_UPDATE_SUCCESS,\r\n    INVENTORYUNIT_UPDATE_FAIL,\r\n    INVENTORYUNIT_DELETE_SUCCESS,\r\n    INVENTORYUNIT_DELETE_FAIL\r\n} from \"../../types/setting/inventoryunit\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'inventoryunits';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL INVENTORYUNIT \r\nexport const getInventoryunits = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : INVENTORYUNIT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: INVENTORYUNIT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : INVENTORYUNIT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE INVENTORYUNIT \r\nexport const getInventoryunit = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : INVENTORYUNIT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//INVENTORYUNIT DELETE\r\nexport const deleteInventoryunit = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: INVENTORYUNIT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : INVENTORYUNIT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//INVENTORYUNIT REGISTER\r\nexport const registerInventoryunit = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: INVENTORYUNIT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : INVENTORYUNIT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //INVENTORYUNIT UPDATE\r\nexport const updateInventoryunit = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: INVENTORYUNIT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : INVENTORYUNIT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerInventoryunit, updateInventoryunit, deleteInventoryunit} from './../../../actions/setting/inventoryunit';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CTextarea,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Inventoryunit = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('table', 'inventoryunits');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateInventoryunit(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('inventoryid', props.pid)\r\n        fd.append('cat', 'insert');\r\n        props.registerInventoryunit(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Inventoryunits</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Inventoryunit Description</CLabel>\r\n              <CTextarea \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Monitor students performane\" \r\n                >\r\n                  </CTextarea>\r\n              <CFormText className=\"help-block\">Please enter inventoryunit description</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  inventoryunits : state.inventoryunitReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerInventoryunit,\r\n  updateInventoryunit,\r\n  deleteInventoryunit\r\n})(Inventoryunit)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getInventoryunits, getInventoryunit, registerInventoryunit, updateInventoryunit, deleteInventoryunit} from './../../../actions/setting/inventoryunit';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Inventoryunit = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Inventory Items</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  inventoryunits : state.inventoryunitReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getInventoryunits,\r\n  getInventoryunit,\r\n  registerInventoryunit,\r\n  updateInventoryunit,\r\n  deleteInventoryunit\r\n})(Inventoryunit)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getInventoryunits, getInventoryunit, deleteInventoryunit} from './../../../actions/setting/inventoryunit';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport InventoryunitForm from'./../Form/Inventoryunit'\r\nimport InventoryunitTable from'./../Table/Inventoryunit'\r\nimport Header from './Header';\r\n\r\n\r\nconst Inventoryunit = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'inventoryid':props.pid\r\n        }),\r\n        cat:'select',\r\n        table:'inventoryunits',\r\n        narration:'get inventoryunits'\r\n  \r\n    }\r\n    props.getInventoryunits(params)\r\n    \r\n  }, [props.pid])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n\r\n  //GET INVENTORY NAME\r\n  let ses = props.inventorys.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n  let data = props.inventoryunits.inventoryunits && Array.isArray(props.inventoryunits.inventoryunits) ? props.inventoryunits.inventoryunits.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              pid={props.pid}\r\n              icon={props.para.icon}\r\n              title={sess} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <InventoryunitTable  \r\n                pid={props.pid}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <InventoryunitForm \r\n                pid={props.pid}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  inventoryunits : state.inventoryunitReducer,\r\n  inventorys : state.inventoryReducer.inventorys,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getInventoryunits,\r\n  deleteInventoryunit\r\n})(Inventoryunit)\r\n","import axios from 'axios';\r\nimport {\r\n    MAINTENANCE_GET_ONE,\r\n    MAINTENANCE_GET_MULTIPLE,\r\n    MAINTENANCE_REGISTER_SUCCESS,\r\n    MAINTENANCE_REGISTER_FAIL,\r\n    MAINTENANCE_LOADING,\r\n    MAINTENANCE_LOADING_ERROR,\r\n    MAINTENANCE_UPDATE_SUCCESS,\r\n    MAINTENANCE_UPDATE_FAIL,\r\n    MAINTENANCE_DELETE_SUCCESS,\r\n    MAINTENANCE_DELETE_FAIL\r\n} from \"../../types/setting/maintenance\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'maintenances';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL MAINTENANCE \r\nexport const getMaintenances = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : MAINTENANCE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: MAINTENANCE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : MAINTENANCE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE MAINTENANCE \r\nexport const getMaintenance = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : MAINTENANCE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//MAINTENANCE DELETE\r\nexport const deleteMaintenance = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: MAINTENANCE_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : MAINTENANCE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//MAINTENANCE REGISTER\r\nexport const registerMaintenance = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: MAINTENANCE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : MAINTENANCE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //MAINTENANCE UPDATE\r\nexport const updateMaintenance = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: MAINTENANCE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : MAINTENANCE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerMaintenance, updateMaintenance, deleteMaintenance} from './../../../actions/setting/maintenance';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Maintenance = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'maintenances');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateMaintenance(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerMaintenance(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Maintenance</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Maintenance</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Science\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter maintenance name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Dept. Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"SCI\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter maintenance abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  maintenances : state.maintenanceReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerMaintenance,\r\n  updateMaintenance,\r\n  deleteMaintenance\r\n})(Maintenance)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getMaintenances, getMaintenance, registerMaintenance, updateMaintenance, deleteMaintenance} from './../../../actions/setting/maintenance';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Maintenance = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = Array.isArray(data) ? data.filter(rw=>rw !== null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        Array.isArray(props.submenu) ? props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) =>history.push(`/setting/${props.sid}/${row.id}/0/0/0/0/0`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        }):''\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  }):''\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Maintenance</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  maintenances : state.maintenanceReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getMaintenances,\r\n  getMaintenance,\r\n  registerMaintenance,\r\n  updateMaintenance,\r\n  deleteMaintenance\r\n})(Maintenance)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getMaintenances, updateMaintenance, deleteMaintenance} from './../../../actions/setting/maintenance';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport MaintenanceForm from'./../Form/Maintenance'\r\nimport MaintenanceTable from'./../Table/Maintenance'\r\nimport Header from './Header';\r\n\r\n\r\nconst Maintenance = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET MAINTENANCES PER SCHOOL\r\n  useEffect(() => {\r\n   \r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.user.activeschool.id\r\n      }),\r\n      cat:'select',\r\n      table:'maintenances',\r\n      narration:'get maintenances'\r\n      }\r\n      props.getMaintenances(params)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'maintenances');\r\n    fd.append('narration', `activate ande disable maintenance ${nu}`);\r\n    props.updateMaintenance(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.maintenances.maintenances && Array.isArray(props.maintenances.maintenances) ? props.maintenances.maintenances.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <MaintenanceTable  \r\n                sid={props.sid}\r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <MaintenanceForm \r\n                id={id}\r\n                sid={props.sid}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  maintenances : state.maintenanceReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getMaintenances,\r\n  updateMaintenance,\r\n  deleteMaintenance\r\n})(Maintenance)\r\n","import axios from 'axios';\r\nimport {\r\n    MAINTENANCEUNIT_GET_ONE,\r\n    MAINTENANCEUNIT_GET_MULTIPLE,\r\n    MAINTENANCEUNIT_REGISTER_SUCCESS,\r\n    MAINTENANCEUNIT_REGISTER_FAIL,\r\n    MAINTENANCEUNIT_LOADING,\r\n    MAINTENANCEUNIT_LOADING_ERROR,\r\n    MAINTENANCEUNIT_UPDATE_SUCCESS,\r\n    MAINTENANCEUNIT_UPDATE_FAIL,\r\n    MAINTENANCEUNIT_DELETE_SUCCESS,\r\n    MAINTENANCEUNIT_DELETE_FAIL\r\n} from \"../../types/setting/maintenanceunit\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'maintenanceunits';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL MAINTENANCEUNIT \r\nexport const getMaintenanceunits = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : MAINTENANCEUNIT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: MAINTENANCEUNIT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : MAINTENANCEUNIT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE MAINTENANCEUNIT \r\nexport const getMaintenanceunit = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : MAINTENANCEUNIT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//MAINTENANCEUNIT DELETE\r\nexport const deleteMaintenanceunit = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: MAINTENANCEUNIT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : MAINTENANCEUNIT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//MAINTENANCEUNIT REGISTER\r\nexport const registerMaintenanceunit = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: MAINTENANCEUNIT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : MAINTENANCEUNIT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //MAINTENANCEUNIT UPDATE\r\nexport const updateMaintenanceunit = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: MAINTENANCEUNIT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : MAINTENANCEUNIT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerMaintenanceunit, updateMaintenanceunit, deleteMaintenanceunit} from './../../../actions/setting/maintenanceunit';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CTextarea,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Maintenanceunit = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('table', 'maintenanceunits');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateMaintenanceunit(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('maintenanceid', props.pid)\r\n        fd.append('cat', 'insert');\r\n        props.registerMaintenanceunit(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Maintenanceunits</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Maintenanceunit Description</CLabel>\r\n              <CTextarea \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Monitor students performane\" \r\n                >\r\n                  </CTextarea>\r\n              <CFormText className=\"help-block\">Please enter maintenanceunit description</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  maintenanceunits : state.maintenanceunitReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerMaintenanceunit,\r\n  updateMaintenanceunit,\r\n  deleteMaintenanceunit\r\n})(Maintenanceunit)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getMaintenanceunits, getMaintenanceunit, registerMaintenanceunit, updateMaintenanceunit, deleteMaintenanceunit} from './../../../actions/setting/maintenanceunit';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Maintenanceunit = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Sub units</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  maintenanceunits : state.maintenanceunitReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getMaintenanceunits,\r\n  getMaintenanceunit,\r\n  registerMaintenanceunit,\r\n  updateMaintenanceunit,\r\n  deleteMaintenanceunit\r\n})(Maintenanceunit)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getMaintenanceunits, getMaintenanceunit, deleteMaintenanceunit} from './../../../actions/setting/maintenanceunit';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport MaintenanceunitForm from'./../Form/Maintenanceunit'\r\nimport MaintenanceunitTable from'./../Table/Maintenanceunit'\r\nimport Header from './Header';\r\n\r\n\r\nconst Maintenanceunit = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'maintenanceid':props.pid\r\n        }),\r\n        cat:'select',\r\n        table:'maintenanceunits',\r\n        narration:'get maintenanceunits'\r\n  \r\n    }\r\n    props.getMaintenanceunits(params)\r\n    \r\n  }, [props.pid])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n\r\n  //GET MAINTENANCE NAME\r\n  let ses = props.maintenances.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n \r\n  let data = props.maintenanceunits.maintenanceunits && Array.isArray(props.maintenanceunits.maintenanceunits) ? props.maintenanceunits.maintenanceunits.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              pid={props.pid}\r\n              icon={props.para.icon}\r\n              title={sess} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <MaintenanceunitTable  \r\n                pid={props.pid}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <MaintenanceunitForm \r\n                pid={props.pid}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  maintenanceunits : state.maintenanceunitReducer,\r\n  maintenances : state.maintenanceReducer.maintenances,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getMaintenanceunits,\r\n  deleteMaintenanceunit\r\n})(Maintenanceunit)\r\n","import axios from 'axios';\r\nimport {\r\n    OFFICE_GET_ONE,\r\n    OFFICE_GET_MULTIPLE,\r\n    OFFICE_REGISTER_SUCCESS,\r\n    OFFICE_REGISTER_FAIL,\r\n    OFFICE_LOADING,\r\n    OFFICE_LOADING_ERROR,\r\n    OFFICE_UPDATE_SUCCESS,\r\n    OFFICE_UPDATE_FAIL,\r\n    OFFICE_DELETE_SUCCESS,\r\n    OFFICE_DELETE_FAIL\r\n} from \"../../types/setting/office\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'offices';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL OFFICE \r\nexport const getOffices = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : OFFICE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: OFFICE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : OFFICE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE OFFICE \r\nexport const getOffice = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : OFFICE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//OFFICE DELETE\r\nexport const deleteOffice = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: OFFICE_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : OFFICE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//OFFICE REGISTER\r\nexport const registerOffice = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: OFFICE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : OFFICE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //OFFICE UPDATE\r\nexport const updateOffice = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: OFFICE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : OFFICE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerOffice, updateOffice, deleteOffice} from './../../../actions/setting/office';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Office = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'offices');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateOffice(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerOffice(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Office</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Office</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Science\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter office name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Dept. Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"SCI\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter office abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  offices : state.officeReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerOffice,\r\n  updateOffice,\r\n  deleteOffice\r\n})(Office)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getOffices, getOffice, registerOffice, updateOffice, deleteOffice} from './../../../actions/setting/office';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Office = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${row.id}/0/0/0/0/0`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Office</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  offices : state.officeReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getOffices,\r\n  getOffice,\r\n  registerOffice,\r\n  updateOffice,\r\n  deleteOffice\r\n})(Office)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getOffices, updateOffice, deleteOffice} from './../../../actions/setting/office';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport OfficeForm from'./../Form/Office'\r\nimport OfficeTable from'./../Table/Office'\r\nimport Header from './Header';\r\n\r\n\r\nconst Office = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET OFFICES PER SCHOOL\r\n  useEffect(() => {\r\n   \r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.user.activeschool.id\r\n      }),\r\n      cat:'select',\r\n      table:'offices',\r\n      narration:'get offices'\r\n      }\r\n      props.getOffices(params)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'offices');\r\n    fd.append('narration', `activate ande disable office ${nu}`);\r\n    props.updateOffice(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.offices.offices && Array.isArray(props.offices.offices) ? props.offices.offices.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <OfficeTable  \r\n                sid={props.sid}\r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <OfficeForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  offices : state.officeReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getOffices,\r\n  updateOffice,\r\n  deleteOffice\r\n})(Office)\r\n","import axios from 'axios';\r\nimport {\r\n    JOB_GET_ONE,\r\n    JOB_GET_MULTIPLE,\r\n    JOB_REGISTER_SUCCESS,\r\n    JOB_REGISTER_FAIL,\r\n    JOB_LOADING,\r\n    JOB_LOADING_ERROR,\r\n    JOB_UPDATE_SUCCESS,\r\n    JOB_UPDATE_FAIL,\r\n    JOB_DELETE_SUCCESS,\r\n    JOB_DELETE_FAIL\r\n} from \"../../types/setting/job\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'jobs';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL JOB \r\nexport const getJobs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : JOB_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: JOB_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : JOB_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE JOB \r\nexport const getJob = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : JOB_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//JOB DELETE\r\nexport const deleteJob = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: JOB_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : JOB_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//JOB REGISTER\r\nexport const registerJob = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: JOB_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : JOB_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //JOB UPDATE\r\nexport const updateJob = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: JOB_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : JOB_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerJob, updateJob, deleteJob} from './../../../actions/setting/job';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CTextarea,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Job = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('table', 'jobs');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateJob(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('officeid', props.pid)\r\n        fd.append('cat', 'insert');\r\n        props.registerJob(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Jobs</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Job Description</CLabel>\r\n              <CTextarea \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Monitor students performane\" \r\n                >\r\n                  </CTextarea>\r\n              <CFormText className=\"help-block\">Please enter job description</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  jobs : state.jobReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerJob,\r\n  updateJob,\r\n  deleteJob\r\n})(Job)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getJobs, getJob, registerJob, updateJob, deleteJob} from './../../../actions/setting/job';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Job = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Jobs</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  jobs : state.jobReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getJobs,\r\n  getJob,\r\n  registerJob,\r\n  updateJob,\r\n  deleteJob\r\n})(Job)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getJobs, getJob, deleteJob} from './../../../actions/setting/job';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport JobForm from'./../Form/Job'\r\nimport JobTable from'./../Table/Job'\r\nimport Header from './Header';\r\n\r\n\r\nconst Job = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'officeid':props.pid\r\n        }),\r\n        cat:'select',\r\n        table:'jobs',\r\n        narration:'get jobs'\r\n  \r\n    }\r\n    props.getJobs(params)\r\n    \r\n  }, [props.pid])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n\r\n  //GET OFFICE NAME\r\n  let ses = props.offices.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n \r\n  let data = props.jobs.jobs && Array.isArray(props.jobs.jobs) ? props.jobs.jobs.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              pid={props.pid}\r\n              icon={props.para.icon}\r\n              title={sess} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <JobTable  \r\n                pid={props.pid}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <JobForm \r\n                pid={props.pid}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  jobs : state.jobReducer,\r\n  offices : state.officeReducer.offices,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getJobs,\r\n  deleteJob\r\n})(Job)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerLevel, updateLevel, deleteLevel} from './../../../actions/setting/level';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Level = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'levels');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateLevel(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerLevel(fd)\r\n      }\r\n      setId(null);\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Level</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Level</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Science\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter level name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-abbrv\">Dept. Abbrv </CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-abbrv\" \r\n                  name=\"abbrv\"\r\n                  value={abbrv}\r\n                  onChange={(e)=>setAbbrv(e.target.value)}\r\n                  placeholder=\"SCI\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter level abbrv (max 6 characters)</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  levels : state.levelReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerLevel,\r\n  updateLevel,\r\n  deleteLevel\r\n})(Level)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getLevels, getLevel, registerLevel, updateLevel, deleteLevel} from './../../../actions/setting/level';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Level = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Level</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  levels : state.levelReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getLevels,\r\n  getLevel,\r\n  registerLevel,\r\n  updateLevel,\r\n  deleteLevel\r\n})(Level)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getLevels, updateLevel, deleteLevel} from './../../../actions/setting/level';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport LevelForm from'./../Form/Level'\r\nimport LevelTable from'./../Table/Level'\r\nimport Header from './Header';\r\n\r\n\r\nconst Level = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET LEVELS PER SCHOOL\r\n  useEffect(() => {\r\n   \r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.user.activeschool.id\r\n      }),\r\n      cat:'select',\r\n      table:'levels',\r\n      narration:'get levels'\r\n      }\r\n      props.getLevels(params)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'levels');\r\n    fd.append('narration', `activate ande disable level ${nu}`);\r\n    props.updateLevel(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.levels.levels && Array.isArray(props.levels.levels) ? props.levels.levels.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <LevelTable  \r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <LevelForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  levels : state.levelReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getLevels,\r\n  updateLevel,\r\n  deleteLevel\r\n})(Level)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerNotice, updateNotice, deleteNotice} from './../../../actions/setting/notice';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CTextarea,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Notice = (props) => {\r\n  const [id, setId] = useState(null)\r\n  const [title, setTitle] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [source, setSource] = useState('')\r\n  const [links, setLinks] = useState('')\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data.id && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setTitle(dt.title);\r\n      setMessage(dt.message);\r\n      setSource(dt.source);\r\n      setLinks(dt.links);\r\n    }else{\r\n      setId(null);\r\n      setTitle('');\r\n      setMessage('');\r\n      setSource('');\r\n      setLinks('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n  const handleSubmit = () =>{\r\n    if(title.length > 0){\r\n      let fd = new FormData();\r\n\r\n      fd.append('title', title);\r\n      fd.append('message', message);\r\n      fd.append('source', source);\r\n      fd.append('links', links);\r\n      fd.append('table', 'notices');\r\n      fd.append('staffid', props.user.mid);\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateNotice(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('cat', 'insert');\r\n        props.registerNotice(fd)\r\n      }\r\n      setId(null);\r\n      setTitle('');\r\n      setMessage('');\r\n    }\r\n  }\r\n \r\n   return (\r\n    <CCol xl={12}  id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small><br/> Notifications</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-title\">Title</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-title\" \r\n                  name=\"title\"\r\n                  value={title}\r\n                  onChange={(e)=>setTitle(e.target.value)}\r\n                  placeholder=\"Resumption Date Third Term 2020\" \r\n                />\r\n              <CFormText className=\"help-block\">State title, Be specific</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-message\">Message </CLabel>\r\n              <CTextarea  \r\n                  id=\"nf-message\" \r\n                  name=\"message\"\r\n                  value={message}\r\n                  onChange={(e)=>setMessage(e.target.value)}\r\n                  placeholder=\"All staff should do note that ...\" \r\n                ></CTextarea>\r\n              <CFormText className=\"help-block\">Please type in or paste message</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-source\">Source</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-source\" \r\n                  name=\"source\"\r\n                  value={source}\r\n                  onChange={(e)=>setSource(e.target.value)}\r\n                  placeholder=\"College Principal's Office\" \r\n                />\r\n              <CFormText className=\"help-block\">State title, Be specific</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-links\">Downloads </CLabel>\r\n              <CInput  \r\n                  id=\"nf-links\" \r\n                  type='file'\r\n                  name=\"links\"\r\n                  value={links}\r\n                  onChange={(e)=>setLinks(e.target.value)}\r\n                  placeholder=\"Select Document\" \r\n                />\r\n              <CFormText className=\"help-block\">Attache a downloadable file, if available</CFormText>\r\n            </CFormGroup>\r\n          </CForm>\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  notices : state.noticeReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerNotice,\r\n  updateNotice,\r\n  deleteNotice\r\n})(Notice)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getNotices, getNotice, registerNotice, updateNotice, deleteNotice} from './../../../actions/setting/notice';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Notice = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>\r\n                    <h6>{row.title}</h6>\r\n                    <strong>{row.message}</strong><br/>\r\n                    <strong><i>{row.source}</i></strong><br/>\r\n                    <a href=\"\">Download</a>\r\n                </td>\r\n                { props.editer === true  || (Array.isArray(props.submenu) && props.submenu.length > 0) ? \r\n                <td className='text-center'>\r\n                    {\r\n                        props.submenu.map((prp, ind)=>{\r\n                            return <a  key={ind} title={prp.tag} onClick={(item) => history.push(`/setting/${props.sid}/${props.pid}/${row.id}`)}><i className='fa fa-list ml-2 px-2'></i></a>\r\n                        })\r\n                     }\r\n                        \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-thumbs-down text-danger' : 'fa-thumbs-up text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>:''}\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Notice</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i> Abbrv</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  notices : state.noticeReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getNotices,\r\n  getNotice,\r\n  registerNotice,\r\n  updateNotice,\r\n  deleteNotice\r\n})(Notice)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getNotices, updateNotice, deleteNotice} from './../../../actions/setting/notice';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport NoticeForm from'./../Form/Notice'\r\nimport NoticeTable from'./../Table/Notice'\r\nimport Header from './Header';\r\n\r\n\r\nconst Notice = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET NOTICES PER SCHOOL\r\n  useEffect(() => {\r\n   \r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.user.activeschool.id\r\n      }),\r\n      cat:'selected',\r\n      table:'notices',\r\n      narration:'get notices'\r\n      }\r\n      props.getNotices(params)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'update');\r\n    fd.append('table', 'notices');\r\n    fd.append('narration', `activate ande disable notice ${nu}`);\r\n    props.updateNotice(fd);\r\n\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.notices.notices && Array.isArray(props.notices.notices) ? props.notices.notices.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              icon={props.para.icon}\r\n              title={props.para.name} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <NoticeTable  \r\n                data={data}\r\n                title={props.para.name} \r\n                submenu={props.para.submenu}\r\n                editer={true}\r\n                onActivate={(rw, num)=>onActivate(rw, num)}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <NoticeForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  notices : state.noticeReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getNotices,\r\n  updateNotice,\r\n  deleteNotice\r\n})(Notice)\r\n","import React, { useState} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { controls } from '../../actions/common';\r\nimport School from './Stage/School';\r\nimport Staff from './Stage/Staff';\r\nimport Student from './Stage/Student';\r\nimport Calendar from './Stage/Calendar';\r\nimport Term from './Stage/Term';\r\nimport Terms from './Stage/Terms';\r\nimport Department from './Stage/Department';\r\nimport Unit from './Stage/Unit';\r\nimport Subject from './Stage/Subject';\r\nimport Theme from './Stage/Theme';\r\nimport Admission from './Stage/Admission';\r\nimport Timetable from './Stage/Timetable';\r\nimport Clasz from './Stage/Clasz';\r\nimport Claszunit from './Stage/Claszunit';\r\nimport Cbt from './Stage/Cbt';\r\nimport Cbtexam from './Stage/Cbtexam';\r\nimport Account from './Stage/Account';\r\nimport Assessment from './Stage/Ca';\r\nimport Assessmentunit from './Stage/Caunit';\r\nimport Grade from './Stage/Grade';\r\nimport Gradeunit from './Stage/Gradeunit';\r\nimport Classallocation from './Stage/Staffclass';\r\nimport Subjectallocation from './Stage/Staffsubject';\r\nimport Classfee from './Stage/Classfee'\r\nimport Week from './Stage/Week';\r\nimport Report from './Stage/Report';\r\nimport Fee from './Stage/Fee';\r\nimport Expense from './Stage/Expense';\r\nimport Expenseunit from './Stage/Expenseunit';\r\nimport Inventory from './Stage/Inventory';\r\nimport Inventoryunit from './Stage/Inventoryunit';\r\nimport Maintenance from './Stage/Maintenance';\r\nimport Maintenanceunit from './Stage/Maintenanceunit';\r\nimport Office from './Stage/Office';\r\nimport Job from './Stage/Job';\r\nimport Level from './Stage/Level';\r\nimport Notice from './Stage/Notice';\r\n\r\nconst Setting = (props) => {\r\n  const sid = useParams().sid;\r\n  const pid = useParams().pid;\r\n  const qid = useParams().qid;\r\n  const did = useParams().did;\r\n  const kid = useParams().kid;\r\n  const perm = [];\r\n  let cats = controls[2].data;\r\n  const confirm = (sid, perms, Component) =>{\r\n    return Component;\r\n  }\r\n\r\n  let acs = props.user.user.access !== undefined && props.user.user.access.length > 0 ? JSON.parse(props.user.user.access) : {};\r\n  let mainedt = 1\r\n  \r\n  //get all access in object form\r\n  if(Object.keys(acs).length > 0 && props.user.isAdmin === false)\r\n  {\r\n      let ids = props.user.activeschool.id;\r\n      \r\n      if(acs !== undefined  && acs.hasOwnProperty(ids))\r\n      {\r\n         \r\n         if(sid in acs[ids][2])\r\n         {\r\n            if(2 in acs[ids][2][sid])\r\n            {\r\n               mainedt = 0\r\n            }\r\n            \r\n         }else\r\n         {\r\n            return <Redirect to=\"/settings\" />\r\n         }\r\n\r\n      }else\r\n      {\r\n        return <Redirect to=\"/settings\" />\r\n      }\r\n  }else if(props.user.isAdmin === true) \r\n  {\r\n     mainedt = 0\r\n  }else{\r\n   return <Redirect to=\"/settings\" />\r\n  }\r\n\r\n  return (\r\n      <>\r\n        {parseInt(sid) === 1 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Staff edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 2 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Student edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 3 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ?\r\n        confirm(sid, perm, <Calendar edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 3 && parseInt(pid) > 0 &&  parseInt(qid) === 0 ?\r\n        confirm(sid, perm,\r\n           <Term\r\n              sid={sid}\r\n              pid={pid}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 3 && parseInt(pid) > 0 &&  parseInt(qid) > 0 &&  parseInt(did) == 0 &&  parseInt(kid) == 0 ?\r\n        confirm(sid, perm,\r\n           <Terms\r\n              sid={sid}\r\n              pid={pid}\r\n              qid={qid}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 3 && parseInt(pid) > 0 &&  parseInt(qid) > 0 &&  parseInt(did) == 1 &&  parseInt(kid) == 0 ?\r\n        confirm(sid, perm,\r\n           <Assessment\r\n              sid={sid}\r\n              pid={pid}\r\n              qid={qid}\r\n              did={did}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 3 && parseInt(pid) > 0 &&  parseInt(qid) > 0 &&  parseInt(did) == 1 &&  parseInt(kid) > 0 ?\r\n        confirm(sid, perm,\r\n           <Assessmentunit\r\n              sid={sid}\r\n              pid={pid}\r\n              qid={qid}\r\n              did={did}\r\n              kid={kid}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 3 && parseInt(pid) > 0 &&  parseInt(qid) > 0 &&  parseInt(did) == 2 &&  parseInt(kid) == 0?\r\n        confirm(sid, perm,\r\n           <Assessment\r\n               sid={sid}\r\n               pid={pid}\r\n               qid={qid}\r\n               did={did}\r\n               kid={kid}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 3 && parseInt(pid) > 0 &&  parseInt(qid) > 0 &&  parseInt(did) == 2 &&  parseInt(kid) > 0?\r\n        confirm(sid, perm,\r\n           <Assessmentunit\r\n               sid={sid}\r\n               pid={pid}\r\n               qid={qid}\r\n               did={did}\r\n               kid={kid}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n       {parseInt(sid) === 3 && parseInt(pid) > 0 &&  parseInt(qid) > 0 &&  parseInt(did) == 3 &&  parseInt(kid) == 0?\r\n        confirm(sid, perm,\r\n           <Assessment\r\n               sid={sid}\r\n               pid={pid}\r\n               qid={qid}\r\n               did={did}\r\n               kid={kid}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 3 && parseInt(pid) > 0 &&  parseInt(qid) > 0 &&  parseInt(did) == 3 &&  parseInt(kid) > 0?\r\n        confirm(sid, perm,\r\n           <Assessmentunit\r\n               sid={sid}\r\n               pid={pid}\r\n               qid={qid}\r\n               did={did}\r\n               kid={kid}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 3 && parseInt(pid) > 0 &&  parseInt(qid) > 0 &&  parseInt(did) == 4?\r\n        confirm(sid, perm,\r\n           <Classallocation\r\n              sid={sid}\r\n              pid={pid}\r\n              qid={qid}\r\n              did={did}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 3 && parseInt(pid) > 0 &&  parseInt(qid) > 0 &&  parseInt(did) == 5?\r\n        confirm(sid, perm,\r\n           <Subjectallocation\r\n              sid={sid}\r\n              pid={pid}\r\n              qid={qid}\r\n              did={did}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n         \r\n         {parseInt(sid) === 3 && parseInt(pid) > 0 &&  parseInt(qid) > 0 &&  parseInt(did) == 7?\r\n        confirm(sid, perm,\r\n           <Classfee\r\n              sid={sid}\r\n              pid={pid}\r\n              qid={qid}\r\n              did={did}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n         {parseInt(sid) === 3 && parseInt(pid) > 0 &&  parseInt(qid) > 0 &&  parseInt(did) == 10?\r\n        confirm(sid, perm,\r\n           <Week\r\n              sid={sid}\r\n              pid={pid}\r\n              qid={qid}\r\n              did={did}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 4 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <School sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 5 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Department sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 5 && parseInt(pid) > 0 &&  parseInt(qid) === 0 ?\r\n        confirm(sid, perm,\r\n           <Unit\r\n               sid={sid}\r\n               pid={pid}\r\n               qid={qid}\r\n               did={did}\r\n               edits={mainedt}\r\n               school={props.user.activeschool} \r\n               para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 6 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Subject sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 6 && parseInt(pid) > 0 &&  parseInt(qid) === 0 ?\r\n        confirm(sid, perm,\r\n           <Theme\r\n               sid={sid}\r\n               pid={pid}\r\n               qid={qid}\r\n               did={did}\r\n               edits={mainedt}\r\n               school={props.user.activeschool} \r\n               para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 7 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Admission sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 8 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Timetable sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 9 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Clasz sid={sid} edits={mainedt} school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 9 && parseInt(pid) > 0 &&  parseInt(qid) === 0 ?\r\n        confirm(sid, perm,\r\n           <Claszunit\r\n              pid={pid}\r\n              sid={sid}\r\n              qid={qid}\r\n              did={did}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {(parseInt(sid) === 10 || parseInt(sid) === 11 || parseInt(sid) === 12) && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Account sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 11 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Expense sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 11 && parseInt(pid) > 0 &&  parseInt(qid) === 0 ?\r\n        confirm(sid, perm,\r\n           <Expenseunit\r\n               pid={pid}\r\n               sid={sid}\r\n               qid={qid}\r\n               did={did}\r\n               edits={mainedt}\r\n               school={props.user.activeschool} \r\n               para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 12 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Cbt sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 12 && parseInt(pid) > 0 &&  parseInt(qid) === 0 ?\r\n        confirm(sid, perm,\r\n           <Cbtexam\r\n               pid={pid}\r\n               sid={sid}\r\n               qid={qid}\r\n               did={did}\r\n               edits={mainedt}\r\n               school={props.user.activeschool} \r\n               para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 13 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Grade sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 13 && parseInt(pid) > 0 &&  parseInt(qid) === 0 ?\r\n        confirm(sid, perm,\r\n           <Gradeunit\r\n               pid={pid}\r\n               sid={sid}\r\n               qid={qid}\r\n               did={did}\r\n               edits={mainedt}\r\n               school={props.user.activeschool} \r\n               para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 14 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Report sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 15 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Fee sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 16 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Inventory sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 16 && parseInt(pid) > 0 &&  parseInt(qid) === 0 ?\r\n        confirm(sid, perm,\r\n           <Inventoryunit\r\n               pid={pid}\r\n               sid={sid}\r\n               qid={qid}\r\n               did={did}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 17 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Maintenance sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 17 && parseInt(pid) > 0 &&  parseInt(qid) === 0 ?\r\n        confirm(sid, perm,\r\n           <Maintenanceunit\r\n              pid={pid}\r\n              sid={sid}\r\n              qid={qid}\r\n              did={did}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 18 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Office sid={sid} edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 18 && parseInt(pid) > 0 &&  parseInt(qid) === 0 ?\r\n        confirm(sid, perm,\r\n           <Job\r\n              pid={pid}\r\n              sid={sid}\r\n              qid={qid}\r\n              did={did}\r\n              edits={mainedt}\r\n              school={props.user.activeschool} \r\n              para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} \r\n            />):''}\r\n        {parseInt(sid) === 19 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Level sid={sid}edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n        {parseInt(sid) === 20 && parseInt(pid) === 0 &&  parseInt(qid) === 0 ? \r\n        confirm(sid, perm, <Notice sid={sid}edits={mainedt}school={props.user.activeschool} para={cats.filter(rw=>parseInt(rw.id) === parseInt(sid))[0]} />):''}\r\n       </>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n    activeTerm : state.termReducer.activeTerm,\r\n    user : state.userReducer,\r\n  })\r\n  \r\nexport default connect(mapStateToProps, {\r\n \r\n})(Setting)\r\n","import axios from 'axios';\r\nimport {\r\n    CA_GET_ONE,\r\n    CA_GET_MULTIPLE,\r\n    CA_REGISTER_SUCCESS,\r\n    CA_REGISTER_FAIL,\r\n    CA_LOADING,\r\n    CA_LOADING_ERROR,\r\n    CA_UPDATE_SUCCESS,\r\n    CA_UPDATE_FAIL,\r\n    CA_DELETE_SUCCESS,\r\n    CA_DELETE_FAIL\r\n} from \"../../types/setting/ca\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'cas';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CA \r\nexport const getCas = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : CA_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CA_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CA_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CA \r\nexport const getCa = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CA_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CA DELETE\r\nexport const deleteCa = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CA REGISTER\r\nexport const registerCa = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CA UPDATE\r\nexport const updateCa = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    SCHOOL_GET_ONE,\r\n    SCHOOL_GET_MULTIPLE,\r\n    SCHOOL_GET_DROPDOWNS,\r\n    SCHOOL_REGISTER_SUCCESS,\r\n    SCHOOL_REGISTER_FAIL,\r\n    SCHOOL_LOADING,\r\n    SCHOOL_LOADING_ERROR,\r\n    SCHOOL_UPDATE_SUCCESS,\r\n    SCHOOL_UPDATE_FAIL,\r\n    SCHOOL_DELETE_SUCCESS,\r\n    SCHOOL_DELETE_FAIL\r\n} from \"../../types/setting/school\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'schools';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL SCHOOL \r\nexport const getSchools = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : SCHOOL_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SCHOOL_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SCHOOL_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL SCHOOL \r\nexport const getSchooldropdowns = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : SCHOOL_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SCHOOL_GET_DROPDOWNS,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SCHOOL_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE SCHOOL \r\nexport const getSchool = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : SCHOOL_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//SCHOOL DELETE\r\nexport const deleteSchool = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SCHOOL_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SCHOOL_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//SCHOOL REGISTER\r\nexport const registerSchool = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SCHOOL_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SCHOOL_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //SCHOOL UPDATE\r\nexport const updateSchool = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SCHOOL_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SCHOOL_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    SESSION_GET_ONE,\r\n    SESSION_GET_MULTIPLE,\r\n    SESSION_REGISTER_SUCCESS,\r\n    SESSION_REGISTER_FAIL,\r\n    SESSION_LOADING,\r\n    SESSION_LOADING_ERROR,\r\n    SESSION_UPDATE_SUCCESS,\r\n    SESSION_UPDATE_FAIL,\r\n    SESSION_DELETE_SUCCESS,\r\n    SESSION_DELETE_FAIL\r\n} from \"./../../types/setting/session\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'sessions';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL SESSION \r\nexport const getSessions = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : SESSION_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SESSION_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SESSION_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE SESSION \r\nexport const getSession = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : SESSION_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//SESSION DELETE\r\nexport const deleteSession = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//SESSION REGISTER\r\nexport const registerSession = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //SESSION UPDATE\r\nexport const updateSession = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    ADMISSION_GET_ONE,\r\n    ADMISSION_GET_MULTIPLE,\r\n    ADMISSION_REGISTER_SUCCESS,\r\n    ADMISSION_REGISTER_FAIL,\r\n    ADMISSION_LOADING,\r\n    ADMISSION_LOADING_ERROR,\r\n    ADMISSION_UPDATE_SUCCESS,\r\n    ADMISSION_UPDATE_FAIL,\r\n    ADMISSION_DELETE_SUCCESS,\r\n    ADMISSION_DELETE_FAIL\r\n} from \"../../types/setting/admission\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'admissions';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL ADMISSION \r\nexport const getAdmissions = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : ADMISSION_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: ADMISSION_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : ADMISSION_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE ADMISSION \r\nexport const getAdmission = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : ADMISSION_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//ADMISSION DELETE\r\nexport const deleteAdmission = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADMISSION_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : ADMISSION_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//ADMISSION REGISTER\r\nexport const registerAdmission = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADMISSION_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : ADMISSION_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //ADMISSION UPDATE\r\nexport const updateAdmission = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADMISSION_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : ADMISSION_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    DEPARTMENT_GET_ONE,\r\n    DEPARTMENT_GET_MULTIPLE,\r\n    DEPARTMENT_REGISTER_SUCCESS,\r\n    DEPARTMENT_REGISTER_FAIL,\r\n    DEPARTMENT_LOADING,\r\n    DEPARTMENT_LOADING_ERROR,\r\n    DEPARTMENT_UPDATE_SUCCESS,\r\n    DEPARTMENT_UPDATE_FAIL,\r\n    DEPARTMENT_DELETE_SUCCESS,\r\n    DEPARTMENT_DELETE_FAIL\r\n} from \"../../types/setting/department\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'departments';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL DEPARTMENT \r\nexport const getDepartments = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : DEPARTMENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: DEPARTMENT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : DEPARTMENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE DEPARTMENT \r\nexport const getDepartment = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : DEPARTMENT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//DEPARTMENT DELETE\r\nexport const deleteDepartment = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DEPARTMENT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : DEPARTMENT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//DEPARTMENT REGISTER\r\nexport const registerDepartment = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DEPARTMENT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : DEPARTMENT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //DEPARTMENT UPDATE\r\nexport const updateDepartment = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DEPARTMENT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : DEPARTMENT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    FEE_GET_ONE,\r\n    FEE_GET_MULTIPLE,\r\n    FEE_REGISTER_SUCCESS,\r\n    FEE_REGISTER_FAIL,\r\n    FEE_LOADING,\r\n    FEE_LOADING_ERROR,\r\n    FEE_UPDATE_SUCCESS,\r\n    FEE_UPDATE_FAIL,\r\n    FEE_DELETE_SUCCESS,\r\n    FEE_DELETE_FAIL\r\n} from \"../../types/setting/fee\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'fees';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL FEE \r\nexport const getFees = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : FEE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: FEE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : FEE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE FEE \r\nexport const getFee = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : FEE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//FEE DELETE\r\nexport const deleteFee = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: FEE_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : FEE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//FEE REGISTER\r\nexport const registerFee = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: FEE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : FEE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //FEE UPDATE\r\nexport const updateFee = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: FEE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : FEE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    ACCOUNT_GET_ONE,\r\n    ACCOUNT_GET_MULTIPLE,\r\n    ACCOUNT_REGISTER_SUCCESS,\r\n    ACCOUNT_REGISTER_FAIL,\r\n    ACCOUNT_LOADING,\r\n    ACCOUNT_LOADING_ERROR,\r\n    ACCOUNT_UPDATE_SUCCESS,\r\n    ACCOUNT_UPDATE_FAIL,\r\n    ACCOUNT_DELETE_SUCCESS,\r\n    ACCOUNT_DELETE_FAIL\r\n} from \"../../types/setting/account\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'accounts';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL ACCOUNT \r\nexport const getAccounts = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : ACCOUNT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: ACCOUNT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : ACCOUNT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE ACCOUNT \r\nexport const getAccount = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : ACCOUNT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//ACCOUNT DELETE\r\nexport const deleteAccount = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ACCOUNT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : ACCOUNT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//ACCOUNT REGISTER\r\nexport const registerAccount = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ACCOUNT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : ACCOUNT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //ACCOUNT UPDATE\r\nexport const updateAccount = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ACCOUNT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : ACCOUNT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { \r\n    CCard,  \r\n    CButton, \r\n    CButtonGroup, \r\n    CCardHeader, \r\n    CCol, \r\n    CRow, \r\n   \r\n} from '@coreui/react';\r\n\r\n\r\n\r\nconst Dashboard = (props) => {\r\n \r\nreturn (\r\n    <>\r\n    <CRow>\r\n      <CCol lg={12}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol xs={10}>\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">{props.activeschool != undefined && props.activeterm.hasOwnProperty('name') && props.activeschool.name ? props.activeschool.name: <i>Please select a school or consult the admin</i>}</h4>\r\n              <div className=\"small text-muted\"><strong>{props.activeterm != undefined &&  props.activeterm.hasOwnProperty('name') && props.activeterm.name ? props.activeterm.name : <span> Welcome<small><i> (No active term)</i></small></span> }</strong></div>\r\n              \r\n              </CCol>\r\n              <CCol className=\"d-md-block btn-group\">\r\n              <CButtonGroup className='pull-right'>\r\n              <CButton  \r\n                  color=\"primary\" \r\n                  className=\"\"\r\n                  onClick={()=>props.toggleMenu()}\r\n                  >\r\n                <i className='fa fa-search'></i>\r\n              </CButton>\r\n              </CButtonGroup>  \r\n            </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n         </CCard>\r\n      </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import { CCollapse } from '@coreui/react';\r\nimport React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { getUserDatas, getUserSchools, getUserTerms, getUserdropdowns, settSchool, settTerm} from './../../actions/user'\r\nimport StaffDashboardMenu from './StaffDashboardMenu';\r\nimport StaffDashboardSession from './StaffDashboardSession1';\r\n\r\nconst Dashboard = (props) => {\r\n  const [showmenu, setShowmenu] = useState(false)\r\n\r\nuseEffect(() => {\r\n  //load dropdowns\r\n  let did = props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0 ? props.user.activeschool.id :'null'\r\n  let params = {\r\n    data:JSON.stringify(\r\n    {\r\n        'schoolid':did\r\n    }),\r\n    cat:'dropdowns',\r\n    table:'access',\r\n    narration:'get all dropdowns'\r\n    }\r\n    props.getUserdropdowns(params)\r\n  let params1 = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':did\r\n      }),\r\n      cat:'accessterms',\r\n      table:'access',\r\n      narration:'get current term'\r\n      }\r\n      props.getUserTerms(params1)\r\n    \r\n}, [props.user.mid, props.user.activeschool])\r\n\r\nuseEffect(() => {\r\n  //load staff schools\r\n  let params = {\r\n    data:JSON.stringify(\r\n    {\r\n        'schools':props.user.myschools.join(',')\r\n    }),\r\n    cat:'schoolaccess',\r\n    table:'schools',\r\n    narration:'get all schools'\r\n    }\r\n    props.getUserSchools(params)\r\n}, [props.user.mid, props.user.myschools])\r\n\r\nuseEffect(() => {\r\n  //load staff subjects and class\r\n  let params = {\r\n    data:JSON.stringify(\r\n    {\r\n        'sessionid':props.user.activeterm.sessionid,\r\n        'termid':props.user.activeterm.termid,\r\n        'staffid':props.user.mid,\r\n    }),\r\n    cat:'dataaccess',\r\n    table:'access',\r\n    narration:'get all schools'\r\n    }\r\n    getUserDatas(params)\r\n  \r\n    \r\n}, [props.user.mid, props.user.activeterm]);\r\n\r\nlet dt = props.user.dropdowns && Array.isArray(props.user.dropdowns) ? props.user.dropdowns : [[], []];\r\nconst changeSchool = (data) =>{\r\n  \r\n      props.settSchool(data)\r\n}\r\nconst changeTerm = (data) =>{\r\n      props.settTerm(data)\r\n}\r\nconst changeMenu = () =>{\r\n      setShowmenu(prev=>!prev);\r\n}\r\n\r\nreturn (\r\n    <>\r\n    <StaffDashboardSession \r\n        activeterm={props.user.activeterm}\r\n        activeschool={props.user.activeschool}\r\n        schools={props.user.mySchoolData}\r\n        changeSchool={(data)=>changeSchool(data)}\r\n        toggleMenu={changeMenu}\r\n      />\r\n       <CCollapse\r\n      show={showmenu}\r\n      >\r\n      <StaffDashboardMenu \r\n        dropdowns={dt}\r\n        schools={props.user.mySchoolData}\r\n        changeSchool={(data)=>changeSchool(data)}\r\n        changeTerm={(data)=>changeTerm(data)}\r\n      />\r\n      \r\n      </CCollapse>\r\n      \r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  activeTerm : state.termReducer.activeTerm,\r\n  user : state.userReducer,\r\n\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getUserDatas,\r\n  getUserSchools,\r\n  getUserTerms,\r\n  getUserdropdowns,\r\n  settSchool,\r\n  settTerm\r\n\r\n})(Dashboard)","import axios from 'axios';\r\nimport {\r\n    TERM_GET_ONE,\r\n    TERM_GET_MULTIPLE,\r\n    TERM_REGISTER_SUCCESS,\r\n    TERM_REGISTER_FAIL,\r\n    TERM_ACTIVE_SUCCESS,\r\n    TERM_ACTIVE_FAIL,\r\n    TERM_LOADING,\r\n    TERM_LOADING_ERROR,\r\n    TERM_UPDATE_SUCCESS,\r\n    TERM_UPDATE_FAIL,\r\n    TERM_DELETE_SUCCESS,\r\n    TERM_DELETE_FAIL\r\n} from \"../../types/setting/term\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'terms';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL TERM \r\nexport const getTerms = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : TERM_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: TERM_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : TERM_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE TERM \r\nexport const getTerm = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : TERM_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//TERM DELETE\r\nexport const deleteTerm = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: TERM_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : TERM_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//TERM REGISTER\r\nexport const registerTerm = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: TERM_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : TERM_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n\r\n//TERM REGISTER\r\nexport const setActiveTerm = data => dispatch => {\r\n     //body\r\n     axios.post(path, data, axiosConfig1)\r\n     .then(res => {\r\n         dispatch({\r\n             type: TERM_GET_MULTIPLE,\r\n             payload: res.data.data\r\n         })\r\n     })\r\n     .catch(err => {\r\n         dispatch({\r\n             type : TERM_UPDATE_FAIL,\r\n             payload: err\r\n         })\r\n     })\r\n};\r\n //TERM UPDATE\r\nexport const updateTerm = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: TERM_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : TERM_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    CAUNIT_GET_ONE,\r\n    CAUNIT_GET_MULTIPLE,\r\n    CAUNIT_REGISTER_SUCCESS,\r\n    CAUNIT_REGISTER_FAIL,\r\n    CAUNIT_LOADING,\r\n    CAUNIT_LOADING_ERROR,\r\n    CAUNIT_UPDATE_SUCCESS,\r\n    CAUNIT_UPDATE_FAIL,\r\n    CAUNIT_DELETE_SUCCESS,\r\n    CAUNIT_DELETE_FAIL\r\n} from \"../../types/setting/caunit\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'caunits';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CAUNIT \r\nexport const getCaunits = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : CAUNIT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CAUNIT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CAUNIT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CAUNIT \r\nexport const getCaunit = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CAUNIT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CAUNIT DELETE\r\nexport const deleteCaunit = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CAUNIT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CAUNIT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CAUNIT REGISTER\r\nexport const registerCaunit = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CAUNIT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CAUNIT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CAUNIT UPDATE\r\nexport const updateCaunit = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CAUNIT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CAUNIT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    CLASSSTAFF_GET_ONE,\r\n    CLASSSTAFF_GET_MULTIPLE,\r\n    CLASSSTAFF_REGISTER_SUCCESS,\r\n    CLASSSTAFF_REGISTER_FAIL,\r\n    CLASSSTAFF_LOADING,\r\n    CLASSSTAFF_LOADING_ERROR,\r\n    CLASSSTAFF_UPDATE_SUCCESS,\r\n    CLASSSTAFF_UPDATE_FAIL,\r\n    CLASSSTAFF_DELETE_SUCCESS,\r\n    CLASSSTAFF_DELETE_FAIL\r\n} from \"../../types/setting/classstaff\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from '../common';\r\n\r\nlet TABLE_NAME = 'access';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL CLASSSTAFF \r\nexport const getClassstaffs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : CLASSSTAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CLASSSTAFF_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CLASSSTAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CLASSSTAFF \r\nexport const getClassstaff = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CLASSSTAFF_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CLASSSTAFF DELETE\r\nexport const deleteClassstaff = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASSSTAFF_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASSSTAFF_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CLASSSTAFF REGISTER\r\nexport const registerClassstaff = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASSSTAFF_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASSSTAFF_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CLASSSTAFF UPDATE\r\nexport const updateClassstaff = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASSSTAFF_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASSSTAFF_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    WEEK_GET_ONE,\r\n    WEEK_GET_MULTIPLE,\r\n    WEEK_REGISTER_SUCCESS,\r\n    WEEK_REGISTER_FAIL,\r\n    WEEK_LOADING,\r\n    WEEK_LOADING_ERROR,\r\n    WEEK_UPDATE_SUCCESS,\r\n    WEEK_UPDATE_FAIL,\r\n    WEEK_DELETE_SUCCESS,\r\n    WEEK_DELETE_FAIL\r\n} from \"../../types/setting/week\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from '../common';\r\n\r\nlet TABLE_NAME = 'weeks';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL WEEK \r\nexport const getWeeks = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : WEEK_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: WEEK_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : WEEK_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE WEEK \r\nexport const getWeek = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : WEEK_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//WEEK DELETE\r\nexport const deleteWeek = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: WEEK_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : WEEK_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//WEEK REGISTER\r\nexport const registerWeek = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: WEEK_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : WEEK_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //WEEK UPDATE\r\nexport const updateWeek = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: WEEK_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : WEEK_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    LEVEL_GET_ONE,\r\n    LEVEL_GET_MULTIPLE,\r\n    LEVEL_REGISTER_SUCCESS,\r\n    LEVEL_REGISTER_FAIL,\r\n    LEVEL_LOADING,\r\n    LEVEL_LOADING_ERROR,\r\n    LEVEL_UPDATE_SUCCESS,\r\n    LEVEL_UPDATE_FAIL,\r\n    LEVEL_DELETE_SUCCESS,\r\n    LEVEL_DELETE_FAIL\r\n} from \"../../types/setting/level\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'levels';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL LEVEL \r\nexport const getLevels = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : LEVEL_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: LEVEL_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : LEVEL_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE LEVEL \r\nexport const getLevel = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : LEVEL_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//LEVEL DELETE\r\nexport const deleteLevel = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LEVEL_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : LEVEL_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//LEVEL REGISTER\r\nexport const registerLevel = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LEVEL_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : LEVEL_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //LEVEL UPDATE\r\nexport const updateLevel = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LEVEL_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : LEVEL_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerTheme, updateTheme, deleteTheme} from './../../../actions/setting/theme';\r\nimport {getClaszs} from './../../../actions/setting/clasz';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CTextarea,\r\n  CSelect,\r\n  CInputGroupAppend,\r\n  CInputGroupPrepend,\r\n  CInputGroup,\r\n  CAlert\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { setElement } from './../../../actions/common'\r\n\r\nconst termarray =[\r\n  {id:1, name:'First'},\r\n  {id:2, name:'Second'},\r\n  {id:3, name:'Third'},\r\n  {id:4, name:'Alternative/Obsolete'}\r\n];\r\nconst Theme = (props) => {\r\n  const subjectid = props.pid\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const [id, setId] = useState(null)\r\n  const [moduleid, setModuleid ]= useState('')\r\n  const [namez, setNamez] = useState('')\r\n  const [topic, setTopic] = useState('')\r\n  const [claszid, setClaszid] = useState()\r\n  const [termid, setTermid] = useState()\r\n  const [termname, setTermname] = useState('')\r\n  const [objective, setObjective] = useState([])\r\n  const [content, setContent] = useState([])\r\n  const [material, setMaterial] = useState([])\r\n  const [contentind, setContentind] = useState('')\r\n  const [objectiveind, setObjectiveind] = useState('')\r\n  const [materialind, setMaterialind] = useState('')\r\n\r\n  //GET THEMES PER SCHOOL\r\n  useEffect(() => {\r\n    \r\n    let params1 = {\r\n      data:JSON.stringify(\r\n      {\r\n          'typeid': props.school.typeid\r\n      }),\r\n      cat:'select',\r\n      table:'claszs',\r\n      narration:'get claszs'\r\n    }\r\n    props.getClaszs(params1);\r\n    \r\n  }, [subjectid, props.school.typeid])\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data !== undefined && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setModuleid(dt.moduleid);\r\n      setNamez(dt.name);\r\n      setTopic(dt.topic);\r\n      setClaszid(dt.claszid);\r\n      setTermid(dt.termid);\r\n      setObjective(dt.objective);\r\n      setMaterial(dt.material);\r\n      setContent(dt.content);\r\n      setElement('nf-claszid', dt.claszid )\r\n      let termnamex = '';\r\n      let termnames = termarray.filter(rw=>rw.id === dt.termid);\r\n       termnamex = Array.isArray(termnames) && termnames.length > 0 ? termnames[0].name : '';\r\n       setTermname(termnamex);\r\n    }else{\r\n      setId(null);\r\n      setModuleid(null);\r\n      setNamez('');\r\n      setClaszid('');\r\n      setObjective('');\r\n      setMaterial('');\r\n      setContent('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n \r\n \r\n \r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0)\r\n    {\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('topic', topic);\r\n      fd.append('claszid', claszid);\r\n      fd.append('termid', termid);\r\n      fd.append('moduleid', moduleid);\r\n      fd.append('objective', objective);\r\n      fd.append('material', material);\r\n      fd.append('content', content);\r\n      fd.append('staffid', props.user.user.id);\r\n      fd.append('checker', 'A'+moduleid+'_B'+subjectid+'_C'+claszid);\r\n      fd.append('checker1', 'A'+moduleid+'_B'+subjectid);\r\n      fd.append('table', 'themes');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateTheme(fd)\r\n        \r\n      }else if(subjectid && parseInt(subjectid) > 0)\r\n      {\r\n        //INSERT\r\n        fd.append('subjectid', subjectid);\r\n        fd.append('cat', 'insert');\r\n        props.registerTheme(fd)\r\n      }\r\n     // props.onReset()\r\n    }\r\n  }\r\n  const loadContent = (num, inde, dt) =>{\r\n    let con = [...content];\r\n     if(contentind.length > 0)\r\n     {\r\n      if(num === 0)\r\n      {\r\n        let d =  con.push(contentind);\r\n        setContent(con)\r\n        setContentind('');\r\n      }\r\n      if(num === 1)\r\n      {\r\n        \r\n        let cons = [...content];\r\n        let c = cons[inde];\r\n        setContentind(c);\r\n      }\r\n      if(num === 2)\r\n      {\r\n        let cons = [...content];\r\n        let c = cons.filter(rw=>rw !== dt);\r\n        setContent(c)\r\n        setContentind('');\r\n      }\r\n    }\r\n      \r\n  }\r\n  const loadObjective = (num, inde, dt) =>{\r\n    let con = [...objective];\r\n    if(objectiveind.length > 0)\r\n     {\r\n      if(num === 0)\r\n      {\r\n        let d =  con.push(objectiveind);\r\n        setObjective(con)\r\n        setObjectiveind('');\r\n      }\r\n      if(num === 1)\r\n      {\r\n        \r\n        let cons = [...objective];\r\n        let c = cons[inde];\r\n        setObjectiveind(c);\r\n      }\r\n      if(num === 2)\r\n      {\r\n        let cons = [...objective];\r\n        let c = cons.filter(rw=>rw !== dt);\r\n        setObjective(c)\r\n        setObjectiveind('');\r\n      }   \r\n    }\r\n  }\r\n\r\n  const loadMaterial = (num, inde, dt) =>{\r\n    let con = [...material];\r\n    if(materialind.length > 0)\r\n     {\r\n      if(num === 0)\r\n      {\r\n       if(materialind.length > 0){\r\n         con.push(materialind);\r\n         setMaterial(con)\r\n         setMaterialind('');\r\n       }\r\n      }\r\n      if(num === 1)\r\n      {\r\n        \r\n        let cons = [...material];\r\n        let c = cons[inde];\r\n        setMaterialind(c);\r\n      }\r\n      if(num === 2)\r\n      {\r\n        let cons = [...material];\r\n        let c = cons.filter(rw=>rw !== dt);\r\n        setMaterial(c)\r\n        setMaterialind('');\r\n      } \r\n    }  \r\n  }\r\n  \r\n  \r\n  let claszarray = props.claszs && Array.isArray(props.claszs) ? props.claszs : [];\r\n  let clarray = claszarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.name}</option>\r\n  })\r\n  let termz= termarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.id}>{rw.name}</option>\r\n})\r\n \r\n   return (\r\n    <CCol xl={12}  style={{width:'500px'}} id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <br/><small> Scheme of Work</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CAlert \r\n            color='danger'\r\n            value={Number(400) * 10}\r\n            size=\"sm\"\r\n            className=\"mb-3\"\r\n            >\r\n            <h4 className=\"alert-heading\">Warning</h4>\r\n              <p>If you duplicate the MODULEID for a particular subject your entry would not be saved. Do ensure that your MODULE ID is serial</p></CAlert>\r\n          <CFormGroup>\r\n              <CLabel htmlFor=\"nf-module\">ModuleID</CLabel>\r\n              <CInput \r\n                  type=\"number\" \r\n                  id=\"nf-module\" \r\n                  module=\"modulez\"\r\n                  value={moduleid}\r\n                  onChange={(e)=>setModuleid(e.target.value)}\r\n                  placeholder=\"00\" \r\n                />\r\n              <CFormText className=\"help-block text-danger\">This number has to be unique and serial if you duplicate this number for a particular subject it will not save</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Theme</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Matter\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter theme name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-claszid\">Class </CLabel>\r\n              <CSelect\r\n                  type=\"text\" \r\n                  id=\"nf-claszid\" \r\n                  name=\"claszid\"\r\n                  defaultValue={claszid}\r\n                  onChange={(e)=>setClaszid(e.target.value)}\r\n                  placeholder=\"\" \r\n                >\r\n                  {id && parseInt(id) > 0 ? <option value={claszid}>{props.data !== null && props.data !== undefined? props.data.claszname : ''}</option>:<option></option>}\r\n                  {clarray}\r\n              </CSelect>\r\n              <CFormText className=\"help-block\">Select the class</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-termid\">Term</CLabel>\r\n              <CSelect\r\n                  type=\"text\" \r\n                  id=\"nf-termid\" \r\n                  name=\"termid\"\r\n                  defaultValue={termid}\r\n                  onChange={(e)=>setTermid(e.target.value)}\r\n                  placeholder=\"\" \r\n                >\r\n                  {id && parseInt(id) > 0 ? <option value={termid}>{termname}</option>:<option></option>}\r\n                  \r\n                  {termz}\r\n              </CSelect>\r\n              <CFormText className=\"help-block\">Select the term</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-content\">Lesson Content</CLabel>\r\n              <CKEditor\r\n                data ={content}\r\n                type='classic'\r\n                config={{\r\n                    toolbar:[[\r\n                        'Cut', 'Copy', 'Paste', \r\n                        'PasteText', 'PasteFromWord', \r\n                        'Undo', 'Redo', 'NumberedList', 'BulletedList',\r\n                        'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', 'CopyFormatting', 'RemoveFormat' \r\n                    ]]\r\n                }}\r\n                onChange={e=>setContent(e.editor.getData())}\r\n                />\r\n             \r\n              \r\n              <CFormText className=\"help-block\">Add or remove subtopics outline in order of presentation</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-objective\">Lesson Objectives</CLabel><CKEditor\r\n                data ={objective}\r\n                type='classic'\r\n                config={{\r\n                    toolbar:[[\r\n                        'Cut', 'Copy', 'Paste', \r\n                        'PasteText', 'PasteFromWord', \r\n                        'Undo', 'Redo', 'NumberedList', 'BulletedList',\r\n                        'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', 'CopyFormatting', 'RemoveFormat' \r\n                    ]]\r\n                }}\r\n                onChange={e=>setObjective(e.editor.getData())}\r\n                />\r\n              <CFormText className=\"help-block\">Add or remove lesson objectives</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-material\">Lesson Materials</CLabel><CKEditor\r\n                data ={material}\r\n                type='classic'\r\n                config={{\r\n                    toolbar:[[\r\n                        'Cut', 'Copy', 'Paste', \r\n                        'PasteText', 'PasteFromWord', \r\n                        'Undo', 'Redo', 'NumberedList', 'BulletedList',\r\n                        'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', 'CopyFormatting', 'RemoveFormat' \r\n                    ]]\r\n                }}\r\n                onChange={e=>setMaterial(e.editor.getData())}\r\n                />\r\n              <CFormText className=\"help-block\">Add or remove Instruction Materials</CFormText>\r\n            </CFormGroup>\r\n         \r\n          </CForm>\r\n        </CCardBody>\r\n        \r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n \r\n     )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  themes : state.themeReducer,\r\n  user:state.userReducer,\r\n  claszs : state.claszReducer.claszs\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerTheme,\r\n  updateTheme,\r\n  deleteTheme,\r\n  getClaszs\r\n})(Theme)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getThemes, getTheme, registerTheme, updateTheme, deleteTheme} from './../../../actions/setting/theme';\r\nimport { useHistory} from 'react-router-dom'\r\nimport { \r\n  CRow ,\r\n  CCol,\r\n  CBadge\r\n} from '@coreui/react';\r\n\r\n\r\nconst termarray ={\r\n  1:'First term',\r\n  2:'Second term',\r\n  3:'Third term',\r\n  4:'Alternative/Obsolete'\r\n}\r\nconst Theme = (props) => {\r\n  const history = useHistory()\r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n      <td>\r\n        <strong>MODULE {row.moduleid}</strong>{\" : \"}<span style={{textTransform:'uppercase'}}> {row.name}</span><br/>\r\n  <strong>CLASS</strong>{\" : \"}<span style={{textTransform:'uppercase'}}> {row.claszname}{termarray[row.termid]}</span>\r\n        <CRow>\r\n          <CCol xs={12} sm={4}>\r\n              <strong >The lesson would be presented as follows</strong>\r\n              <div style={{whiteSpace:'pre-wraps'}}  dangerouslySetInnerHTML={{__html: row.content}} />\r\n          </CCol>\r\n          <CCol xs={12} sm={4}>\r\n          <strong >At the end of the lesson students should be able to</strong>\r\n          <div style={{whiteSpace:'pre-wraps'}}>\r\n            <div style={{whiteSpace:'pre-wraps'}}  dangerouslySetInnerHTML={{__html: row.objective}} />\r\n            </div>\r\n          </CCol>\r\n          <CCol xs={12}sm={4}>\r\n          <strong >Instructional Material</strong>\r\n          <div  dangerouslySetInnerHTML={{__html: row.material.replace(/(\\r\\n|\\n|\\r)/gm, \"<br/>\") }} />\r\n          </CCol>\r\n           </CRow>\r\n           <CRow className='d-print-none'>\r\n             <CCol>\r\n             <CBadge className=\"mr-1\" color=\"primary\">Primary</CBadge>\r\n             <button className='btn btn-sm btn-link'><i className='fa fa-bank text-success'></i> Question Bank</button>\r\n             <button onClick={()=>props.onEdit(row)} className='btn btn-sm btn-link'><i className='fa fa-edit'></i> Edit</button>\r\n             <button onClick={()=>props.onActivate(row.id, row.is_active)} className='btn btn-sm btn-link text-mute'><i className={parseInt(row.is_active) === 0 ? 'fa fa-unlock text-success':'fa fa-lock text-danger'}></i> {parseInt(row.is_active) === 0 ?'Lock':'Unlock'}</button>\r\n             <button onClick={()=>props.onDelete(row)}className='btn btn-sm btn-link'><i className='fa fa-trash text-danger'></i> Delete</button>\r\n             </CCol>\r\n           </CRow>\r\n      </td>\r\n     \r\n    </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th><i className='fa fa-list'></i> Scheme Of Work</th>\r\n                       </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  themes : state.themeReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getThemes,\r\n  getTheme,\r\n  registerTheme,\r\n  updateTheme,\r\n  deleteTheme\r\n})(Theme)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getThemes, getTheme, deleteTheme} from './../../../actions/setting/theme';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport ThemeForm from'./../Form/Theme'\r\nimport ThemeTable from'./../Table/Theme'\r\nimport Header from './Header';\r\n\r\nconst Theme = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'subjectid':props.pid\r\n        }),\r\n        cat:'selected',\r\n        table:'themes',\r\n        narration:'get themes'\r\n  \r\n    }\r\n    props.getThemes(params)\r\n    \r\n  }, [props.pid])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});  \r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  //GET SUBJECT NAME\r\n  let ses = props.subjects.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n  let data = props.themes.themes && Array.isArray(props.themes.themes) ? props.themes.themes.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              pid={props.pid}\r\n              icon={props.para.icon}\r\n              title={sess} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <ThemeTable  \r\n                pid={props.pid}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <ThemeForm \r\n                pid={props.pid}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  themes : state.themeReducer,\r\n  subjects : state.subjectReducer.subjects,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getThemes,\r\n  deleteTheme\r\n})(Theme)\r\n"],"sourceRoot":""}