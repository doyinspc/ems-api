{"version":3,"sources":["views/student/StudentAdds.js","views/student/StudentClassProfile.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/student/student.js","actions/setting/school.js","actions/setting/session.js","actions/student/studentclass.js","views/student/StudentBio.js"],"names":["connect","state","studentclasss","studentclassReducer","sessions","sessionReducer","schools","schoolReducer","dropdowns","userReducer","getStudentclasss","getStudentclass","registerStudentclass","updateStudentclass","deleteStudentclass","getSchools","getSessions","props","useHistory","useState","active","setActive","id","setId","cid","setCid","sessionid","setSessionid","admission","setAdmission","admit","setAdmit","doa","setDoa","setSchoolid","surname","setSurname","firstname","setFirstname","middlename","setMiddlename","house","setHouse","place","setPlace","gender","setGender","dob","setDob","religion","setReligion","nationality","setNationality","soo","setSoo","lga","setLga","photo","setPhoto","photo1","setPhoto1","photo2","setPhoto2","photo3","setPhoto3","g1_name","setG1_name","g1_rel","setG1_rel","g1_phone1","setG1_phone1","g1_phone2","setG1_phone2","g1_email","setG1_email","g1_place","setG1_place","g1_address","setG1_address","g2_name","setG2_name","g2_rel","setG2_rel","g2_phone1","setG2_phone1","g2_phone2","setG2_phone2","g2_email","setG2_email","g2_place","setG2_place","g2_address","setG2_address","reason","setReason","dol","setDol","setIs_active","setIs_delete","useEffect","data","editid","hasOwnProperty","parseInt","admission_no","schoolid","is_active","is_delete","setElement","handlePictureActivate","num","fd","FormData","append","starray","Array","isArray","filter","rw","map","ind","key","value","name","states","lgar","lgarray","length","lgas","rw1","relarray","Object","keys","allrelations","placearray","allplaces","housearray","allhousess","xs","md","className","activeTab","onActiveTabChange","idx","variant","sm","htmlFor","defaultValue","aria-required","placeholder","onChange","e","target","required","type","size","color","onClick","arr","push","err","pr","ir","callError","JSON","stringify","custom","src","process","width","height","alt","onError","onerror","accept","files","style","user","isAdmin","activeschool","student","studentReducer","studentclass","studentid","useParams","session","showed","setShowed","edited","setEdited","setEditedx","abbrv","fullname","lg","username","personal","StudentBio","_slicedToArray","i","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","unsupportedIterableToArray","TypeError","path","API_PATH_SETTING","getStudents","params","dispatch","getState","token","MAIN_TOKEN","table","STUDENT_LOADING","axios","get","axiosConfig","then","res","STUDENT_GET_MULTIPLE","payload","catch","STUDENT_LOADING_ERROR","searchStudent","STUDENT_GET_SEARCH","getStudent","STUDENT_GET_ONE","deleteStudent","POST","STUDENT_DELETE_SUCCESS","STUDENT_DELETE_FAIL","registerStudent","post","axiosConfig1","STUDENT_REGISTER_SUCCESS","STUDENT_REGISTER_FAIL","updateStudent","STUDENT_UPDATE_SUCCESS","STUDENT_UPDATE_FAIL","TABLE_NAME","SCHOOL_LOADING","SCHOOL_GET_MULTIPLE","SCHOOL_LOADING_ERROR","getSchool","SCHOOL_GET_ONE","deleteSchool","SCHOOL_DELETE_SUCCESS","SCHOOL_DELETE_FAIL","registerSchool","SCHOOL_REGISTER_SUCCESS","SCHOOL_REGISTER_FAIL","updateSchool","SCHOOL_UPDATE_SUCCESS","SCHOOL_UPDATE_FAIL","SESSION_LOADING","SESSION_GET_MULTIPLE","SESSION_LOADING_ERROR","getSession","SESSION_GET_ONE","deleteSession","SESSION_DELETE_SUCCESS","SESSION_DELETE_FAIL","registerSession","SESSION_REGISTER_SUCCESS","SESSION_REGISTER_FAIL","updateSession","SESSION_UPDATE_SUCCESS","SESSION_UPDATE_FAIL","STUDENTCLASS_LOADING","STUDENTCLASS_GET_MULTIPLE","STUDENTCLASS_LOADING_ERROR","getStudentclassSummary","STUDENTCLASS_GET_SUMMARY","STUDENTCLASS_GET_ONE","STUDENTCLASS_DELETE_SUCCESS","STUDENTCLASS_DELETE_FAIL","STUDENTCLASS_REGISTER_SUCCESS","STUDENTCLASS_REGISTER_FAIL","console","log","STUDENTCLASS_UPDATE_SUCCESS","STUDENTCLASS_UPDATE_FAIL","User","match","title","employment_no","schoolname","textTransform","moment","format","backgroundColor"],"mappings":"oOAokCiBA,eANO,SAACC,GAAD,MAAW,CAC/BC,cAAgBD,EAAME,oBACtBC,SAAWH,EAAMI,eAAeD,SAChCE,QAAUL,EAAMM,cAAcD,QAC9BE,UAAUP,EAAMQ,YAAYD,aAEU,CACtCE,qBACAC,oBACAC,yBACAC,uBACAC,uBACAC,eACAC,iBAPahB,EAliCK,SAACiB,GACHC,cAAhB,IAD6B,EAGDC,mBAAS,GAHR,mBAGtBC,EAHsB,KAGdC,EAHc,OAITF,mBAAS,MAJA,mBAItBG,EAJsB,KAIlBC,EAJkB,OAKPJ,mBAAS,MALF,mBAKtBK,EALsB,KAKjBC,EALiB,OAMKN,mBAAS,MANd,mBAMtBO,EANsB,KAMXC,EANW,OAOKR,mBAAS,IAPd,mBAOtBS,EAPsB,KAOXC,EAPW,OAQHV,mBAAS,IARN,mBAQtBW,EARsB,KAQfC,EARe,OASPZ,mBAAS,IATF,mBAStBa,EATsB,KASjBC,EATiB,OAUGd,mBAAS,IAVZ,mBAUZe,GAVY,aAWCf,mBAAS,IAXV,mBAWtBgB,EAXsB,KAWbC,EAXa,OAYKjB,mBAAS,IAZd,mBAYtBkB,EAZsB,KAYXC,EAZW,OAaOnB,mBAAS,IAbhB,mBAatBoB,EAbsB,KAaVC,EAbU,OAcHrB,mBAAS,IAdN,mBActBsB,EAdsB,KAcfC,GAde,QAeHvB,mBAAS,IAfN,qBAetBwB,GAfsB,MAefC,GAfe,SAiBDzB,mBAAS,IAjBR,qBAiBtB0B,GAjBsB,MAiBdC,GAjBc,SAkBP3B,mBAAS,IAlBF,qBAkBtB4B,GAlBsB,MAkBjBC,GAlBiB,SAmBG7B,mBAAS,IAnBZ,qBAmBtB8B,GAnBsB,MAmBZC,GAnBY,SAoBS/B,mBAAS,IApBlB,qBAoBtBgC,GApBsB,MAoBTC,GApBS,SAqBPjC,mBAAS,IArBF,qBAqBtBkC,GArBsB,MAqBjBC,GArBiB,SAsBPnC,mBAAS,IAtBF,qBAsBtBoC,GAtBsB,MAsBjBC,GAtBiB,SAwBHrC,mBAAS,IAxBN,qBAwBtBsC,GAxBsB,MAwBfC,GAxBe,SAyBDvC,mBAAS,IAzBR,qBAyBtBwC,GAzBsB,MAyBdC,GAzBc,SA0BDzC,mBAAS,IA1BR,qBA0BtB0C,GA1BsB,MA0BdC,GA1Bc,SA2BD3C,mBAAS,IA3BR,qBA2BtB4C,GA3BsB,MA2BdC,GA3Bc,SA6BC7C,mBAAS,IA7BV,qBA6BtB8C,GA7BsB,MA6BbC,GA7Ba,SA8BD/C,mBAAS,IA9BR,qBA8BtBgD,GA9BsB,MA8BdC,GA9Bc,SA+BKjD,mBAAS,IA/Bd,qBA+BtBkD,GA/BsB,MA+BXC,GA/BW,SAgCKnD,mBAAS,IAhCd,qBAgCtBoD,GAhCsB,MAgCXC,GAhCW,SAiCGrD,mBAAS,IAjCZ,qBAiCtBsD,GAjCsB,MAiCZC,GAjCY,SAkCGvD,mBAAS,IAlCZ,qBAkCtBwD,GAlCsB,MAkCZC,GAlCY,SAmCOzD,mBAAS,IAnChB,qBAmCtB0D,GAnCsB,MAmCVC,GAnCU,SAsCC3D,mBAAS,IAtCV,qBAsCtB4D,GAtCsB,MAsCbC,GAtCa,SAuCD7D,mBAAS,IAvCR,qBAuCtB8D,GAvCsB,MAuCdC,GAvCc,SAwCK/D,mBAAS,IAxCd,qBAwCtBgE,GAxCsB,MAwCXC,GAxCW,SAyCKjE,mBAAS,IAzCd,qBAyCtBkE,GAzCsB,MAyCXC,GAzCW,SA0CGnE,mBAAS,IA1CZ,qBA0CtBoE,GA1CsB,MA0CZC,GA1CY,SA2CGrE,mBAAS,IA3CZ,qBA2CtBsE,GA3CsB,MA2CZC,GA3CY,SA4COvE,mBAAS,IA5ChB,qBA4CtBwE,GA5CsB,MA4CVC,GA5CU,SA+CDzE,mBAAS,IA/CR,qBA+CtB0E,GA/CsB,MA+CdC,GA/Cc,SAgDP3E,mBAAS,IAhDF,qBAgDtB4E,GAhDsB,MAgDjBC,GAhDiB,SAiDK7E,mBAAS,GAjDd,qBAiDX8E,IAjDW,gBAkDK9E,mBAAS,GAlDd,qBAkDX+E,IAlDW,aAqD7BC,qBAAU,WACN,IAAIC,EAAOnF,EAAMmF,KACLnF,EAAMoF,OAEfpF,EAAMmF,MAAQnF,EAAMmF,KAAKE,eAAe,OAASrF,EAAMS,WAAa6E,SAAStF,EAAMS,WAAa,IAEjGH,EAAM6E,EAAK9E,IACXG,EAAO2E,EAAK5E,KACZG,EAAaV,EAAMS,WACnBU,EAAWgE,EAAKjE,SAChBG,EAAa8D,EAAK/D,WAClBG,EAAc4D,EAAK7D,YACnBS,GAAOoD,EAAKrD,KACZW,GAAS0C,EAAK3C,OACdG,GAAUwC,EAAKzC,QACfG,GAAUsC,EAAKvC,QACfG,GAAUoC,EAAKrC,QACfjB,GAAUsD,EAAKvD,QACfK,GAAYkD,EAAKnD,UACjBG,GAAegD,EAAKjD,aACpBG,GAAO8C,EAAK/C,KACZG,GAAO4C,EAAK7C,KACZb,GAAS0D,EAAK3D,OACdG,GAASwD,EAAKzD,OACdZ,EAASqE,EAAKtE,OACdD,EAAauE,EAAKI,cAClBtE,EAAYkE,EAAKK,UACjBxE,EAAOmE,EAAKpE,KACZkC,GAAWkC,EAAKnC,SAChBa,GAAcsB,EAAKvB,YACnBT,GAAUgC,EAAKjC,QACfG,GAAa8B,EAAK/B,WAClBG,GAAa4B,EAAK7B,WAClBG,GAAY0B,EAAK3B,UACjBO,GAAWoB,EAAKrB,SAChBa,GAAcQ,EAAKT,YACnBT,GAAUkB,EAAKnB,QACfG,GAAagB,EAAKjB,WAClBG,GAAac,EAAKf,WAClBG,GAAYY,EAAKb,UAEjBO,GAAUM,EAAKP,QACfG,GAAOI,EAAKL,KACZE,GAAaG,EAAKM,WAClBR,GAAaE,EAAKO,WAElBC,YAAW,MAAOR,EAAK/C,KACvBuD,YAAW,WAAYR,EAAKnD,UAC5B2D,YAAW,SAAUR,EAAKvD,QAC1B+D,YAAW,QAASR,EAAK3D,OACzBmE,YAAW,QAASR,EAAKzD,OACzBiE,YAAW,SAAUR,EAAKjC,QAC1ByC,YAAW,SAAUR,EAAKnB,QAC1B2B,YAAW,WAAYR,EAAKzB,UAC5BiC,YAAW,WAAYR,EAAKX,aAG7B,CAACxE,EAAMmF,KAAMnF,EAAMoF,OAAQpF,EAAMS,YAEtC,IAAMmF,GAAwB,SAAAC,GAC1B,IAAIC,EAAK,IAAIC,SACbD,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,QAASH,GACnBC,EAAGE,OAAO,MAAOzF,GACjBuF,EAAGE,OAAO,YAAavF,GACvBqF,EAAGE,OAAO,MAAO,iBACjBF,EAAGE,OAAO,QAAS,iBACnBhG,EAAMJ,mBAAmBkG,IA2N7BG,KAXcjG,EAAMX,SAAW6G,MAAMC,QAAQnG,EAAMX,SAAWW,EAAMX,QAAU,IACxD+G,QAAO,SAAAC,GAAE,OAAS,OAAPA,KAAaC,KAAI,SAACD,EAAIE,GACvD,OAAO,4BAAQC,IAAKD,EAAKE,MAAOJ,EAAGhG,IAAKgG,EAAGK,UAG3B1G,EAAMb,UAAY+G,MAAMC,QAAQnG,EAAMb,UAAYa,EAAMb,SAAW,IAC3DiH,QAAO,SAAAC,GAAE,OAAS,OAAPA,KAAaC,KAAI,SAACD,EAAIE,GACzD,OAAO,4BAAQC,IAAKD,EAAKE,MAAOJ,EAAGhG,IAAKgG,EAAGK,SAIjCC,IAAOP,QAAO,SAAAC,GAAE,OAAS,OAAPA,KAAaC,KAAI,SAACD,EAAIE,GAClD,OAAO,4BAAQC,IAAKD,EAAKE,MAAOJ,EAAGrH,OAAQqH,EAAGrH,WAG9C4H,GAAOD,IAAOP,QAAO,SAAAC,GAAE,OAAS,OAAPA,GAAeA,EAAGrH,QAAUoD,MACrDyE,GAAUD,GAAKE,OAAS,EAAIF,GAAK,GAAGG,KAAKT,KAAI,SAACU,EAAKT,GACnD,OAAO,4BAAQC,IAAKD,EAAKE,MAAOO,GAAMA,MACtC,GAGAC,GAAWC,OAAOC,KAAKC,KAAcd,KAAI,SAACU,EAAKT,GAC/C,OAAO,4BAAQC,IAAKD,EAAKE,MAAOO,GAAMA,MAGtCK,GAAaH,OAAOC,KAAKG,KAAWhB,KAAI,SAACU,EAAKT,GAC9C,OAAO,4BAAQC,IAAKD,EAAKE,MAAOO,GAAMA,MAGtCO,GAAaL,OAAOC,KAAKK,KAAYlB,KAAI,SAACU,EAAKT,GAC/C,OAAO,4BAAQC,IAAKD,EAAKE,MAAOO,GAAMA,MAGxC,OACE,oCACA,kBAAC,KAAD,KACA,kBAAC,IAAD,CAAMS,GAAG,KAAKC,GAAG,KAAKC,UAAU,QAC5B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACEtH,GAAMiF,SAASjF,GAAO,EAAI,4CAAca,EAAd,YAAyBE,EAAzB,YAAsCE,EAAtC,UAA8D,IAExF,kBAAC,IAAD,KACA,kBAAC,KAAD,CAAOsG,UAAWzH,EAAQ0H,kBAAmB,SAAAC,GAAG,OAAI1H,EAAU0H,KAC5D,kBAAC,KAAD,CAAMC,QAAQ,QACd,kBAAC,KAAD,KACI,kBAAC,KAAD,KACE,uBAAGJ,UAAU,eACA,IAAXxH,GAAgB,eAGtB,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,uBAAGwH,UAAU,eACA,IAAXxH,GAAgB,gBAGtB,kBAAC,KAAD,KACE,kBAAC,KAAD,KACA,uBAAGwH,UAAU,gBACE,IAAXxH,GAAgB,yBAGtB,kBAAC,KAAD,KACE,kBAAC,KAAD,KACA,uBAAGwH,UAAU,gBACE,IAAXxH,GAAgB,aAGtB,kBAAC,KAAD,KACE,kBAAC,KAAD,KACA,uBAAGwH,UAAU,gBACE,IAAXxH,GAAgB,WAIlC,kBAAC,KAAD,KACA,kBAAC,KAAD,KACA,kBAAC,KAAD,KACA,kBAAC,IAAD,CAAMsH,GAAG,KAAKO,GAAG,MACD,kBAAC,IAAD,KACI,kBAAC,IAAD,KACA,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMP,GAAG,KAAKO,GAAG,KACjB,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQC,QAAQ,WAAhB,UAAiC,uBAAGN,UAAU,eAAb,MACjC,kBAAC,IAAD,CACItH,GAAG,UACH6H,aAAchH,EACdiH,iBAAA,EACAC,YAAY,gBACZC,SAAU,SAACC,GAAD,OAAKnH,EAAWmH,EAAEC,OAAO9B,QACnC+B,UAAQ,MAIhB,kBAAC,IAAD,CAAMf,GAAG,KAAKO,GAAG,KACjB,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQC,QAAQ,aAAhB,YAAqC,uBAAGN,UAAU,eAAb,MACrC,kBAAC,IAAD,CACItH,GAAG,YACH6H,aAAc9G,EACd+G,iBAAA,EACAC,YAAY,kBACZC,SAAU,SAACC,GAAD,OAAKjH,EAAaiH,EAAEC,OAAO9B,QACrC+B,UAAQ,MAIhB,kBAAC,IAAD,CAAMf,GAAG,KAAKO,GAAG,KACjB,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQC,QAAQ,cAAhB,cACA,kBAAC,IAAD,CACI5H,GAAG,aACH6H,aAAc5G,EACdmH,KAAK,OACLN,iBAAA,EACAC,YAAY,mBACZC,SAAU,SAACC,GAAD,OAAK/G,EAAc+G,EAAEC,OAAO9B,QACtC+B,UAAQ,OAKpB,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMf,GAAG,KAAKO,GAAG,KACjB,kBAAC,IAAD,KACA,kBAAC,KAAD,CAAQC,QAAQ,SAAhB,SACI,kBAAC,KAAD,CACI5H,GAAG,QACH6H,aAAc1G,EACd2G,iBAAA,EACAC,YAAY,cACZC,SAAU,SAACC,GAAD,OAAK7G,GAAS6G,EAAEC,OAAO9B,QACjC+B,UAAQ,GAER,iCACDjB,MAIP,kBAAC,IAAD,CAAME,GAAG,KAAKO,GAAG,KACjB,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQC,QAAQ,SAAhB,uCACA,kBAAC,KAAD,CACI5H,GAAG,QACH6H,aAAcxG,GACdyG,iBAAA,EACAC,YAAY,cACZC,SAAU,SAACC,GAAD,OAAK3G,GAAS2G,EAAEC,OAAO9B,QACjC+B,UAAQ,GAER,iCACDnB,MAIP,kBAAC,IAAD,CAAMI,GAAG,KAAKO,GAAG,QAKrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASS,KAAK,SAASC,KAAK,KAAKC,MAAM,UAAUC,QA5NjD,WACpB,IAAIC,EAAM,GAGV,GAFG3H,GAAuB,QAAZA,GAAqBA,EAAQ4F,OAAS,GAAU+B,EAAIC,KAAK,0BACtD,QAAd1H,GAAuBA,EAAU0F,OAAS,GAAU+B,EAAIC,KAAK,4BAC9C,IAAfD,EAAI/B,OA8BP,CACI,IAAIiC,EAAMF,EAAIvC,KAAI,SAAC0C,EAAIC,GACnB,OAAOD,KAEX,OAAOE,YAAUC,KAAKC,UAAUL,IAhChC,IAAIjD,EAAK,IAAIC,SACbD,EAAGE,OAAO,UAAW9E,GACrB4E,EAAGE,OAAO,YAAa5E,GACvB0E,EAAGE,OAAO,aAAc1E,GAIxBwE,EAAGE,OAAO,QAAStE,IACnBoE,EAAGE,OAAO,QAASxE,GACnBsE,EAAGE,OAAO,MAAOjF,GACjB+E,EAAGE,OAAO,QAASnF,GACnBiF,EAAGE,OAAO,MAAOzF,GACjBuF,EAAGE,OAAO,YAAavF,GAEpBJ,GAAMiF,SAASjF,GAAM,IAEpByF,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,MAAO,iBACjBF,EAAGE,OAAO,QAAS,iBACnBhG,EAAMJ,mBAAmBkG,MAmM8D,kBAAC,IAAD,CAAOY,KAAK,iBAAvF,gBAMxB,kBAAC,KAAD,KACA,kBAAC,KAAD,KACC,kBAAC,IAAD,CAAMe,GAAG,KAAKO,GAAG,MACF,kBAAC,IAAD,KACI,kBAAC,IAAD,KACA,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMP,GAAG,KAAKO,GAAG,KACjB,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQC,QAAQ,OAAhB,gBAAmC,uBAAGN,UAAU,eAAb,MACnC,kBAAC,IAAD,CACItH,GAAG,MACH6H,aAAcpG,GACd2G,KAAK,OACLN,iBAAA,EACAC,YAAY,YACZC,SAAU,SAACC,GAAD,OAAKvG,GAAOuG,EAAEC,OAAO9B,QAC/B+B,UAAQ,MAIhB,kBAAC,IAAD,CAAMf,GAAG,KAAKO,GAAG,KACjB,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQC,QAAQ,UAAhB,SAA+B,uBAAGN,UAAU,eAAb,MAC/B,kBAAC,KAAD,CACI0B,QAAM,EACNhJ,GAAG,SACH6H,aAActG,GACduG,iBAAA,EACAC,YAAY,gBACZC,SAAU,SAACC,GAAD,OAAKzG,GAAUyG,EAAEC,OAAO9B,QAClC+B,UAAQ,GAER,4BAAQ/B,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,aAIR,kBAAC,IAAD,CAAMgB,GAAG,KAAKO,GAAG,KACjB,kBAAC,IAAD,KACA,kBAAC,KAAD,CAAQC,QAAQ,YAAhB,WAAmC,uBAAGN,UAAU,eAAb,MAC/B,kBAAC,KAAD,CACI0B,QAAM,EACNhJ,GAAG,WACH6H,aAAclG,GACdmG,iBAAA,EACAC,YAAY,kBACZC,SAAU,SAACC,GAAD,OAAKrG,GAAYqG,EAAEC,OAAO9B,QACpC+B,UAAQ,GAER,4BAAQ/B,MAAM,gBAAd,gBACA,4BAAQA,MAAM,SAAd,aAMZ,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMgB,GAAG,KAAKO,GAAG,KACjB,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQC,QAAQ,OAAhB,cAAiC,uBAAGN,UAAU,eAAb,MACjC,kBAAC,KAAD,CACI0B,QAAM,EACNhJ,GAAG,cACH6H,aAAchG,GACdiG,iBAAA,EACAC,YAAY,qBACZC,SAAU,SAACC,GAAD,OAAKnG,GAAemG,EAAEC,OAAO9B,QACvC+B,UAAQ,GAER,4BAAQ/B,MAAM,QAAd,YACA,4BAAQA,MAAM,UAAd,mBAIR,kBAAC,IAAD,CAAMgB,GAAG,KAAKO,GAAG,KACjB,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQC,QAAQ,OAAhB,kBAAqC,uBAAGN,UAAU,eAAb,MACrC,kBAAC,KAAD,CACI0B,QAAM,EACNhJ,GAAG,MACHgI,SArQlB,SAACC,GACfjG,GAAOiG,EAAEC,OAAO9B,SAsQiBR,MAIT,kBAAC,IAAD,CAAMwB,GAAG,KAAKO,GAAG,KACjB,kBAAC,IAAD,KACA,kBAAC,KAAD,CAAQC,QAAQ,OAAhB,MAAyB,uBAAGN,UAAU,eAAb,MACrB,kBAAC,KAAD,CACI0B,QAAM,EACNhJ,GAAG,MACH6H,aAAc5F,GACd6F,iBAAA,EACAC,YAAY,aACZC,SAAU,SAACC,GAAD,OAAK/F,GAAO+F,EAAEC,OAAO9B,QAC/B+B,UAAQ,GAEPnI,EAAK,4BAAQoG,MAAOzG,EAAMmF,KAAK7C,KAAMtC,EAAMmF,KAAK7C,KAAc,iCAC9DuE,QAOb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAS4B,KAAK,SAASC,KAAK,KAAKC,MAAM,UAAUC,QArWpD,WACjB,IAAI9C,EAAK,IAAIC,SACbD,EAAGE,OAAO,UAAW9E,GACrB4E,EAAGE,OAAO,YAAa5E,GACvB0E,EAAGE,OAAO,aAAc1E,GACxBwE,EAAGE,OAAO,MAAOlE,IACjBgE,EAAGE,OAAO,MAAO5D,IACjB0D,EAAGE,OAAO,MAAO1D,IACjBwD,EAAGE,OAAO,cAAe9D,IACzB4D,EAAGE,OAAO,WAAYhE,IACtB8D,EAAGE,OAAO,SAAUpE,IACpBkE,EAAGE,OAAO,MAAOzF,GACjBuF,EAAGE,OAAO,YAAavF,GAEpBJ,GAAMiF,SAASjF,GAAM,IAEpByF,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,MAAO,iBACjBF,EAAGE,OAAO,QAAS,iBACnBhG,EAAMJ,mBAAmBkG,MAkV+D,kBAAC,IAAD,CAAOY,KAAK,iBAApF,WACA,kBAAC,IAAD,CAAS+B,KAAK,QAAQC,KAAK,KAAKC,MAAM,UAAS,kBAAC,IAAD,CAAOjC,KAAK,YAA3D,eAMxB,kBAAC,KAAD,KACA,kBAAC,KAAD,KACA,kBAAC,IAAD,CAAMsB,GAAG,KAAKN,GAAG,KACD,kBAAC,IAAD,KACI,kBAAC,IAAD,2BAGA,kBAAC,IAAD,KAEA,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMD,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,WAAhB,qBAA4C,uBAAGN,UAAU,eAAb,MAC5C,kBAAC,IAAD,CACItH,GAAG,UACH6H,aAAclF,GACdmF,iBAAA,EACAC,YAAY,sBACZC,SAAU,SAACC,GAAD,OAAKrF,GAAWqF,EAAEC,OAAO9B,QACnC+B,UAAQ,OAKpB,kBAAC,KAAD,KACA,kBAAC,IAAD,CAAMf,GAAG,MACL,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,UAAhB,+BAAqD,uBAAGN,UAAU,eAAb,MACrD,kBAAC,KAAD,CACItH,GAAG,SACH6H,aAAchF,GACdiF,iBAAA,EACAC,YAAY,eACZC,SAAU,SAACC,GAAD,OAAKnF,GAAUmF,EAAEC,OAAO9B,QAClC+B,UAAQ,GAETvB,OAKX,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMQ,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,aAAhB,eAAwC,uBAAGN,UAAU,eAAb,MACxC,kBAAC,IAAD,CACItH,GAAG,YACH6H,aAAc9E,GACd+E,iBAAA,EACAC,YAAY,eACZC,SAAU,SAACC,GAAD,OAAKjF,GAAaiF,EAAEC,OAAO9B,QACrC+B,UAAQ,OAKpB,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMf,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,aAAhB,4BACA,kBAAC,IAAD,CACI5H,GAAG,YACH6H,aAAc5E,GACd8E,YAAY,eACZC,SAAU,SAACC,GAAD,OAAK/E,GAAa+E,EAAEC,OAAO9B,aAKjD,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMgB,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,YAAhB,SACA,kBAAC,IAAD,CACI5H,GAAG,WACH6H,aAAc1E,GACdiF,KAAK,QACLL,YAAY,eACZC,SAAU,SAACC,GAAD,OAAK7E,GAAY6E,EAAEC,OAAO9B,aAKhD,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMgB,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,YAAhB,kCACA,kBAAC,KAAD,CACI5H,GAAG,WACH6H,aAAcxE,GACdyE,iBAAA,EACAC,YAAY,iBACZC,SAAU,SAACC,GAAD,OAAK3E,GAAY2E,EAAEC,OAAO9B,QACpC+B,UAAQ,GAETnB,OAKX,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMI,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,cAAhB,WACA,kBAAC,KAAD,CACI5H,GAAG,aACH6H,aAActE,GACdwE,YAAY,gBACZC,SAAU,SAACC,GAAD,OAAKzE,GAAcyE,EAAEC,OAAO9B,cAQlD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASmC,QA9iBb,WAChB,IAAI9C,EAAK,IAAIC,SACbD,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,UAAWhD,IACrB8C,EAAGE,OAAO,SAAU9C,IACpB4C,EAAGE,OAAO,YAAa5C,IACvB0C,EAAGE,OAAO,YAAa1C,IACvBwC,EAAGE,OAAO,WAAYxC,IACtBsC,EAAGE,OAAO,WAAYtC,IACtBoC,EAAGE,OAAO,aAAcpC,IACxBkC,EAAGE,OAAO,MAAOzF,GACjBuF,EAAGE,OAAO,YAAavF,GAEpBJ,GAAMiF,SAASjF,GAAM,IAEpByF,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,MAAO,iBACjBF,EAAGE,OAAO,QAAS,iBACnBhG,EAAMJ,mBAAmBkG,KA4hBsB2C,KAAK,SAASC,KAAK,KAAKC,MAAM,WAAU,kBAAC,IAAD,CAAOjC,KAAK,iBAAnF,cAIR,kBAAC,IAAD,CAAMsB,GAAG,KAAKN,GAAG,KACjB,kBAAC,IAAD,KACI,kBAAC,IAAD,6BAGA,kBAAC,IAAD,KAEA,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMD,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,WAAhB,qBAA4C,uBAAGN,UAAU,eAAb,MAC5C,kBAAC,IAAD,CACItH,GAAG,UACH6H,aAAcpE,GACdqE,iBAAA,EACAC,YAAY,sBACZC,SAAU,SAACC,GAAD,OAAKvE,GAAWuE,EAAEC,OAAO9B,QACnC+B,UAAQ,OAKpB,kBAAC,KAAD,KACA,kBAAC,IAAD,CAAMf,GAAG,MACL,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,UAAhB,+BAAqD,uBAAGN,UAAU,eAAb,MACrD,kBAAC,KAAD,CACItH,GAAG,SACH6H,aAAclE,GACdmE,iBAAA,EACAC,YAAY,eACZC,SAAU,SAACC,GAAD,OAAKrE,GAAUqE,EAAEC,OAAO9B,QAClC+B,UAAQ,GAEPvB,OAKb,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMQ,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,aAAhB,eAAwC,uBAAGN,UAAU,eAAb,MACxC,kBAAC,IAAD,CACItH,GAAG,YACH6H,aAAchE,GACdiE,iBAAA,EACAC,YAAY,eACZC,SAAU,SAACC,GAAD,OAAKnE,GAAamE,EAAEC,OAAO9B,QACrC+B,UAAQ,OAKpB,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMf,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,aAAhB,4BACA,kBAAC,IAAD,CACI5H,GAAG,YACH6H,aAAc9D,GACdgE,YAAY,eACZC,SAAU,SAACC,GAAD,OAAKjE,GAAaiE,EAAEC,OAAO9B,aAKjD,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMgB,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,YAAhB,SACA,kBAAC,IAAD,CACI5H,GAAG,WACH6H,aAAc5D,GACdmE,KAAK,QACLL,YAAY,cACZC,SAAU,SAACC,GAAD,OAAK/D,GAAY+D,EAAEC,OAAO9B,aAKhD,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMgB,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,YAAhB,kCACA,kBAAC,KAAD,CACI5H,GAAG,WACH6H,aAAc1D,GACd2D,iBAAA,EACAC,YAAY,iBACZC,SAAU,SAACC,GAAD,OAAK7D,GAAY6D,EAAEC,OAAO9B,QACpC+B,UAAQ,GAETnB,OAKX,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMI,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,cAAhB,WACA,kBAAC,KAAD,CACI5H,GAAG,aACH6H,aAAcxD,GACd0D,YAAY,gBACZC,SAAU,SAACC,GAAD,OAAK3D,GAAc2D,EAAEC,OAAO9B,cAQlD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASmC,QA/oBb,WAChB,IAAI9C,EAAK,IAAIC,SACbD,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,UAAWlC,IACrBgC,EAAGE,OAAO,SAAUhC,IACpB8B,EAAGE,OAAO,YAAa9B,IACvB4B,EAAGE,OAAO,YAAa5B,IACvB0B,EAAGE,OAAO,WAAY1B,IACtBwB,EAAGE,OAAO,WAAYxB,IACtBsB,EAAGE,OAAO,aAActB,IACxBoB,EAAGE,OAAO,MAAOzF,GACjBuF,EAAGE,OAAO,YAAavF,GAEpBJ,GAAMiF,SAASjF,GAAM,IAEpByF,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,MAAO,iBACjBF,EAAGE,OAAO,QAAS,iBACnBhG,EAAMJ,mBAAmBkG,KA6nBuB2C,KAAK,SAASC,KAAK,KAAKC,MAAM,WAAU,kBAAC,IAAD,CAAOjC,KAAK,iBAApF,gBAOxB,kBAAC,KAAD,KACA,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMe,GAAG,KAAKO,GAAG,MACb,kBAAC,IAAD,KACI,kBAAC,IAAD,eAGA,kBAAC,IAAD,KACA,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMP,GAAG,KAAKO,GAAG,KACb,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQC,QAAQ,aAAhB,aACa,6BACT,8CAEJ,kBAAC,IAAD,CAAMR,GAAG,KAAKC,GAAG,IAAIC,UAAU,eAC/B,yBACI2B,IAAKC,oCAAkC7G,GACvCiF,UAAU,UACV6B,MAAM,QACNC,OAAO,QACPC,IAAK/I,EACLgJ,QAAS,SAACrB,GAAKA,EAAEC,OAAOqB,QAAQ,KAAMtB,EAAEC,OAAOe,IAAIC,wBAGtD,kBAAC,IAAD,CAAM9B,GAAG,KAAKC,GAAG,IAAIC,UAAU,QAC5B,kBAAC,IAAD,CACA0B,QAAM,EACNhJ,GAAG,oBACHqG,KAAK,WACLmD,OAAO,yBACPxB,SAtjBX,SAACC,GAClB3F,GAAU2F,EAAEC,OAAOuB,MAAM,OAujBG,kBAAC,KAAD,CAAQ7B,QAAQ,oBAAoBF,QAAQ,eAA5C,mBAIJ,kBAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,IAAIC,UAAU,oBAC/B,kBAAC,IAAD,CAAcA,UAAU,QACpB,kBAAC,IAAD,CAASgB,MAAM,YAAYC,QAjwBhC,WACnB,IAAI9C,EAAK,IAAIC,SACbD,EAAGE,OAAO,QAAStD,IACnBoD,EAAGE,OAAO,QAAS,UACnBF,EAAGE,OAAO,MAAOzF,GACjBuF,EAAGE,OAAO,YAAavF,GAEpBJ,GAAMiF,SAASjF,GAAM,IAEpByF,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,MAAO,iBACjBF,EAAGE,OAAO,QAAS,iBACnBhG,EAAMJ,mBAAmBkG,MAqvB+C,uBAAG6B,UAAU,eAAjE,SACA,kBAAC,IAAD,CAASgB,MAAM,YAAYC,QAAS,kBAAIhD,GAAsBlD,MAA9D,gBAKZ,kBAAC,IAAD,CAAM+E,GAAG,KAAKO,GAAG,KACjB,kBAAC,IAAD,KACQ,kBAAC,KAAD,CAAQC,QAAQ,aAAhB,aACc,6BACV,8CAEJ,kBAAC,IAAD,CAAMR,GAAG,KAAKC,GAAG,IAAIC,UAAU,eAC/B,yBACI2B,IAAKC,oCAAkC3G,GACvC+E,UAAU,UACV6B,MAAM,QACNC,OAAO,QACPC,IAAK/I,EACLgJ,QAAS,SAACrB,GAAKA,EAAEC,OAAOqB,QAAQ,KAAMtB,EAAEC,OAAOe,IAAIC,yBAGtD,kBAAC,IAAD,CAAM9B,GAAG,KAAKC,GAAG,IAAIC,UAAU,QAC5B,kBAAC,IAAD,CACA0B,QAAM,EACNhJ,GAAG,qBACHqG,KAAK,WACLmD,OAAO,yBACPxB,SAvlBX,SAACC,GAClBzF,GAAUyF,EAAEC,OAAOuB,MAAM,OAwlBG,kBAAC,KAAD,CAAQ7B,QAAQ,oBAAoBF,QAAQ,eAA5C,mBAIJ,kBAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,IAAIC,UAAU,oBAC/B,kBAAC,IAAD,CAAcA,UAAU,QACpB,kBAAC,IAAD,CAASgB,MAAM,YAAYC,QArxBhC,WACnB,IAAI9C,EAAK,IAAIC,SACbD,EAAGE,OAAO,QAASpD,IACnBkD,EAAGE,OAAO,QAAS,UACnBF,EAAGE,OAAO,MAAOzF,GACjBuF,EAAGE,OAAO,YAAavF,GAEpBJ,GAAMiF,SAASjF,GAAM,IAEpByF,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,MAAO,iBACjBF,EAAGE,OAAO,QAAS,iBACnBhG,EAAMJ,mBAAmBkG,MAywB+C,uBAAG6B,UAAU,eAAjE,SACA,kBAAC,IAAD,CAASgB,MAAM,YAAYC,QAAS,kBAAIhD,GAAsBhD,MAA9D,gBAMZ,kBAAC,IAAD,CAAM6E,GAAG,KAAKO,GAAG,KACjB,kBAAC,IAAD,KACQ,kBAAC,KAAD,CAAQC,QAAQ,aAAhB,aACc,6BACV,8CAEJ,kBAAC,IAAD,CAAMR,GAAG,KAAKC,GAAG,IAAIC,UAAU,eAC/B,yBACI2B,IAAKC,oCAAkCzG,GACvC6E,UAAU,UACV6B,MAAM,QACNC,OAAO,QACPC,IAAK/I,EACLgJ,QAAS,SAACrB,GAAKA,EAAEC,OAAOqB,QAAQ,KAAMtB,EAAEC,OAAOe,IAAIC,yBAGtD,kBAAC,IAAD,CAAM9B,GAAG,KAAKC,GAAG,IAAIC,UAAU,QAC5B,kBAAC,IAAD,CACA0B,QAAM,EACNhJ,GAAG,oBACHqG,KAAK,WACLmD,OAAO,yBACPxB,SAznBX,SAACC,GAClBvF,GAAUuF,EAAEC,OAAOuB,MAAM,OA2nBG,kBAAC,KAAD,CAAQ7B,QAAQ,oBAAoBF,QAAQ,eAA5C,mBAIJ,kBAAC,IAAD,CAAMN,GAAG,KAAKC,GAAG,IAAIC,UAAU,oBAC/B,kBAAC,IAAD,CAAcA,UAAU,QAEpB,kBAAC,IAAD,CAASgB,MAAM,YAAYC,QA7yBhC,WACnB,IAAI9C,EAAK,IAAIC,SACbD,EAAGE,OAAO,QAASlD,IACnBgD,EAAGE,OAAO,QAAS,UACnBF,EAAGE,OAAO,MAAOzF,GACjBuF,EAAGE,OAAO,YAAavF,GAEpBJ,GAAMiF,SAASjF,GAAM,IAEpByF,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,MAAO,iBACjBF,EAAGE,OAAO,QAAS,iBACnBhG,EAAMJ,mBAAmBkG,MAiyB+C,uBAAG6B,UAAU,eAAjE,SACA,kBAAC,IAAD,CAASgB,MAAM,YAAYC,QAAS,kBAAIhD,GAAsB9C,MAA9D,iBAOhB,kBAAC,KAAD,CAAM6E,UAAU,8EAA8EF,GAAG,MAC7F,kBAAC,IAAD,CAAMA,GAAG,KAAKO,GAAG,IAAIN,GAAG,IAAKC,UAAU,gBACvC,kBAAC,IAAD,KACQ,kBAAC,KAAD,CAAQM,QAAQ,MAAhB,mBAGA,kBAAC,IAAD,CAAMR,GAAG,KAAKC,GAAG,IAAIC,UAAU,eAC/B,yBACI2B,IAAKC,oCAAkC/G,GACvCmF,UAAU,UACVoC,MAAO,CAACP,MAAM,QAASC,OAAO,SAC9BD,MAAM,QACNC,OAAO,QACPC,IAAK/I,EACLgJ,QAAS,SAACrB,GAAKA,EAAEC,OAAOqB,QAAQ,KAAMtB,EAAEC,OAAOe,IAAIC,iCAW/E,kBAAC,KAAD,KACA,kBAAC,KAAD,KACA,kBAAC,IAAD,CAAMvB,GAAG,KAAKN,GAAG,MACD,kBAAC,IAAD,KACI,kBAAC,IAAD,KACD,kBAAC,KAAD,KACK,kBAAC,IAAD,CAAMD,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,OAAhB,mBACA,kBAAC,IAAD,CACI5H,GAAG,MACHqG,KAAK,OACLwB,aAAcpD,GACduD,SAAU,SAACC,GAAD,OAAKvD,GAAOuD,EAAEC,OAAO9B,aAK3C,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMgB,GAAG,MACT,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAQQ,QAAQ,UAAhB,sBACA,kBAAC,KAAD,CACI5H,GAAG,SACH6H,aAActD,GACdwD,YAAY,uCACZC,SAAU,SAACC,GAAD,OAAKzD,GAAUyD,EAAEC,OAAO9B,cAQ9C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASgC,KAAK,SAASC,KAAK,KAAKC,MAAM,UAAUC,QAtzBtD,WACf,IAAI9C,EAAK,IAAIC,SACbD,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,SAAUpB,IACpBkB,EAAGE,OAAO,MAAOlB,IACjBgB,EAAGE,OAAO,YAAa,GACvBF,EAAGE,OAAO,YAAa,GACvBF,EAAGE,OAAO,MAAOzF,GACjBuF,EAAGE,OAAO,YAAavF,GAEpBJ,GAAMiF,SAASjF,GAAM,IAEpByF,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,MAAO,iBACjBF,EAAGE,OAAO,QAAS,iBACnBhG,EAAMJ,mBAAmBkG,MAuyB6D,kBAAC,IAAD,CAAOY,KAAK,iBAAlF,WACA,kBAAC,IAAD,CAAS+B,KAAK,QAAQC,KAAK,KAAKC,MAAM,SAASC,QAryB/C,WACpB,IAAI9C,EAAK,IAAIC,SACbD,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,SAAUpB,IACpBkB,EAAGE,OAAO,YAAa,GACvBF,EAAGE,OAAO,YAAa,GAEpB3F,GAAMiF,SAASjF,GAAM,IAEpByF,EAAGE,OAAO,KAAM3F,GAChByF,EAAGE,OAAO,MAAO,UACjBF,EAAGE,OAAO,QAAS,iBACnBhG,EAAMJ,mBAAmBkG,MAyxBgE,kBAAC,IAAD,CAAOY,KAAK,YAArF,yBC19Bb3H,uBAPS,SAACC,GAAD,MAAW,CACjCgL,KAAKhL,EAAMQ,YAAYwK,KACvBC,QAAQjL,EAAMQ,YAAYyK,QAC1BC,aAAalL,EAAMQ,YAAY0K,aAC/BC,QAAQnL,EAAMoL,eAAeD,QAC7BE,aAAarL,EAAME,oBAAoBmL,gBAED,CAAC3K,qBAA1BX,EAvEF,SAACiB,GACZ,IAAMsK,EAAYC,cAAYJ,QACxB1J,EAAY8J,cAAYC,QAFR,EAGMtK,mBAAS,GAHf,mBAGfuK,EAHe,KAGPC,EAHO,OAIMxK,mBAAS,GAJf,mBAIfyK,EAJe,KAIPC,EAJO,KAMtB1F,qBAAU,WACNlF,EAAMN,gBAAgB4K,KACvB,CAACG,EAAQH,IAGZ,IAAMO,EAAa,SAAChF,GAClB+E,EAAU/E,GACV6E,EAAU,IAbU,EAiB4D1K,EAAMqK,cAAgB,GAAhG9E,EAjBc,EAiBdA,aAAclF,EAjBA,EAiBAA,GAAIa,EAjBJ,EAiBIA,QAASE,EAjBb,EAiBaA,UAAWE,EAjBxB,EAiBwBA,WAAYkB,EAjBpC,EAiBoCA,MAAO3B,EAjB3C,EAiB2CA,MAAOiK,EAjBlD,EAiBkDA,MAClEC,EAAW7J,EAAQ,IAAIE,EAAU,IAAIE,EAE3C,OACE,oCACA,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAM0J,GAAI,IACR,kBAAC,IAAD,KACG3K,EAAM,kBAAC,IAAD,CAAasH,UAAU,WAC5B,kBAAC,KAAD,CAAMA,UAAU,WACd,kBAAC,IAAD,CAAMF,GAAI,EAAGO,GAAI,EAAGL,UAAU,WAC9B,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CACI2B,IAAKC,oCAAkC/G,EACvCmF,UAAU,mCACV8B,OAAO,OACPD,MAAM,OACNE,IAAK1J,EAAMiL,SACXtB,QAAS,SAACrB,GAAKA,EAAEC,OAAOqB,QAAQ,KAAMtB,EAAEC,OAAOe,IAAIC,gCAI3D,kBAAC,IAAD,CAAM9B,GAAI,GAAIO,GAAI,GAChB,4BAAK+C,GADP,eAEgB,gCAASD,EAAT,IAAiBjK,EAAjB,IAAyB0E,IAEvC,kBAAC,IAAD,CAAMkC,GAAI,GAAIO,GAAI,EAAGL,UAAU,wBAC/B,kBAAC,IAAD,CAAcA,UAAU,cACtB,kBAAC,IAAD,CACAgB,MAAM,YACLC,QAAS,kBAAIiC,EAAW,KAAI,uBAAGlD,UAAU,eAF1C,QAGA,kBAAC,IAAD,CACAgB,MAAM,YACLC,QAAS,kBAAIiC,EAAW,KAAI,uBAAGlD,UAAU,eAF1C,YAMS,MAIpBgD,EAAS,EAAI,kBAAC,EAAD,CAAYvF,OAAQuF,EAAQxF,KAAMnF,EAAMqK,aAAc5J,UAAWA,EAAWyK,UAAU,IAAU,GAClG,IAAXT,GAA2B,IAAXE,EAAe,kBAACQ,EAAA,EAAD,CAAahB,QAASnK,EAAMqK,eAAiB,Q,gFCpElE,SAASe,EAAevC,EAAKwC,GAC1C,OCLa,SAAyBxC,GACtC,GAAI3C,MAAMC,QAAQ0C,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKwC,GACjD,GAAsB,qBAAXC,QAA4BA,OAAOC,YAAYrE,OAAO2B,GAAjE,CACA,IAAI2C,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKjD,EAAIyC,OAAOC,cAAmBE,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAK1C,KAAK+C,EAAGpF,QAET4E,GAAKG,EAAK1E,SAAWuE,GAH8CI,GAAK,IAK9E,MAAO1C,GACP2C,GAAK,EACLC,EAAK5C,EACL,QACA,IACO0C,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqB3C,EAAKwC,IAAM,OAAAY,EAAA,GAA2BpD,EAAKwC,IGLjF,WACb,MAAM,IAAIa,UAAU,6IHIgF,K,iCILtG,iPAiBMC,EAAOC,IAGAC,EAAc,SAAAC,GAAM,OAAI,SAACC,EAAUC,GAE5CF,EAAOG,MAAQC,IACfJ,EAAOK,MAPM,WASbJ,EAAS,CAAC9D,KAAOmE,MACbC,IAAMC,IAAIX,EAAM,CAACG,UAASS,KACrBC,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAMyE,IACNC,QAASF,EAAI9H,UAGpBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAO4E,IACPF,QAAQpE,SAKfuE,EAAgB,SAAAhB,GAAM,OAAI,SAACC,EAAUC,GAE9CD,EAAS,CAAC9D,KAAOmE,MACbC,IAAMC,IAAIX,EAAM,CAACG,UAASS,KACrBC,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAM8E,IACNJ,QAASF,EAAI9H,UAGpBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAO4E,IACPF,QAAQpE,SAKfyE,EAAa,SAAAnN,GAAE,OAAI,SAACkM,EAAUC,GAEvCD,EACI,CACA9D,KAAOgF,IACPN,QAAS9M,MAIJqN,EAAgB,SAAApB,GAAM,OAAI,SAACC,EAAUC,GAC9CK,IAAMc,KAAKxB,EAAM,CAACG,UAASS,KACtBC,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAMmF,IACNT,QAASb,EAAOjM,QAGvB+M,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAOoF,IACPV,QAAUpE,SAMb+E,EAAkB,SAAA3I,GAAI,OAAI,SAAAoH,GACnCM,IAAMkB,KAAK5B,EAAMhH,EAAM6I,KAClBhB,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAMwF,IACNd,QAASF,EAAI9H,KAAKA,UAGzBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAOyF,IACPf,QAASpE,SAKZoF,EAAgB,SAAChJ,GAAD,OAAU,SAACoH,EAAUC,GAE9CK,IAAMkB,KAAK5B,EAAMhH,EAAM6I,KAClBhB,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAM2F,IACNjB,QAASF,EAAI9H,KAAKA,UAGzBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAO4F,IACPlB,QAASpE,U,iCCjHzB,+MAgBIuF,EAAa,UACXnC,EAAOC,IAGAtM,EAAa,SAAAwM,GAAM,OAAI,SAACC,EAAUC,GAE3CF,EAAOG,MAAQC,IACfJ,EAAOK,MAAQ2B,EAEf/B,EAAS,CAAC9D,KAAO8F,MACb1B,IAAMC,IAAIX,EAAM,CAACG,UAASS,KACrBC,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAM+F,IACNrB,QAASF,EAAI9H,UAGpBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAOgG,IACPtB,QAAQpE,SA0Bf2F,EAAY,SAAArO,GAAE,OAAI,SAACkM,EAAUC,GAEtCD,EACI,CACA9D,KAAOkG,IACPxB,QAAS9M,MAIJuO,EAAe,SAAAtC,GAAM,OAAI,SAACC,EAAUC,GAC7CK,IAAMc,KAAKxB,EAAM,CAACG,UAASS,KACtBC,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAMoG,IACN1B,QAASb,EAAOjM,QAGvB+M,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAOqG,IACP3B,QAAUpE,SAMbgG,EAAiB,SAAA5J,GAAI,OAAI,SAAAoH,GAClCM,IAAMkB,KAAK5B,EAAMhH,EAAM6I,KAClBhB,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAMuG,IACN7B,QAASF,EAAI9H,KAAKA,UAGzBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAOwG,IACP9B,QAASpE,SAKZmG,EAAe,SAAC/J,GAAD,OAAU,SAACoH,EAAUC,GAE7CK,IAAMkB,KAAK5B,EAAMhH,EAAM6I,KAClBhB,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAM0G,IACNhC,QAASF,EAAI9H,KAAKA,UAGzBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAO2G,IACPjC,QAASpE,U,iCCpHzB,+MAgBMoD,EAAOC,IAGArM,EAAc,SAAAuM,GAAM,OAAI,SAACC,EAAUC,GAE5CF,EAAOG,MAAQC,IACfJ,EAAOK,MAPM,WASbJ,EAAS,CAAC9D,KAAO4G,MACbxC,IAAMC,IAAIX,EAAM,CAACG,UAASS,KACrBC,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAM6G,IACNnC,QAASF,EAAI9H,UAGpBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAO8G,IACPpC,QAAQpE,SAKfyG,EAAa,SAAAnP,GAAE,OAAI,SAACkM,EAAUC,GAEvCD,EACI,CACA9D,KAAOgH,IACPtC,QAAS9M,MAIJqP,EAAgB,SAAApD,GAAM,OAAI,SAACC,EAAUC,GAC9CK,IAAMc,KAAKxB,EAAM,CAACG,UAASS,KACtBC,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAMkH,IACNxC,QAASb,EAAOjM,QAGvB+M,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAOmH,IACPzC,QAAUpE,SAMb8G,EAAkB,SAAA1K,GAAI,OAAI,SAAAoH,GACnCM,IAAMkB,KAAK5B,EAAMhH,EAAM6I,KAClBhB,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAMqH,IACN3C,QAASF,EAAI9H,KAAKA,UAGzBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAOsH,IACP5C,QAASpE,SAKZiH,EAAgB,SAAC7K,GAAD,OAAU,SAACoH,EAAUC,GAE9CK,IAAMkB,KAAK5B,EAAMhH,EAAM6I,KAClBhB,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAMwH,IACN9C,QAASF,EAAI9H,KAAKA,UAGzBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAOyH,IACP/C,QAASpE,U,iCC9FzB,iPAiBMoD,EAAOC,IAGA3M,EAAmB,SAAA6M,GAAM,OAAI,SAACC,EAAUC,GAEjDF,EAAOG,MAAQC,IAEfH,EAAS,CAAC9D,KAAO0H,MACbtD,IAAMC,IAAIX,EAAM,CAACG,UAASS,KACrBC,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAM2H,IACNjD,QAASF,EAAI9H,UAGpBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAO4H,IACPlD,QAAQpE,SAMfuH,EAAyB,SAAAhE,GAAM,OAAI,SAACC,EAAUC,GAEvDF,EAAOG,MAAQC,IAEfH,EAAS,CAAC9D,KAAO0H,MACbtD,IAAMC,IAAIX,EAAM,CAACG,UAASS,KACrBC,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAM8H,IACNpD,QAASF,EAAI9H,UAGpBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAO4H,IACPlD,QAAQpE,SAKfrJ,EAAkB,SAAAW,GAAE,OAAI,SAACkM,EAAUC,GAE5CD,EACI,CACA9D,KAAO+H,IACPrD,QAAS9M,MAIJR,EAAqB,SAACyM,EAAQjM,GAAT,OAAgB,SAACkM,EAAUC,GACzDK,IAAMkB,KAAK5B,EAAMG,EAAQ0B,KACpBhB,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAMgI,IACNtD,QAAS9M,OAGhB+M,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAOiI,IACPvD,QAAUpE,SAMbpJ,EAAuB,SAAAwF,GAAI,OAAI,SAAAoH,GACxCM,IAAMkB,KAAK5B,EAAMhH,EAAM6I,KAClBhB,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAMkI,IACNxD,QAASF,EAAI9H,KAAKA,UAGzBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAOmI,IACPzD,QAASpE,SAKZnJ,EAAqB,SAACuF,GAAD,OAAU,SAACoH,EAAUC,GAEnDqE,QAAQC,IAAI3L,GACZ0H,IAAMkB,KAAK5B,EAAMhH,EAAM6I,KAClBhB,MAAK,SAAAC,GACFV,EAAS,CACL9D,KAAMsI,IACN5D,QAASF,EAAI9H,KAAKA,UAGzBiI,OAAM,SAAArE,GACHwD,EAAS,CACL9D,KAAOuI,IACP7D,QAASpE,U,iCCpHzB,sEAmIekI,IA1HF,SAACjR,EAAD,GAAoB,EAAXkR,MAAY,IAAD,EAiCzBlR,EAAMmK,SAAW,GA5BrB/I,GAL6B,EAE7Bf,GAF6B,EAG7B8Q,MAH6B,EAI7BC,cAJ6B,EAK7BhQ,WACAF,EAN6B,EAM7BA,QACAI,EAP6B,EAO7BA,WACAQ,EAR6B,EAQ7BA,IACAf,EAT6B,EAS7BA,IACA+D,EAV6B,EAU7BA,IACAxC,EAX6B,EAW7BA,IACAF,EAZ6B,EAY7BA,IACAI,EAb6B,EAa7BA,MACAhB,EAd6B,EAc7BA,MACAE,EAf6B,EAe7BA,MACAQ,EAhB6B,EAgB7BA,YACAmP,EAjB6B,EAiB7BA,WACAzP,EAlB6B,EAkB7BA,OACAgD,EAnB6B,EAmB7BA,OACAa,EApB6B,EAoB7BA,UACAzC,EArB6B,EAqB7BA,QACAc,EAtB6B,EAsB7BA,QACAV,EAvB6B,EAuB7BA,UACAE,EAxB6B,EAwB7BA,UACAY,EAzB6B,EAyB7BA,UACAE,EA1B6B,EA0B7BA,UACAZ,EA3B6B,EA2B7BA,SACAc,EA5B6B,EA4B7BA,SACAV,EA7B6B,EA6B7BA,WACAc,EA9B6B,EA8B7BA,WACAxB,EA/B6B,EA+B7BA,OACAc,EAhC6B,EAgC7BA,OAGF,OACE,oCACA,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACI,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAM2D,UAAU,cAAcF,GAAI,GAAIO,GAAI,EAAGN,GAAI,GAC/C,yBACE+B,OAAO,QACPD,MAAM,QACNO,MAAO,CAACP,MAAM,QAASC,OAAO,SAC9BH,IAAKC,oCAAkC/G,EACvCkH,IAAKxI,EACLyI,QAAS,SAACrB,GAAKA,EAAEC,OAAOqB,QAAQ,KAAMtB,EAAEC,OAAOe,IAAI,0BAGvD,kBAAC,IAAD,CAAM3B,UAAU,cAAcF,GAAI,GAAIO,GAAI,EAAGN,GAAI,GAC/C,kBAAC,KAAD,CAAMD,GAAI,IACV,kBAAC,IAAD,CAAMA,GAAI,IACR,kBAAC,IAAD,CAAYE,UAAU,gCACpB,kBAAC,KAAD,KAAM,kBAAC,IAAD,KACJ,kBAAC,KAAD,CAAMA,UAAU,OAAM,kBAAC,IAAD,CAAMF,GAAI,GAAG,uBAAGE,UAAU,sBAA1B,aAAkE,kBAAC,IAAD,KAAM,4BAAQoC,MAAO,CAACuH,cAAc,eAA9B,UAAiDpQ,EAAjD,YAA4DE,EAA5D,YAAyEE,MACvK,kBAAC,KAAD,CAAMqG,UAAU,OAAM,kBAAC,IAAD,CAAMF,GAAI,GAAG,uBAAGE,UAAU,qBAA1B,kBAAsE,kBAAC,IAAD,KAAM,0CAAmD,iBAAvC4J,IAAOzP,GAAK0P,OAAO,gBAAoCD,IAAOzP,GAAK0P,OAAO,gBAAgB,eACxM,kBAAC,KAAD,CAAM7J,UAAU,OAAM,kBAAC,IAAD,CAAMF,GAAI,GAAG,uBAAGE,UAAU,sBAA1B,WAAgE,kBAAC,IAAD,KAAM,4BAAQoC,MAAO,CAACuH,cAAc,eAA9B,UAAiD1P,MAC7I,kBAAC,KAAD,CAAM+F,UAAU,OAAM,kBAAC,IAAD,CAAMF,GAAI,GAAG,uBAAGE,UAAU,cAA1B,WAAwD,kBAAC,IAAD,KAAM,4BAAQoC,MAAO,CAACuH,cAAc,eAA9B,UAAiDhP,EAAjD,YAAwDF,EAAxD,YAA+DF,MACnJ,kBAAC,KAAD,CAAMyF,UAAU,OAAM,kBAAC,IAAD,CAAMF,GAAI,GAAG,uBAAGE,UAAU,gBAA1B,kBAAiE,kBAAC,IAAD,KAAM,0CAAmD,iBAAvC4J,IAAOxQ,GAAKyQ,OAAO,gBAAoCD,IAAOxQ,GAAKyQ,OAAO,gBAAgB,eACnM,kBAAC,KAAD,CAAM7J,UAAU,OAAM,kBAAC,IAAD,CAAMF,GAAI,GAAG,uBAAGE,UAAU,yBAA1B,WAAmE,kBAAC,IAAD,KAA+B,IAAxBrC,SAASG,GAAmB,4BAAQkC,UAAU,gBAAlB,qBAA8D,4BAAQA,UAAU,eAAlB,UAAoC/C,EAApC,YAA8C2M,IAAOzM,GAAK0M,OAAO,oBAC3P,kBAAC,KAAD,CAAM7J,UAAU,OAAM,kBAAC,IAAD,CAAMF,GAAI,GAAG,uBAAGE,UAAU,qBAA1B,WAA+D,kBAAC,IAAD,KAAO0J,IAC5F,kBAAC,KAAD,CAAM1J,UAAU,MAAMoC,MAAO,CAAC0H,gBAAgBjQ,EAAOmH,MAAM,UAAU,kBAAC,IAAD,CAAMlB,GAAI,GAAG,uBAAGE,UAAU,qBAA1B,UAA8D,kBAAC,IAAD,KAAQnG,IAC3I,kBAAC,KAAD,CAAMmG,UAAU,OAAM,kBAAC,IAAD,CAAMF,GAAI,GAAG,uBAAGE,UAAU,qBAA1B,iBAAqE,kBAAC,IAAD,KAAOjG,eAWtH,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMgG,GAAI,EAAGM,GAAI,GACf,kBAAC,IAAD,CAAQL,UAAU,WAChB,kBAAC,IAAD,KACE,gCAAQ,uBAAGA,UAAU,gBAArB,wBAEF,kBAAC,IAAD,KACI,kBAAC,IAAD,KACE,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAMF,GAAI,IAAI,kBAAC,IAAD,CAAMA,GAAI,GAAG,uBAAGE,UAAU,eAA1B,KAAmD,kBAAC,IAAD,KAAO3E,IACxE,kBAAC,KAAD,CAAMyE,GAAI,IAAI,kBAAC,IAAD,CAAMA,GAAI,GAAG,uBAAGE,UAAU,gBAA1B,KAAoD,kBAAC,IAAD,KAAOzE,IACzE,kBAAC,KAAD,CAAMuE,GAAI,IAAI,kBAAC,IAAD,CAAMA,GAAI,GAAG,uBAAGE,UAAU,gBAA1B,KAAoD,kBAAC,IAAD,KAAOvE,EAAP,IAAmBE,IACrF,kBAAC,KAAD,CAAMmE,GAAI,IAAI,kBAAC,IAAD,CAAMA,GAAI,GAAG,uBAAGE,UAAU,mBAA1B,KAAuD,kBAAC,IAAD,KAAOnE,IAC5E,kBAAC,KAAD,CAAMiE,GAAI,IAAI,kBAAC,IAAD,CAAMA,GAAI,GAAG,uBAAGE,UAAU,qBAA1B,KAAyD,kBAAC,IAAD,KAAO/D,UAQ5F,kBAAC,IAAD,CAAM8D,GAAI,EAAGM,GAAI,GACf,kBAAC,IAAD,CAAOL,UAAU,WACf,kBAAC,IAAD,KACE,gCAAQ,uBAAGA,UAAU,gBAArB,2BAEF,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMD,GAAI,EAAGM,GAAI,IACf,kBAAC,KAAD,CAAMP,GAAI,IAAI,kBAAC,IAAD,CAAMA,GAAI,GAAG,uBAAGE,UAAU,eAA1B,KAAmD,kBAAC,IAAD,KAAO7D,IACxE,kBAAC,KAAD,CAAM2D,GAAI,IAAI,kBAAC,IAAD,CAAMA,GAAI,GAAG,uBAAGE,UAAU,gBAA1B,KAAoD,kBAAC,IAAD,KAAO3D,IACzE,kBAAC,KAAD,CAAMyD,GAAI,IAAI,kBAAC,IAAD,CAAMA,GAAI,GAAG,uBAAGE,UAAU,gBAA1B,KAAoD,kBAAC,IAAD,KAAOzD,EAAP,IAAmBE,IACrF,kBAAC,KAAD,CAAMqD,GAAI,IAAI,kBAAC,IAAD,CAAMA,GAAI,GAAG,uBAAGE,UAAU,mBAA1B,KAAuD,kBAAC,IAAD,KAAOrD,IAC5E,kBAAC,KAAD,CAAMmD,GAAI,IAAI,kBAAC,IAAD,CAAMA,GAAI,GAAG,uBAAGE,UAAU,qBAA1B,KAAyD,kBAAC,IAAD,KAAOjD","file":"static/js/28.0fb14f6b.chunk.js","sourcesContent":["import React , { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getStudentclasss, getStudentclass, registerStudentclass, updateStudentclass, deleteStudentclass } from './../../actions/student/studentclass';\r\nimport { getSessions } from './../../actions/setting/session';\r\nimport { getSchools } from './../../actions/setting/school';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CCardHeader,\r\n  CNav,\r\n  CNavLink,\r\n  CNavItem,\r\n  CTabContent,\r\n  CTabPane,\r\n  CCard,\r\n  CCardBody,\r\n  CTextarea,\r\n  CTabs,\r\n  CButton,\r\n  CFormGroup,\r\n  CInput,\r\n  CSelect,\r\n  CLabel,\r\n  CCardFooter,\r\n  CInputFile,\r\n  CButtonGroup,\r\n  CFormText\r\n\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { allrelations, allplaces, states, callError, allhousess, setElement } from '../../actions/common';\r\n\r\nconst Studentclasss = (props) => {\r\n    const history = useHistory()\r\n\r\n    const [active, setActive] = useState(0)\r\n    const [id, setId] = useState(null)\r\n    const [cid, setCid] = useState(null)\r\n    const [sessionid, setSessionid] = useState(null)\r\n    const [admission, setAdmission] = useState('')\r\n    const [admit, setAdmit] = useState('')\r\n    const [doa, setDoa] = useState('')\r\n    const [schoolid, setSchoolid] = useState('')\r\n    const [surname, setSurname] = useState('')\r\n    const [firstname, setFirstname] = useState('')\r\n    const [middlename, setMiddlename] = useState('')\r\n    const [house, setHouse] = useState('')\r\n    const [place, setPlace] = useState('')\r\n\r\n    const [gender, setGender] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [religion, setReligion] = useState('')\r\n    const [nationality, setNationality] = useState('')\r\n    const [soo, setSoo] = useState('')\r\n    const [lga, setLga] = useState('')\r\n\r\n    const [photo, setPhoto] = useState('')\r\n    const [photo1, setPhoto1] = useState('')\r\n    const [photo2, setPhoto2] = useState('')\r\n    const [photo3, setPhoto3] = useState('')\r\n\r\n    const [g1_name, setG1_name] = useState('')\r\n    const [g1_rel, setG1_rel] = useState('')\r\n    const [g1_phone1, setG1_phone1] = useState('')\r\n    const [g1_phone2, setG1_phone2] = useState('')\r\n    const [g1_email, setG1_email] = useState('')\r\n    const [g1_place, setG1_place] = useState('')\r\n    const [g1_address, setG1_address] = useState('')\r\n    //const [g1_photo, setG1_photo] = useState('')\r\n\r\n    const [g2_name, setG2_name] = useState('')\r\n    const [g2_rel, setG2_rel] = useState('')\r\n    const [g2_phone1, setG2_phone1] = useState('')\r\n    const [g2_phone2, setG2_phone2] = useState('')\r\n    const [g2_email, setG2_email] = useState('')\r\n    const [g2_place, setG2_place] = useState('')\r\n    const [g2_address, setG2_address] = useState('')\r\n    //const [g2_photo, setG2_photo] = useState('')\r\n\r\n    const [reason, setReason] = useState('')\r\n    const [dol, setDol] = useState('')\r\n    const [is_active, setIs_active] = useState(0)\r\n    const [is_delete, setIs_delete] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n        let data = props.data; \r\n        let editi = props.editid;\r\n\r\n        if(props.data && props.data.hasOwnProperty('id') && props.sessionid && parseInt(props.sessionid) > 0)\r\n        {\r\n          setId(data.id)\r\n          setCid(data.cid)\r\n          setSessionid(props.sessionid)\r\n          setSurname(data.surname)\r\n          setFirstname(data.firstname)\r\n          setMiddlename(data.middlename)\r\n          setDob(data.dob)\r\n          setPhoto(data.photo)\r\n          setPhoto1(data.photo1)\r\n          setPhoto2(data.photo2)\r\n          setPhoto3(data.photo3)\r\n          setGender(data.gender)\r\n          setReligion(data.religion)\r\n          setNationality(data.nationality)\r\n          setSoo(data.soo)\r\n          setLga(data.lga)\r\n          setHouse(data.house)\r\n          setPlace(data.place)\r\n          setAdmit(data.admit)\r\n          setAdmission(data.admission_no)\r\n          setSchoolid(data.schoolid)\r\n          setDoa(data.doa)\r\n          setG1_name(data.g1_name)\r\n          setG1_address(data.g1_address)\r\n          setG1_rel(data.g1_rel)\r\n          setG1_phone1(data.g1_phone1)\r\n          setG1_phone2(data.g1_phone2)\r\n          setG1_email(data.g1_email)\r\n          setG2_name(data.g2_name)\r\n          setG2_address(data.g2_address)\r\n          setG2_rel(data.g2_rel)\r\n          setG2_phone1(data.g2_phone1)\r\n          setG2_phone2(data.g2_phone2)\r\n          setG2_email(data.g2_email)\r\n\r\n          setReason(data.reason)\r\n          setDol(data.dol)\r\n          setIs_active(data.is_active)\r\n          setIs_delete(data.is_delete)\r\n\r\n          setElement('soo', data.soo)\r\n          setElement('religion', data.religion)\r\n          setElement('gender', data.gender)\r\n          setElement('house', data.house)\r\n          setElement('place', data.place)\r\n          setElement('g1_rel', data.g1_rel)\r\n          setElement('g2_rel', data.g2_rel)\r\n          setElement('g1_place', data.g1_place)\r\n          setElement('g2_place', data.g2_place)\r\n          \r\n        }\r\n      }, [props.data, props.editid, props.sessionid])\r\n    \r\n    const handlePictureActivate = num =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('photo', num);\r\n        fd.append('cid', cid);\r\n        fd.append('sessionid', sessionid);\r\n        fd.append('cat', 'updatestudent');\r\n        fd.append('table', 'studentclasss');\r\n        props.updateStudentclass(fd);\r\n    }\r\n\r\n    const handlePicture1 = () =>{\r\n        let fd = new FormData();\r\n        fd.append('files', photo1);\r\n        fd.append('links', 'photo1');\r\n        fd.append('cid', cid);\r\n        fd.append('sessionid', sessionid);\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'updatestudent');\r\n            fd.append('table', 'studentclasss');\r\n            props.updateStudentclass(fd)\r\n        }\r\n        \r\n    }\r\n    const handlePicture2 = () =>{\r\n        let fd = new FormData();\r\n        fd.append('files', photo2);\r\n        fd.append('links', 'photo2');\r\n        fd.append('cid', cid);\r\n        fd.append('sessionid', sessionid);\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'updatestudent');\r\n            fd.append('table', 'studentclasss');\r\n            props.updateStudentclass(fd)\r\n        }\r\n    }\r\n    const handlePicture3 = () =>{\r\n        let fd = new FormData();\r\n        fd.append('files', photo3);\r\n        fd.append('links', 'photo3');\r\n        fd.append('cid', cid);\r\n        fd.append('sessionid', sessionid);\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'updatestudent');\r\n            fd.append('table', 'studentclasss');\r\n            props.updateStudentclass(fd)\r\n        }  \r\n    }\r\n    const handleCare1 = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('g1_name', g1_name);\r\n        fd.append('g1_rel', g1_rel);\r\n        fd.append('g1_phone1', g1_phone1);\r\n        fd.append('g1_phone2', g1_phone2);\r\n        fd.append('g1_email', g1_email);\r\n        fd.append('g1_place', g1_place);\r\n        fd.append('g1_address', g1_address);\r\n        fd.append('cid', cid);\r\n        fd.append('sessionid', sessionid);\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'updatestudent');\r\n            fd.append('table', 'studentclasss');\r\n            props.updateStudentclass(fd)\r\n        }\r\n        \r\n    }\r\n    const handleCare2 = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('g2_name', g2_name);\r\n        fd.append('g2_rel', g2_rel);\r\n        fd.append('g2_phone1', g2_phone1);\r\n        fd.append('g2_phone2', g2_phone2);\r\n        fd.append('g2_email', g2_email);\r\n        fd.append('g2_place', g2_place);\r\n        fd.append('g2_address', g2_address);\r\n        fd.append('cid', cid);\r\n        fd.append('sessionid', sessionid);\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'updatestudent');\r\n            fd.append('table', 'studentclasss');\r\n            props.updateStudentclass(fd)\r\n        }\r\n        \r\n    }   \r\n    const handleExit = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('reason', reason);\r\n        fd.append('dol', dol);\r\n        fd.append('is_delete', 1);\r\n        fd.append('is_active', 1);\r\n        fd.append('cid', cid);\r\n        fd.append('sessionid', sessionid);\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'updatestudent');\r\n            fd.append('table', 'studentclasss');\r\n            props.updateStudentclass(fd)\r\n        }\r\n    }\r\n    const handleExitReset = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('reason', reason);\r\n        fd.append('is_delete', 1);\r\n        fd.append('is_active', 1);\r\n        \r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'update');\r\n            fd.append('table', 'studentclasss');\r\n            props.updateStudentclass(fd)\r\n        }\r\n    }\r\n    const handleSubmit = () =>{\r\n        let fd = new FormData();\r\n        fd.append('surname', surname);\r\n        fd.append('firstname', firstname);\r\n        fd.append('middlename', middlename);\r\n        fd.append('dob', dob);\r\n        fd.append('soo', soo);\r\n        fd.append('lga', lga);\r\n        fd.append('nationality', nationality);\r\n        fd.append('religion', religion);\r\n        fd.append('gender', gender);\r\n        fd.append('cid', cid);\r\n        fd.append('sessionid', sessionid);\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'updatestudent');\r\n            fd.append('table', 'studentclasss');\r\n            props.updateStudentclass(fd)\r\n        }\r\n       \r\n        \r\n    }\r\n    const handleSubmitAdm = () =>{\r\n        let arr = []\r\n        if(surname && surname !== 'nil' && surname.length > 0 ){}else{arr.push('Please input a surname') };\r\n        if(firstname !== 'nil' && firstname.length > 0 ){}else{arr.push('Please input a firstname') };\r\n        if(arr.length === 0)\r\n        {\r\n            let fd = new FormData();\r\n            fd.append('surname', surname);\r\n            fd.append('firstname', firstname);\r\n            fd.append('middlename', middlename);\r\n            //fd.append('admission_no', admission);\r\n            //fd.append('admission_nox', admission_nox);\r\n            //fd.append('schoolid', schoolid);\r\n            fd.append('place', place);\r\n            fd.append('house', house);\r\n            fd.append('doa', doa);\r\n            fd.append('admit', admit);\r\n            fd.append('cid', cid);\r\n            fd.append('sessionid', sessionid);\r\n\r\n            if(id && parseInt(id) > 0)\r\n            {\r\n                fd.append('id', id);\r\n                fd.append('cat', 'updatestudent');\r\n                fd.append('table', 'studentclasss');\r\n                props.updateStudentclass(fd);\r\n\r\n            }else{\r\n\r\n                // fd.append('cat', 'insert');\r\n                // fd.append('table', 'studentclasss');\r\n                // props.registerStudentclass(fd)\r\n            }\r\n        }else\r\n        {\r\n            let err = arr.map((pr, ir)=>{\r\n                return pr\r\n            })\r\n            return callError(JSON.stringify(err))\r\n        }\r\n       \r\n        \r\n    }\r\n\r\n\r\nconst changeSoo = (e) =>{\r\n    setSoo(e.target.value);\r\n}\r\nconst changePhoto1 = (e) =>{\r\n    setPhoto1(e.target.files[0]);\r\n}\r\nconst changePhoto2 = (e) =>{\r\n    setPhoto2(e.target.files[0]);\r\n}\r\nconst changePhoto3 = (e) =>{\r\n    setPhoto3(e.target.files[0]);\r\n}\r\n\r\nlet schoolarray = props.schools && Array.isArray(props.schools) ? props.schools : [];\r\nlet scarray = schoolarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.id}>{rw.name}</option>\r\n})\r\n\r\nlet sessionsarray = props.sessions && Array.isArray(props.sessions) ? props.sessions : [];\r\nlet searray = sessionsarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.id}>{rw.name}</option>\r\n})\r\n\r\n\r\nlet starray = states.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.state}>{rw.state}</option>\r\n})\r\n\r\nlet lgar = states.filter(rw=>rw !== null && rw.state === soo)\r\nlet lgarray = lgar.length > 0 ? lgar[0].lgas.map((rw1, ind) =>{\r\n    return <option key={ind} value={rw1}>{rw1}</option>\r\n}): '';\r\n\r\n\r\nlet relarray = Object.keys(allrelations).map((rw1, ind) =>{\r\n    return <option key={ind} value={rw1}>{rw1}</option>\r\n});\r\n\r\nlet placearray = Object.keys(allplaces).map((rw1, ind) =>{\r\n    return <option key={ind} value={rw1}>{rw1}</option>\r\n});\r\n\r\nlet housearray = Object.keys(allhousess).map((rw1, ind) =>{\r\n    return <option key={ind} value={rw1}>{rw1}</option>\r\n});\r\n\r\n  return (\r\n    <>\r\n    <CRow>\r\n    <CCol xs=\"12\" md=\"12\" className=\"mb-4\">\r\n        <CCard>\r\n          <CCardHeader>\r\n          { id && parseInt(id)  > 0 ? <h4>{` Edit ${surname} ${firstname} ${middlename} Data`}</h4>:''}\r\n          </CCardHeader>\r\n            <CCardBody>\r\n            <CTabs activeTab={active} onActiveTabChange={idx => setActive(idx)}>\r\n              <CNav variant=\"tabs\">\r\n              <CNavItem>\r\n                  <CNavLink>\r\n                    <i className='fa fa-user'></i>\r\n                    { active === 0 && ' Admission'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <i className='fa fa-user'></i>\r\n                    { active === 1 && ' Basic Data'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                  <i className='fa fa-users'></i>\r\n                    { active === 2 && ' Care Giver/Guardian'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                  <i className='fa fa-image'></i>\r\n                    { active === 3 && ' Photos '}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                  <i className='fa fa-close'></i>\r\n                    { active === 4 && ' Exit'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n              </CNav>\r\n    <CTabContent>\r\n    <CTabPane>\r\n    <CRow>\r\n    <CCol xs=\"12\" sm=\"12\">\r\n                    <CCard>\r\n                        <CCardBody>\r\n                        <CRow>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"surname\">Surname<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"surname\" \r\n                                    defaultValue={surname}\r\n                                    aria-required \r\n                                    placeholder=\"Enter Surname\"\r\n                                    onChange={(e)=>setSurname(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"firstname\">Firstname<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"firstname\" \r\n                                    defaultValue={firstname}\r\n                                    aria-required \r\n                                    placeholder=\"Enter firstname\"\r\n                                    onChange={(e)=>setFirstname(e.target.value)} \r\n                                    required\r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"middlename\">Middlename</CLabel>\r\n                                <CInput \r\n                                    id=\"middlename\" \r\n                                    defaultValue={middlename}\r\n                                    type='text'\r\n                                    aria-required \r\n                                    placeholder=\"Enter Middlename\"\r\n                                    onChange={(e)=>setMiddlename(e.target.value)} \r\n                                    required\r\n                                />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>   \r\n                        <CRow>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                            <CLabel htmlFor=\"house\">House</CLabel>\r\n                                <CSelect \r\n                                    id=\"house\" \r\n                                    defaultValue={house}\r\n                                    aria-required \r\n                                    placeholder=\"Enter house\"\r\n                                    onChange={(e)=>setHouse(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    <option></option>\r\n                                  {housearray}  \r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"place\">Main Sponsor (Nature/Place of Work)</CLabel>\r\n                                <CSelect \r\n                                    id=\"place\" \r\n                                    defaultValue={place}\r\n                                    aria-required \r\n                                    placeholder=\"Enter place\"\r\n                                    onChange={(e)=>setPlace(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    <option></option>\r\n                                  {placearray}  \r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                           \r\n                            </CCol>\r\n                        </CRow>                         \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={handleSubmitAdm}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                        </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n    </CRow>                    \r\n    </CTabPane>\r\n    <CTabPane>\r\n    <CRow>\r\n     <CCol xs=\"12\" sm=\"12\">\r\n                    <CCard>\r\n                        <CCardBody>\r\n                        <CRow>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"dob\">Date of Birth<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"dob\" \r\n                                    defaultValue={dob}\r\n                                    type='date'\r\n                                    aria-required \r\n                                    placeholder=\"Enter dob\"\r\n                                    onChange={(e)=>setDob(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"gender\">Gender<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    custom \r\n                                    id=\"gender\" \r\n                                    defaultValue={gender}\r\n                                    aria-required \r\n                                    placeholder=\"Select gender\"\r\n                                    onChange={(e)=>setGender(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    <option value='Male'>Male</option>\r\n                                    <option value='Female'>Female</option>\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                            <CLabel htmlFor=\"religion\">Religion<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    custom \r\n                                    id=\"religion\" \r\n                                    defaultValue={religion}\r\n                                    aria-required \r\n                                    placeholder=\"Select Religion\"\r\n                                    onChange={(e)=>setReligion(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    <option value='Christianity'>Christianity</option>\r\n                                    <option value='Islam'>Islam</option>\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        <CRow>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"dob\">Nationality<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    custom \r\n                                    id=\"nationality\" \r\n                                    defaultValue={nationality}\r\n                                    aria-required \r\n                                    placeholder=\"Select Nationality\"\r\n                                    onChange={(e)=>setNationality(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    <option value='Male'>Nigerian</option>\r\n                                    <option value='Female'>non-nigerian</option>\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"soo\">State of Origin<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    custom \r\n                                    id=\"soo\" \r\n                                    onChange={changeSoo} \r\n                                >\r\n                                    {starray}\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                            <CLabel htmlFor=\"lga\">LGA<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    custom \r\n                                    id=\"lga\" \r\n                                    defaultValue={lga}\r\n                                    aria-required \r\n                                    placeholder=\"Select Lga\"\r\n                                    onChange={(e)=>setLga(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    {id ? <option value={props.data.lga}>{props.data.lga}</option>:<option></option>}\r\n                                    {lgarray}\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={handleSubmit}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                            <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n                        </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n    </CRow>\r\n    </CTabPane>\r\n    <CTabPane>\r\n    <CRow>\r\n    <CCol sm=\"12\" md=\"6\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                        Primary Care Giver\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                       \r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_name\">Name of Care Giver<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"g1_name\" \r\n                                    defaultValue={g1_name}\r\n                                    aria-required \r\n                                    placeholder=\"Care Giver Fullname\"\r\n                                    onChange={(e)=>setG1_name(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                        <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_rel\">Relationship to Studentclass<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    id=\"g1_rel\" \r\n                                    defaultValue={g1_rel}\r\n                                    aria-required \r\n                                    placeholder=\"Enter g1_rel\"\r\n                                    onChange={(e)=>setG1_rel(e.target.value)} \r\n                                    required\r\n                                >\r\n                                  {relarray}  \r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_phone1\">Phone Number<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"g1_phone1\" \r\n                                    defaultValue={g1_phone1}\r\n                                    aria-required \r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setG1_phone1(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_phone2\">Alternative Phone Number</CLabel>\r\n                                <CInput \r\n                                    id=\"g1_phone2\" \r\n                                    defaultValue={g1_phone2}\r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setG1_phone2(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_email\">Email</CLabel>\r\n                                <CInput \r\n                                    id=\"g1_email\" \r\n                                    defaultValue={g1_email}\r\n                                    type='email'\r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setG1_email(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_place\">Place of Work/Name of Business</CLabel>\r\n                                <CSelect \r\n                                    id=\"g1_place\" \r\n                                    defaultValue={g1_place}\r\n                                    aria-required \r\n                                    placeholder=\"Enter g1_place\"\r\n                                    onChange={(e)=>setG1_place(e.target.value)} \r\n                                    required\r\n                                >\r\n                                  {placearray}  \r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_address\">Address</CLabel>\r\n                                <CTextarea \r\n                                    id=\"g1_address\" \r\n                                    defaultValue={g1_address}\r\n                                    placeholder=\"....P.0. Box \"\r\n                                    onChange={(e)=>setG1_address(e.target.value)} \r\n                                    />\r\n                                \r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton onClick={handleCare1} type=\"submit\" size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                           </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n                    <CCol sm=\"12\" md=\"6\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                        Secondary Care Giver\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                       \r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_name\">Name of Care Giver<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"g2_name\" \r\n                                    defaultValue={g2_name}\r\n                                    aria-required \r\n                                    placeholder=\"Care Giver Fullname\"\r\n                                    onChange={(e)=>setG2_name(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                        <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_rel\">Relationship to Studentclass<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    id=\"g2_rel\" \r\n                                    defaultValue={g2_rel}\r\n                                    aria-required \r\n                                    placeholder=\"Enter g2_rel\"\r\n                                    onChange={(e)=>setG2_rel(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    {relarray}\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_phone1\">Phone Number<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"g2_phone1\" \r\n                                    defaultValue={g2_phone1}\r\n                                    aria-required \r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setG2_phone1(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_phone2\">Alternative Phone Number</CLabel>\r\n                                <CInput \r\n                                    id=\"g2_phone2\" \r\n                                    defaultValue={g2_phone2}\r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setG2_phone2(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_email\">Email</CLabel>\r\n                                <CInput \r\n                                    id=\"g2_email\" \r\n                                    defaultValue={g2_email}\r\n                                    type='email'\r\n                                    placeholder=\"XX@info.com\"\r\n                                    onChange={(e)=>setG2_email(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_place\">Place of Work/Name of Business</CLabel>\r\n                                <CSelect \r\n                                    id=\"g2_place\" \r\n                                    defaultValue={g2_place}\r\n                                    aria-required \r\n                                    placeholder=\"Enter g2_place\"\r\n                                    onChange={(e)=>setG2_place(e.target.value)} \r\n                                    required\r\n                                >\r\n                                  {placearray}  \r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_address\">Address</CLabel>\r\n                                <CTextarea \r\n                                    id=\"g2_address\" \r\n                                    defaultValue={g2_address}\r\n                                    placeholder=\"....P.0. Box \"\r\n                                    onChange={(e)=>setG2_address(e.target.value)} \r\n                                    />\r\n                                \r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton onClick={handleCare2}  type=\"submit\" size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                                 </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n    \r\n    </CRow>\r\n    </CTabPane>\r\n    <CTabPane>\r\n    <CRow>\r\n        <CCol xs=\"12\" sm=\"12\">\r\n            <CCard>\r\n                <CCardHeader>\r\n                Photos\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                <CRow>\r\n                    <CCol xs=\"12\" sm='4' >\r\n                        <CFormGroup>\r\n                            <CLabel htmlFor=\"admission\">\r\n                               Passport 1<br/>\r\n                                <small>Year 1 & 2</small>\r\n                                </CLabel>\r\n                            <CCol xs=\"12\" md=\"9\" className='text-center'>\r\n                            <img \r\n                                src={process.env.REACT_APP_SERVER_URL+ photo1} \r\n                                className=\"m-0 p-0\" \r\n                                width='100px'\r\n                                height='100px'\r\n                                alt={admission} \r\n                                onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + 'avatars/1.png'} }\r\n                             />\r\n                             </CCol>\r\n                             <CCol xs=\"12\" md=\"9\" className='mt-5'>\r\n                                <CInputFile \r\n                                custom \r\n                                id=\"custom-file-input\"\r\n                                name='picture1'\r\n                                accept=\"image/*:capture=camera\"\r\n                                onChange={changePhoto1}\r\n                                />\r\n                                <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\r\n                                Choose file...\r\n                                </CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\" className='mt-2 text-center'>\r\n                            <CButtonGroup className=\"mr-2\">\r\n                                <CButton color=\"secondary\" onClick={handlePicture1}><i className='fa fa-save'></i> Save</CButton>\r\n                                <CButton color=\"secondary\" onClick={()=>handlePictureActivate(photo1)}>Activate</CButton>\r\n                            </CButtonGroup>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" sm='4' >\r\n                    <CFormGroup>\r\n                            <CLabel htmlFor=\"admission\">\r\n                                Passport 2<br/>\r\n                                <small>Year 3 & 4</small>\r\n                                </CLabel>\r\n                            <CCol xs=\"12\" md=\"9\" className='text-center'>\r\n                            <img \r\n                                src={process.env.REACT_APP_SERVER_URL+ photo2} \r\n                                className=\"m-0 p-0\" \r\n                                width='100px'\r\n                                height='100px'\r\n                                alt={admission} \r\n                                onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/avatars/1.png'} }\r\n                             />\r\n                             </CCol>\r\n                             <CCol xs=\"12\" md=\"9\" className='mt-5'>\r\n                                <CInputFile \r\n                                custom \r\n                                id=\"custom-file-input2\"\r\n                                name='picture2'\r\n                                accept=\"image/*:capture=camera\"\r\n                                onChange={changePhoto2}\r\n                                />\r\n                                <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\r\n                                Choose file...\r\n                                </CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\" className='mt-2 text-center'>\r\n                            <CButtonGroup className=\"mr-2\">\r\n                                <CButton color=\"secondary\" onClick={handlePicture2}><i className='fa fa-save'></i> Save</CButton>\r\n                                <CButton color=\"secondary\" onClick={()=>handlePictureActivate(photo2)}>Activate</CButton>\r\n                            </CButtonGroup>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    \r\n                    </CCol>\r\n                    <CCol xs=\"12\" sm='4' >\r\n                    <CFormGroup>\r\n                            <CLabel htmlFor=\"admission\">\r\n                                Passport 3<br/>\r\n                                <small>Year 5 & 6</small>\r\n                                </CLabel>\r\n                            <CCol xs=\"12\" md=\"9\" className='text-center'>\r\n                            <img \r\n                                src={process.env.REACT_APP_SERVER_URL+ photo3} \r\n                                className=\"m-0 p-0\" \r\n                                width='100px'\r\n                                height='100px'\r\n                                alt={admission} \r\n                                onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/avatars/1.png'} }\r\n                             />\r\n                             </CCol>\r\n                             <CCol xs=\"12\" md=\"9\" className='mt-5'>\r\n                                <CInputFile \r\n                                custom \r\n                                id=\"custom-file-input\"\r\n                                name='picture3'\r\n                                accept=\"image/*:capture=camera\"\r\n                                onChange={changePhoto3}\r\n                                />\r\n                                \r\n                                <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\r\n                                Choose file...\r\n                                </CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\" className='mt-2 text-center'>\r\n                            <CButtonGroup className=\"mr-2\">\r\n                                \r\n                                <CButton color=\"secondary\" onClick={handlePicture3}><i className='fa fa-save'></i> Save</CButton>\r\n                                <CButton color=\"secondary\" onClick={()=>handlePictureActivate(photo3)}>Activate</CButton>\r\n                            </CButtonGroup>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    \r\n                    </CCol>\r\n                </CRow>\r\n                <CRow className='m-auto  p-auto d-flex text-center align-items-center justify-content-center' xs='12'>\r\n                    <CCol xs=\"12\" sm='6' md='4'  className='align-middle'>\r\n                    <CFormGroup>\r\n                            <CLabel htmlFor=\"mm\">\r\n                               Active Passport\r\n                                </CLabel>\r\n                            <CCol xs=\"12\" md=\"9\" className='text-center'>\r\n                            <img \r\n                                src={process.env.REACT_APP_SERVER_URL+ photo} \r\n                                className=\"m-0 p-0\" \r\n                                style={{width:\"200px\", height:\"200px\"}}\r\n                                width='200px'\r\n                                height='200px'\r\n                                alt={admission} \r\n                                onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/avatars/1.png'} }\r\n                             />\r\n                             </CCol>\r\n                        </CFormGroup>\r\n                    </CCol>\r\n                </CRow>\r\n                </CCardBody>\r\n            </CCard>\r\n        </CCol>\r\n    </CRow>\r\n    </CTabPane>\r\n    <CTabPane>\r\n    <CRow>\r\n    <CCol sm=\"12\" md=\"12\">\r\n                    <CCard>\r\n                        <CCardBody>\r\n                       <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"dol\">Date of Leaving</CLabel>\r\n                                <CInput \r\n                                    id=\"dol\" \r\n                                    name='date'\r\n                                    defaultValue={dol}\r\n                                    onChange={(e)=>setDol(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"reason\">Reason for Leaving</CLabel>\r\n                                <CTextarea \r\n                                    id=\"reason\" \r\n                                    defaultValue={reason}\r\n                                    placeholder=\"Absent for....., Graduated with,,,, \"\r\n                                    onChange={(e)=>setReason(e.target.value)} \r\n                                    />\r\n                                \r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={handleExit}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                            <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={handleExitReset}><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n                        </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n    </CRow>\r\n    </CTabPane>\r\n    </CTabContent>\r\n    </CTabs>\r\n    </CCardBody>\r\n    </CCard>\r\n    </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    studentclasss : state.studentclassReducer,\r\n    sessions : state.sessionReducer.sessions,\r\n    schools : state.schoolReducer.schools,\r\n    dropdowns:state.userReducer.dropdowns\r\n  })\r\n  export default connect(mapStateToProps, {\r\n    getStudentclasss,\r\n    getStudentclass,\r\n    registerStudentclass,\r\n    updateStudentclass,\r\n    deleteStudentclass,\r\n    getSchools,\r\n    getSessions\r\n  })(Studentclasss)\r\n  \r\n","import React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport moment from 'moment';\r\nimport { CCard, CCardBody, CImg, CButton, CButtonGroup, CCardHeader, CCol, CRow, CDropdown, CDropdownToggle, CDropdownMenu, CDropdownItem, CDropdownDivider, CContainer, CCardFooter } from '@coreui/react';\r\nimport { getStudent } from './../../actions/student/student';\r\nimport { getStudentclass } from './../../actions/student/studentclass';\r\nimport StudentBio from './StudentBio';\r\nimport StudentAdd from './StudentAdds';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\n\r\nconst User = (props) => {\r\n  const studentid = useParams().student;\r\n  const sessionid = useParams().session;\r\n  const [showed, setShowed] = useState(0)\r\n  const [edited, setEdited] = useState(0)\r\n\r\n  useEffect(() => {\r\n      props.getStudentclass(studentid);\r\n  }, [showed, studentid])\r\n  \r\n  \r\n  const setEditedx = (num) =>{\r\n    setEdited(num)\r\n    setShowed(0)\r\n}\r\n\r\n\r\n  const { admission_no, id, surname, firstname, middlename, photo, admit, abbrv } = props.studentclass || {};\r\n  const fullname = surname+' '+firstname+' '+middlename;\r\n \r\n  return (\r\n    <>\r\n    <CRow>\r\n      <CCol lg={12}>\r\n        <CCard>\r\n          {id  ? <CCardHeader className='bg-dark'>\r\n            <CRow className=\"m-0 p-0\">\r\n              <CCol xs={1} sm={1} className='m-0 p-0'>\r\n              <div className=\"c-avatars m-0\">\r\n                <CImg\r\n                    src={process.env.REACT_APP_SERVER_URL+ photo} \r\n                    className=\"c-avatar-imgf img-responsive m-0\"\r\n                    height='50px'\r\n                    width=\"45px\"\r\n                    alt={props.username}\r\n                    onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL+'/icons/profile_1.png'} }\r\n                />\r\n                </div>\r\n                </CCol>\r\n            <CCol xs={10} sm={7}>\r\n              <h4>{fullname}</h4>\r\n                Student ID: <strong>{abbrv}/{admit}/{admission_no}</strong>\r\n              </CCol>\r\n              <CCol xs={12} sm={4} className=\"d-md-block btn-group\">\r\n              <CButtonGroup className='pull-right'>\r\n                <CButton\r\n                color='secondary'\r\n                 onClick={()=>setEditedx(0)}><i className='fa fa-home'></i>Home</CButton>\r\n                <CButton\r\n                color='secondary'\r\n                 onClick={()=>setEditedx(1)}><i className='fa fa-edit'></i>Edit</CButton>\r\n            </CButtonGroup>  \r\n            </CCol>\r\n            </CRow>\r\n          </CCardHeader>:''}\r\n         </CCard>\r\n      </CCol>\r\n    </CRow>\r\n    {edited > 0 ? <StudentAdd editid={edited} data={props.studentclass} sessionid={sessionid} personal={false} />:''}\r\n    {showed === 0 && edited === 0 ? <StudentBio  student={props.studentclass} />:''}\r\n    \r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  user:state.userReducer.user,\r\n  isAdmin:state.userReducer.isAdmin,\r\n  activeschool:state.userReducer.activeschool,\r\n  student:state.studentReducer.student,\r\n  studentclass:state.studentclassReducer.studentclass,\r\n})\r\nexport default connect(mapStateToProps, {getStudentclass})(User)\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    STUDENT_GET_ONE,\r\n    STUDENT_GET_MULTIPLE,\r\n    STUDENT_GET_SEARCH,\r\n    STUDENT_REGISTER_SUCCESS,\r\n    STUDENT_REGISTER_FAIL,\r\n    STUDENT_LOADING,\r\n    STUDENT_LOADING_ERROR,\r\n    STUDENT_UPDATE_SUCCESS,\r\n    STUDENT_UPDATE_FAIL,\r\n    STUDENT_DELETE_SUCCESS,\r\n    STUDENT_DELETE_FAIL\r\n} from \"./../../types/student/student\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'students';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL STUDENT \r\nexport const getStudents = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : STUDENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENT \r\nexport const searchStudent = params => (dispatch, getState) => {\r\n   \r\n    dispatch({type : STUDENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENT_GET_SEARCH,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STUDENT \r\nexport const getStudent = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STUDENT DELETE\r\nexport const deleteStudent = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENT REGISTER\r\nexport const registerStudent = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STUDENT UPDATE\r\nexport const updateStudent = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    SCHOOL_GET_ONE,\r\n    SCHOOL_GET_MULTIPLE,\r\n    SCHOOL_GET_DROPDOWNS,\r\n    SCHOOL_REGISTER_SUCCESS,\r\n    SCHOOL_REGISTER_FAIL,\r\n    SCHOOL_LOADING,\r\n    SCHOOL_LOADING_ERROR,\r\n    SCHOOL_UPDATE_SUCCESS,\r\n    SCHOOL_UPDATE_FAIL,\r\n    SCHOOL_DELETE_SUCCESS,\r\n    SCHOOL_DELETE_FAIL\r\n} from \"../../types/setting/school\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'schools';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL SCHOOL \r\nexport const getSchools = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : SCHOOL_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SCHOOL_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SCHOOL_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL SCHOOL \r\nexport const getSchooldropdowns = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : SCHOOL_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SCHOOL_GET_DROPDOWNS,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SCHOOL_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE SCHOOL \r\nexport const getSchool = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : SCHOOL_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//SCHOOL DELETE\r\nexport const deleteSchool = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SCHOOL_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SCHOOL_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//SCHOOL REGISTER\r\nexport const registerSchool = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SCHOOL_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SCHOOL_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //SCHOOL UPDATE\r\nexport const updateSchool = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SCHOOL_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SCHOOL_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    SESSION_GET_ONE,\r\n    SESSION_GET_MULTIPLE,\r\n    SESSION_REGISTER_SUCCESS,\r\n    SESSION_REGISTER_FAIL,\r\n    SESSION_LOADING,\r\n    SESSION_LOADING_ERROR,\r\n    SESSION_UPDATE_SUCCESS,\r\n    SESSION_UPDATE_FAIL,\r\n    SESSION_DELETE_SUCCESS,\r\n    SESSION_DELETE_FAIL\r\n} from \"./../../types/setting/session\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'sessions';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL SESSION \r\nexport const getSessions = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : SESSION_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SESSION_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SESSION_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE SESSION \r\nexport const getSession = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : SESSION_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//SESSION DELETE\r\nexport const deleteSession = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//SESSION REGISTER\r\nexport const registerSession = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //SESSION UPDATE\r\nexport const updateSession = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STUDENTCLASS_GET_ONE,\r\n    STUDENTCLASS_GET_MULTIPLE,\r\n    STUDENTCLASS_GET_SUMMARY,\r\n    STUDENTCLASS_REGISTER_SUCCESS,\r\n    STUDENTCLASS_REGISTER_FAIL,\r\n    STUDENTCLASS_LOADING,\r\n    STUDENTCLASS_LOADING_ERROR,\r\n    STUDENTCLASS_UPDATE_SUCCESS,\r\n    STUDENTCLASS_UPDATE_FAIL,\r\n    STUDENTCLASS_DELETE_SUCCESS,\r\n    STUDENTCLASS_DELETE_FAIL\r\n} from \"./../../types/student/studentclass\";\r\n\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL STUDENTCLASS \r\nexport const getStudentclasss = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTCLASS_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTCLASS_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTCLASS_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET ALL STUDENTCLASS \r\nexport const getStudentclassSummary = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTCLASS_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTCLASS_GET_SUMMARY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTCLASS_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STUDENTCLASS \r\nexport const getStudentclass = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENTCLASS_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STUDENTCLASS DELETE\r\nexport const deleteStudentclass = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTCLASS_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTCLASS_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENTCLASS REGISTER\r\nexport const registerStudentclass = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTCLASS_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTCLASS_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STUDENTCLASS UPDATE\r\nexport const updateStudentclass = (data) => (dispatch, getState) => {\r\n    //body\r\n    console.log(data)\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTCLASS_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTCLASS_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport moment from 'moment';\r\nimport { CCard, CCardBody, CCardHeader, CCol, CRow, CDropdown, CDropdownToggle, CDropdownMenu, CDropdownItem, CDropdownDivider, CContainer, CCardFooter } from '@coreui/react';\r\nimport { getStudent } from './../../actions/student/student';\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\n\r\nconst User = (props, {match}) => {\r\n  const {\r\n    id,\r\n    title,\r\n    employment_no,\r\n    firstname,\r\n    surname,\r\n    middlename,\r\n    dob,\r\n    doa,\r\n    dol,\r\n    lga,\r\n    soo,\r\n    photo,\r\n    house,\r\n    place,\r\n    nationality,\r\n    schoolname,\r\n    gender,\r\n    reason,\r\n    is_active,\r\n    g1_name,\r\n    g2_name,\r\n    g1_phone1,\r\n    g1_phone2,\r\n    g2_phone1,\r\n    g2_phone2,\r\n    g1_email,\r\n    g2_email,\r\n    g1_address,\r\n    g2_address,\r\n    g1_rel,\r\n    g2_rel\r\n    } = props.student || {};\r\n\r\n  return (\r\n    <>\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <CCardBody>\r\n              <CRow>\r\n                <CCol className='text-center' xs={12} sm={6} md={3}>\r\n                  <img\r\n                    height='250px'\r\n                    width='200px'\r\n                    style={{width:'220px', height:'250px'}}\r\n                    src={process.env.REACT_APP_SERVER_URL+ photo} \r\n                    alt={surname}\r\n                    onError={(e)=>{e.target.onerror=null; e.target.src='icons/profile_1.png'} }\r\n                  />\r\n                </CCol >\r\n                <CCol className='text-center' xs={12} sm={6} md={9}>\r\n                  <CRow xs={12}>\r\n                  <CCol xs={12}>\r\n                    <CContainer className=\"table  table-hover text-left\">\r\n                      <CRow><CCol>\r\n                        <CRow className='p-2'><CCol xs={4}><i className='fa fa-user-circle'></i> Fullname</CCol><CCol><strong style={{textTransform:'capitalize'}}>{`${surname} ${firstname} ${middlename}`}</strong></CCol></CRow>\r\n                        <CRow className='p-2'><CCol xs={4}><i className='fa fa-calendar-o'></i> Date of Birth</CCol><CCol><strong>{`${moment(dob).format('MMM DD, YYYY') !== 'Invalid date'? moment(dob).format('MMM DD, YYYY'):'--.--.--' }`}</strong></CCol></CRow>\r\n                        <CRow className='p-2'><CCol xs={4}><i className='fa fa-street-view'></i> Gender</CCol><CCol><strong style={{textTransform:'capitalize'}}>{`${gender}`}</strong></CCol></CRow>\r\n                        <CRow className='p-2'><CCol xs={4}><i className='fa fa-map'></i> Origin</CCol><CCol><strong style={{textTransform:'capitalize'}}>{`${lga} ${soo} ${nationality}`}</strong></CCol></CRow>\r\n                        <CRow className='p-2'><CCol xs={4}><i className='fa fa-phone'></i> Date Admitted</CCol><CCol><strong>{`${moment(doa).format('MMM DD, YYYY') !== 'Invalid date'? moment(doa).format('MMM DD, YYYY'):'--.--.--' }`}</strong></CCol></CRow>\r\n                        <CRow className='p-2'><CCol xs={4}><i className='fa fa-pied-piper-alt'></i> Status</CCol><CCol>{parseInt(is_active) === 0 ? <strong className='text-success'>IN ACTIVE SERVICE</strong> : <strong className='text-danger'>{`${reason} ${moment(dol).format('MMM DD, YYYY')}`}</strong>}</CCol></CRow> \r\n                        <CRow className='p-2'><CCol xs={4}><i className='fa fa-university'></i> School</CCol><CCol>{schoolname}</CCol></CRow> \r\n                        <CRow className='p-2' style={{backgroundColor:house, color:'black'}}><CCol xs={4}><i className='fa fa-university'></i> House</CCol><CCol >{house}</CCol></CRow> \r\n                        <CRow className='p-2'><CCol xs={4}><i className='fa fa-university'></i> Main Sponsor</CCol><CCol>{place}</CCol></CRow> \r\n                        </CCol></CRow>\r\n                    </CContainer>\r\n                </CCol>\r\n                </CRow>\r\n               </CCol>\r\n              </CRow>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n    <CRow>\r\n      <CCol md={6} sm={6}>\r\n        <CCard  className='bg-dark'>\r\n          <CCardHeader>\r\n            <strong><i className='fa fa-users'></i> Primary Care Giver</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n              <CContainer>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CRow xs={12}><CCol xs={2}><i className='fa fa-user'></i> </CCol><CCol>{g1_name}</CCol></CRow>\r\n                    <CRow xs={12}><CCol xs={2}><i className='fa fa-cubes'></i> </CCol><CCol>{g1_rel}</CCol></CRow>\r\n                    <CRow xs={12}><CCol xs={2}><i className='fa fa-phone'></i> </CCol><CCol>{g1_phone1} {g1_phone2}</CCol></CRow>\r\n                    <CRow xs={12}><CCol xs={2}><i className='fa fa-envelope'></i> </CCol><CCol>{g1_email}</CCol></CRow>    \r\n                    <CRow xs={12}><CCol xs={2}><i className='fa fa-map-marker'></i> </CCol><CCol>{g1_address}</CCol></CRow>  \r\n                  </CCol>\r\n                  </CRow>\r\n               </CContainer> \r\n          </CCardBody>\r\n          \r\n        </CCard>\r\n      </CCol>\r\n      <CCol md={6} sm={6} >\r\n        <CCard className='bg-dark'>\r\n          <CCardHeader>\r\n            <strong><i className='fa fa-users'></i>  Secondary Care Giver</strong>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n              <CContainer>\r\n                  <CCol md={6} sm={12}>\r\n                    <CRow xs={12}><CCol xs={2}><i className='fa fa-user'></i> </CCol><CCol>{g2_name}</CCol></CRow>\r\n                    <CRow xs={12}><CCol xs={2}><i className='fa fa-cubes'></i> </CCol><CCol>{g2_rel}</CCol></CRow>\r\n                    <CRow xs={12}><CCol xs={2}><i className='fa fa-phone'></i> </CCol><CCol>{g2_phone1} {g2_phone2}</CCol></CRow>\r\n                    <CRow xs={12}><CCol xs={2}><i className='fa fa-envelope'></i> </CCol><CCol>{g2_email}</CCol></CRow>    \r\n                    <CRow xs={12}><CCol xs={2}><i className='fa fa-map-marker'></i> </CCol><CCol>{g2_address}</CCol></CRow>  \r\n                  </CCol>\r\n              </CContainer>\r\n          </CCardBody>\r\n          \r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default User\r\n"],"sourceRoot":""}