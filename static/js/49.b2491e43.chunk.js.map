{"version":3,"sources":["views/setting/Term.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/setting/term.js"],"names":["connect","state","terms","termReducer","sessions","sessionReducer","getTerms","getTerm","registerTerm","updateTerm","deleteTerm","props","term","useParams","history","useHistory","useLocation","search","match","useState","collapse","setCollapse","id","setId","name","setNamez","starts","setStarts","ends","setEnds","useEffect","params","data","JSON","stringify","cat","table","narration","onReset","rw","dt","onClose","tabl","Array","isArray","filter","undefined","map","row","ind","key","className","moment","started","format","ended","color","size","onClick","item","push","sm","data-target","data-toggle","e","preventDefault","show","xl","parseInt","action","method","htmlFor","type","defaultValue","onChange","target","value","placeholder","length","fd","FormData","append","_slicedToArray","arr","i","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","err","unsupportedIterableToArray","TypeError","path","API_PATH_SETTING","dispatch","getState","token","MAIN_TOKEN","TERM_LOADING","axios","get","axiosConfig","then","res","TERM_GET_MULTIPLE","payload","catch","TERM_LOADING_ERROR","TERM_GET_ONE","POST","TERM_DELETE_SUCCESS","TERM_DELETE_FAIL","post","axiosConfig1","TERM_REGISTER_SUCCESS","TERM_REGISTER_FAIL","setActiveTerm","TERM_UPDATE_FAIL","TERM_UPDATE_SUCCESS"],"mappings":"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","file":"static/js/49.b2491e43.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from \"react-router-dom\"\r\nimport  moment from 'moment';\r\nimport {getTerms, getTerm, registerTerm, updateTerm, deleteTerm} from './../../actions/setting/term';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CCollapse,\r\n  CFormText,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n  CDropdownToggle,\r\n  CDropdownMenu\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Term = (props) => {\r\n  const term = useParams().term\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [name, setNamez] = useState('')\r\n  const [starts, setStarts] = useState()\r\n  const [ends, setEnds] = useState()\r\n  const [cat, setcat] = useState()\r\n\r\n  const toggle = (e) => {\r\n    setCollapse(!collapse)\r\n    e.preventDefault()\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'sessionid':term\r\n      }),\r\n      cat:'select',\r\n      table:'terms',\r\n      narration:'get terms'\r\n\r\n  }\r\n    props.getTerms(params)\r\n  }, [])\r\n\r\n  const onEdit = (rw, dt) =>{\r\n      setId(rw);\r\n      setNamez(dt.name);\r\n      setStarts(dt.started);\r\n      setEnds(dt.ended);\r\n      setCollapse(true);\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onReset = (rw, dt) =>{\r\n      setId(null);\r\n      setNamez('');\r\n      setStarts('');\r\n      setEnds('');\r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n\r\n  const handleSubmit = () =>{\r\n    if(name.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', name);\r\n      fd.append('started', starts);\r\n      fd.append('ended', ends);\r\n      fd.append('table', 'terms');\r\n\r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateTerm(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('sessionid', term.term);\r\n        fd.append('cat', 'insert');\r\n        props.registerTerm(fd)\r\n      }\r\n      onReset()\r\n      onClose()\r\n    }\r\n  }\r\n \r\n  let data = props.terms.terms && Array.isArray(props.terms.terms) ? props.terms.terms.filter(rw =>rw != 'null' || rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw =>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{moment(row.started).format('MMM D, YYYY')}</td>\r\n                <td className='text-center'>{moment(row.ended).format('MMM D, YYYY')}</td>\r\n                <td className='text-center'>\r\n                <CDropdown className=\"m-0 btn-group \">\r\n                  <CDropdownToggle color=\"success\" size=\"sm\">\r\n                  <i className='fa fa-gear'></i> Action\r\n                  </CDropdownToggle>\r\n                  <CDropdownMenu>\r\n                  <CDropdownItem><b>Assessment</b></CDropdownItem>\r\n                    <CDropdownItem\r\n                      onClick={(item) => history.push(`/sessions/${term}/a/${row.id}`)}\r\n                     >Academic</CDropdownItem>\r\n                     <CDropdownItem\r\n                      onClick={(item) => history.push(`/sessions/${term}/b/${row.id}`)}\r\n                     >Behavioral</CDropdownItem>\r\n                     <CDropdownItem\r\n                      onClick={(item) => history.push(`/sessions/${term}/s/${row.id}`)}\r\n                     >Skills</CDropdownItem>\r\n                     <CDropdownDivider />\r\n                     <CDropdownItem><b>Allocation</b></CDropdownItem>\r\n                     <CDropdownItem\r\n                      onClick={(item) => history.push(`/termclass/${row.id}`)}\r\n                     >Class</CDropdownItem>\r\n                     <CDropdownItem\r\n                      onClick={(item) => history.push(`/termsubject/${row.id}`)}\r\n                     >Subject</CDropdownItem>\r\n                     <CDropdownDivider />\r\n                    <CDropdownItem><b>Actions</b></CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onEdit(row.id, row)} >Edit</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onDelete(row.id, row)}>Delete</CDropdownItem> \r\n                  </CDropdownMenu>\r\n                </CDropdown>\r\n                </td>\r\n              </tr>\r\n  })\r\n  return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">Terms</h4>\r\n              <div className=\"small text-muted\">Academic Calendar</div>\r\n            </CCol>\r\n            <CCol sm=\"7\" className=\"d-md-block\">\r\n              <CButton \r\n                  data-target='#formz' \r\n                  data-toggle=\"collapse\" \r\n                  color=\"primary\" \r\n                  onClick={toggle}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-plus'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Term</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-calendar'></i> Start</th>\r\n                    <th className=\"text-center\"><i className='fa fa-calendar'></i> End</th>\r\n                    <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n        <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Term</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-name\">Term</CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-name\" \r\n                      name=\"name\"\r\n                      defaultValue={name}\r\n                      onChange={(e)=>setNamez(e.target.value)}\r\n                      placeholder=\"First, Second or Third\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Please enter term</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-starts\">Term Starts </CLabel>\r\n                  <CInput \r\n                      type=\"date\" \r\n                      id=\"nf-starts\" \r\n                      name=\"starts\"\r\n                      defaultValue={starts}\r\n                      onChange={(e)=>setStarts(e.target.value)}\r\n                      placeholder=\"date\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Please enter date term starts</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-ends\">Term ends </CLabel>\r\n                  <CInput \r\n                      type=\"date\" \r\n                      id=\"nf-ends\" \r\n                      name=\"ends\"\r\n                      defaultValue={ends}\r\n                      onChange={(e)=>setEnds(e.target.value)}\r\n                      placeholder=\"date\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Please enter date term ends</CFormText>\r\n                </CFormGroup>\r\n              </CForm>\r\n            </CCardBody>\r\n            \r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n      </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  terms : state.termReducer,\r\n  sessions : state.sessionReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getTerms,\r\n  getTerm,\r\n  registerTerm,\r\n  updateTerm,\r\n  deleteTerm\r\n})(Term)\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    TERM_GET_ONE,\r\n    TERM_GET_MULTIPLE,\r\n    TERM_REGISTER_SUCCESS,\r\n    TERM_REGISTER_FAIL,\r\n    TERM_ACTIVE_SUCCESS,\r\n    TERM_ACTIVE_FAIL,\r\n    TERM_LOADING,\r\n    TERM_LOADING_ERROR,\r\n    TERM_UPDATE_SUCCESS,\r\n    TERM_UPDATE_FAIL,\r\n    TERM_DELETE_SUCCESS,\r\n    TERM_DELETE_FAIL\r\n} from \"../../types/setting/term\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'terms';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL TERM \r\nexport const getTerms = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : TERM_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: TERM_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : TERM_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE TERM \r\nexport const getTerm = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : TERM_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//TERM DELETE\r\nexport const deleteTerm = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: TERM_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : TERM_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//TERM REGISTER\r\nexport const registerTerm = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: TERM_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : TERM_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n\r\n//TERM REGISTER\r\nexport const setActiveTerm = data => dispatch => {\r\n     //body\r\n     axios.post(path, data, axiosConfig1)\r\n     .then(res => {\r\n         dispatch({\r\n             type: TERM_GET_MULTIPLE,\r\n             payload: res.data.data\r\n         })\r\n     })\r\n     .catch(err => {\r\n         dispatch({\r\n             type : TERM_UPDATE_FAIL,\r\n             payload: err\r\n         })\r\n     })\r\n};\r\n //TERM UPDATE\r\nexport const updateTerm = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: TERM_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : TERM_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n"],"sourceRoot":""}