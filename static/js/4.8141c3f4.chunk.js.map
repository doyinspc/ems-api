{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/staff/staff.js","actions/setting/school.js","actions/setting/session.js","actions/setting/department.js","actions/setting/level.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","actions/setting/designation.js","actions/setting/penmanager.js","views/staff/StaffAdd.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","path","API_PATH_STAFF","getStaffs","params","dispatch","getState","token","MAIN_TOKEN","table","type","STAFF_LOADING","axios","get","axiosConfig","then","res","STAFF_GET_MULTIPLE","payload","data","catch","STAFF_LOADING_ERROR","getStaffAll","STAFF_GET_ALL","searchStaff","STAFF_GET_SEARCH","birthday","STAFF_GET_BIRTHDAY","getStaff","id","STAFF_GET_ONE","deleteStaff","POST","STAFF_DELETE_SUCCESS","STAFF_DELETE_FAIL","registerStaff","post","axiosConfig1","STAFF_REGISTER_SUCCESS","STAFF_REGISTER_FAIL","updateStaff","STAFF_UPDATE_SUCCESS","STAFF_UPDATE_FAIL","TABLE_NAME","API_PATH_SETTING","getSchools","SCHOOL_LOADING","SCHOOL_GET_MULTIPLE","SCHOOL_LOADING_ERROR","getSchool","SCHOOL_GET_ONE","deleteSchool","SCHOOL_DELETE_SUCCESS","SCHOOL_DELETE_FAIL","registerSchool","SCHOOL_REGISTER_SUCCESS","SCHOOL_REGISTER_FAIL","updateSchool","SCHOOL_UPDATE_SUCCESS","SCHOOL_UPDATE_FAIL","getSessions","SESSION_LOADING","SESSION_GET_MULTIPLE","SESSION_LOADING_ERROR","getSession","SESSION_GET_ONE","deleteSession","SESSION_DELETE_SUCCESS","SESSION_DELETE_FAIL","registerSession","SESSION_REGISTER_SUCCESS","SESSION_REGISTER_FAIL","updateSession","SESSION_UPDATE_SUCCESS","SESSION_UPDATE_FAIL","getDepartments","DEPARTMENT_LOADING","DEPARTMENT_GET_MULTIPLE","DEPARTMENT_LOADING_ERROR","getDepartment","DEPARTMENT_GET_ONE","deleteDepartment","DEPARTMENT_DELETE_SUCCESS","DEPARTMENT_DELETE_FAIL","registerDepartment","DEPARTMENT_REGISTER_SUCCESS","DEPARTMENT_REGISTER_FAIL","updateDepartment","DEPARTMENT_UPDATE_SUCCESS","DEPARTMENT_UPDATE_FAIL","getLevels","LEVEL_LOADING","LEVEL_GET_MULTIPLE","LEVEL_LOADING_ERROR","getLevel","LEVEL_GET_ONE","deleteLevel","LEVEL_DELETE_SUCCESS","LEVEL_DELETE_FAIL","registerLevel","LEVEL_REGISTER_SUCCESS","LEVEL_REGISTER_FAIL","updateLevel","LEVEL_UPDATE_SUCCESS","LEVEL_UPDATE_FAIL","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","connect","state","staffs","staffReducer","sessions","sessionReducer","offices","officeReducer","departments","departmentReducer","designations","designationReducer","levels","levelReducer","penmanagers","penmanagerReducer","schools","schoolReducer","user","userReducer","getDesignations","DESIGNATION_LOADING","DESIGNATION_GET_MULTIPLE","DESIGNATION_LOADING_ERROR","getPenmanagers","PENMANAGER_LOADING","PENMANAGER_GET_MULTIPLE","PENMANAGER_LOADING_ERROR","updateUser","props","useHistory","useState","setId","title","setTitle","surname","setSurname","firstname","setFirstname","middlename","setMiddlename","gender","setGender","dob","setDob","religion","setReligion","nationality","setNationality","soo","setSoo","lga","setLga","phone1","setPhone1","phone2","setPhone2","email","setEmail","address","setAddress","tin","setTin","nin","setNin","pen","setPen","penmanagerid","setPenmanagerid","employment","setEmployment","schoolid","setSchoolid","doe","setDoe","levelid","setLevelid","departmentid","setDepartmentid","photo","setPhoto","links","setLinks","kin1_name","setKin1_name","kin1_rel","setKin1_rel","kin1_phone1","setKin1_phone1","kin1_phone2","setKin1_phone2","kin1_email","setKin1_email","kin1_address","setKin1_address","kin2_name","setKin2_name","kin2_rel","setKin2_rel","kin2_phone1","setKin2_phone1","kin2_phone2","setKin2_phone2","kin2_email","setKin2_email","kin2_address","setKin2_address","dol","setDol","reason","setReason","setIs_active","npassword","setNpassword","rpassword","setRpassword","useEffect","editi","editid","lod","setElement","employment_no","designationid","is_active","a","params2","JSON","stringify","cat","narration","params2a","parseInt","ref","staff","to","scarray","mySchoolData","filter","rw","map","ind","name","deparray","levarray","penarray","allpensions","starray","states","lgar","lgarray","lgas","rw1","relarray","keys","allrelationsx","xs","sm","htmlFor","className","custom","defaultValue","aria-required","placeholder","onChange","e","target","required","disabled","size","color","onClick","fd","FormData","append","personal","md","console","log","src","process","width","height","alt","onError","onerror","files","variant"],"mappings":"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","file":"static/js/4.8141c3f4.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    STAFF_GET_ONE,\r\n    STAFF_GET_MULTIPLE,\r\n    STAFF_GET_ALL,\r\n    STAFF_GET_BIRTHDAY,\r\n    STAFF_GET_SEARCH,\r\n    STAFF_REGISTER_SUCCESS,\r\n    STAFF_REGISTER_FAIL,\r\n    STAFF_LOADING,\r\n    STAFF_LOADING_ERROR,\r\n    STAFF_UPDATE_SUCCESS,\r\n    STAFF_UPDATE_FAIL,\r\n    STAFF_DELETE_SUCCESS,\r\n    STAFF_DELETE_FAIL\r\n} from \"./../../types/staff/staff\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'staffs';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFF \r\nexport const getStaffs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STAFF \r\nexport const getStaffAll = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                      \r\n                dispatch({\r\n                    type: STAFF_GET_ALL,\r\n                    payload: res.data\r\n                 })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                   type : STAFF_LOADING_ERROR,\r\n                   payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const searchStaff = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_SEARCH,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const birthday = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_BIRTHDAY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET SINGLE STAFF \r\nexport const getStaff = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFF_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFF DELETE\r\nexport const deleteStaff = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFF REGISTER\r\nexport const registerStaff = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFF UPDATE\r\nexport const updateStaff = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    SCHOOL_GET_ONE,\r\n    SCHOOL_GET_MULTIPLE,\r\n    SCHOOL_GET_DROPDOWNS,\r\n    SCHOOL_REGISTER_SUCCESS,\r\n    SCHOOL_REGISTER_FAIL,\r\n    SCHOOL_LOADING,\r\n    SCHOOL_LOADING_ERROR,\r\n    SCHOOL_UPDATE_SUCCESS,\r\n    SCHOOL_UPDATE_FAIL,\r\n    SCHOOL_DELETE_SUCCESS,\r\n    SCHOOL_DELETE_FAIL\r\n} from \"../../types/setting/school\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'schools';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL SCHOOL \r\nexport const getSchools = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : SCHOOL_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SCHOOL_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SCHOOL_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL SCHOOL \r\nexport const getSchooldropdowns = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : SCHOOL_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SCHOOL_GET_DROPDOWNS,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SCHOOL_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE SCHOOL \r\nexport const getSchool = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : SCHOOL_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//SCHOOL DELETE\r\nexport const deleteSchool = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SCHOOL_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SCHOOL_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//SCHOOL REGISTER\r\nexport const registerSchool = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SCHOOL_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SCHOOL_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //SCHOOL UPDATE\r\nexport const updateSchool = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SCHOOL_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SCHOOL_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    SESSION_GET_ONE,\r\n    SESSION_GET_MULTIPLE,\r\n    SESSION_REGISTER_SUCCESS,\r\n    SESSION_REGISTER_FAIL,\r\n    SESSION_LOADING,\r\n    SESSION_LOADING_ERROR,\r\n    SESSION_UPDATE_SUCCESS,\r\n    SESSION_UPDATE_FAIL,\r\n    SESSION_DELETE_SUCCESS,\r\n    SESSION_DELETE_FAIL\r\n} from \"./../../types/setting/session\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'sessions';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL SESSION \r\nexport const getSessions = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : SESSION_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SESSION_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SESSION_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE SESSION \r\nexport const getSession = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : SESSION_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//SESSION DELETE\r\nexport const deleteSession = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//SESSION REGISTER\r\nexport const registerSession = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //SESSION UPDATE\r\nexport const updateSession = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    DEPARTMENT_GET_ONE,\r\n    DEPARTMENT_GET_MULTIPLE,\r\n    DEPARTMENT_REGISTER_SUCCESS,\r\n    DEPARTMENT_REGISTER_FAIL,\r\n    DEPARTMENT_LOADING,\r\n    DEPARTMENT_LOADING_ERROR,\r\n    DEPARTMENT_UPDATE_SUCCESS,\r\n    DEPARTMENT_UPDATE_FAIL,\r\n    DEPARTMENT_DELETE_SUCCESS,\r\n    DEPARTMENT_DELETE_FAIL\r\n} from \"../../types/setting/department\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'departments';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL DEPARTMENT \r\nexport const getDepartments = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : DEPARTMENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: DEPARTMENT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : DEPARTMENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE DEPARTMENT \r\nexport const getDepartment = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : DEPARTMENT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//DEPARTMENT DELETE\r\nexport const deleteDepartment = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DEPARTMENT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : DEPARTMENT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//DEPARTMENT REGISTER\r\nexport const registerDepartment = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DEPARTMENT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : DEPARTMENT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //DEPARTMENT UPDATE\r\nexport const updateDepartment = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DEPARTMENT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : DEPARTMENT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    LEVEL_GET_ONE,\r\n    LEVEL_GET_MULTIPLE,\r\n    LEVEL_REGISTER_SUCCESS,\r\n    LEVEL_REGISTER_FAIL,\r\n    LEVEL_LOADING,\r\n    LEVEL_LOADING_ERROR,\r\n    LEVEL_UPDATE_SUCCESS,\r\n    LEVEL_UPDATE_FAIL,\r\n    LEVEL_DELETE_SUCCESS,\r\n    LEVEL_DELETE_FAIL\r\n} from \"../../types/setting/level\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'levels';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL LEVEL \r\nexport const getLevels = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : LEVEL_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: LEVEL_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : LEVEL_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE LEVEL \r\nexport const getLevel = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : LEVEL_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//LEVEL DELETE\r\nexport const deleteLevel = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LEVEL_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : LEVEL_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//LEVEL REGISTER\r\nexport const registerLevel = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LEVEL_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : LEVEL_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //LEVEL UPDATE\r\nexport const updateLevel = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LEVEL_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : LEVEL_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import axios from 'axios';\r\nimport {\r\n    DESIGNATION_GET_ONE,\r\n    DESIGNATION_GET_MULTIPLE,\r\n    DESIGNATION_REGISTER_SUCCESS,\r\n    DESIGNATION_REGISTER_FAIL,\r\n    DESIGNATION_LOADING,\r\n    DESIGNATION_LOADING_ERROR,\r\n    DESIGNATION_UPDATE_SUCCESS,\r\n    DESIGNATION_UPDATE_FAIL,\r\n    DESIGNATION_DELETE_SUCCESS,\r\n    DESIGNATION_DELETE_FAIL\r\n} from \"../../types/setting/designation\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'designations';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL DESIGNATION \r\nexport const getDesignations = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : DESIGNATION_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: DESIGNATION_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : DESIGNATION_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE DESIGNATION \r\nexport const getDesignation = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : DESIGNATION_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//DESIGNATION DELETE\r\nexport const deleteDesignation = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DESIGNATION_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : DESIGNATION_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//DESIGNATION REGISTER\r\nexport const registerDesignation = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DESIGNATION_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : DESIGNATION_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //DESIGNATION UPDATE\r\nexport const updateDesignation = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: DESIGNATION_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : DESIGNATION_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    PENMANAGER_GET_ONE,\r\n    PENMANAGER_GET_MULTIPLE,\r\n    PENMANAGER_REGISTER_SUCCESS,\r\n    PENMANAGER_REGISTER_FAIL,\r\n    PENMANAGER_LOADING,\r\n    PENMANAGER_LOADING_ERROR,\r\n    PENMANAGER_UPDATE_SUCCESS,\r\n    PENMANAGER_UPDATE_FAIL,\r\n    PENMANAGER_DELETE_SUCCESS,\r\n    PENMANAGER_DELETE_FAIL\r\n} from \"../../types/setting/penmanager\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'penmanagers';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL PENMANAGER \r\nexport const getPenmanagers = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : PENMANAGER_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: PENMANAGER_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : PENMANAGER_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE PENMANAGER \r\nexport const getPenmanager = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : PENMANAGER_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//PENMANAGER DELETE\r\nexport const deletePenmanager = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: PENMANAGER_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : PENMANAGER_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//PENMANAGER REGISTER\r\nexport const registerPenmanager = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: PENMANAGER_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : PENMANAGER_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //PENMANAGER UPDATE\r\nexport const updatePenmanager = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: PENMANAGER_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : PENMANAGER_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React , { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getStaffs, getStaff, registerStaff, updateStaff, deleteStaff } from './../../actions/staff/staff';\r\nimport { updateUser } from './../../actions/user';\r\nimport { getSessions } from './../../actions/setting/session';\r\nimport { getSchools } from './../../actions/setting/school';\r\nimport { getLevels } from './../../actions/setting/level';\r\nimport { getDesignations } from './../../actions/setting/designation';\r\nimport { getPenmanagers } from './../../actions/setting/penmanager';\r\nimport { getDepartments } from './../../actions/setting/department';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CCardHeader,\r\n  CCard,\r\n  CCardBody,\r\n  CTextarea,\r\n  CButton,\r\n  CFormGroup,\r\n  CInput,\r\n  CSelect,\r\n  CLabel,\r\n  CCardFooter,\r\n  CInputFile,\r\n  CButtonGroup,\r\n  CAlert,\r\n  CProgress\r\n\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { allrelationsx,  setElement, states, allpensions } from '../../actions/common';\r\n\r\nconst Staffs = (props) => {\r\n    const history = useHistory()\r\n    const [id, setId] = useState(null)\r\n    const [title, setTitle] = useState(null)\r\n    const [surname, setSurname] = useState('')\r\n    const [firstname, setFirstname] = useState('')\r\n    const [middlename, setMiddlename] = useState('')\r\n    const [gender, setGender] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [religion, setReligion] = useState('')\r\n    const [nationality, setNationality] = useState('')\r\n    const [soo, setSoo] = useState('')\r\n    const [lga, setLga] = useState('')\r\n    const [phone1, setPhone1] = useState('')\r\n    const [phone2, setPhone2] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [tin, setTin] = useState('')\r\n    const [nin, setNin] = useState('')\r\n    const [pen, setPen] = useState('')\r\n    const [penmanagerid, setPenmanagerid] = useState('')\r\n    const [employment, setEmployment] = useState('')\r\n    const [schoolid, setSchoolid] = useState('')\r\n    const [doe, setDoe] = useState('')\r\n    const [officeid, setOfficeid] = useState('')\r\n    const [levelid, setLevelid] = useState('')\r\n    const [departmentid, setDepartmentid] = useState('')\r\n    const [designationid, setDesignationid] = useState('')\r\n\r\n    const [photo, setPhoto] = useState('')\r\n    const [links, setLinks] = useState('')\r\n\r\n    const [kin1_name, setKin1_name] = useState('')\r\n    const [kin1_rel, setKin1_rel] = useState('')\r\n    const [kin1_phone1, setKin1_phone1] = useState('')\r\n    const [kin1_phone2, setKin1_phone2] = useState('')\r\n    const [kin1_email, setKin1_email] = useState('')\r\n    const [kin1_address, setKin1_address] = useState('')\r\n    const [kin2_name, setKin2_name] = useState('')\r\n    const [kin2_rel, setKin2_rel] = useState('')\r\n    const [kin2_phone1, setKin2_phone1] = useState('')\r\n    const [kin2_phone2, setKin2_phone2] = useState('')\r\n    const [kin2_email, setKin2_email] = useState('')\r\n    const [kin2_address, setKin2_address] = useState('')\r\n    //const [kin2_photo, setKin2_photo] = useState('')\r\n    //EXIT PLAN\r\n    const [dol, setDol] = useState('')\r\n    const [reason, setReason] = useState('')\r\n    const [is_active, setIs_active] = useState(0)\r\n\r\n    //EDUCATION\r\n    const [npassword, setNpassword] = useState('')\r\n    const [rpassword, setRpassword] = useState('')\r\n    const [pension, setPension] = useState([]) \r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        let data = props.data; \r\n        let editi = props.editid;\r\n        if(editi === 2)\r\n        {\r\n          setId(data.id)\r\n          setTitle(data.title)\r\n          setSurname(data.surname)\r\n          setFirstname(data.firstname)\r\n          setMiddlename(data.middlename)\r\n          setDob(data.dob)\r\n          setGender(data.gender)\r\n          setReligion(data.religion)\r\n          \r\n          \r\n          setPhone1(data.phone1)\r\n          setPhone2(data.phone2)\r\n          setEmail(data.email)\r\n          setAddress(data.address)\r\n          setNationality(data.nationality)\r\n          setTin(data.tin)\r\n          setNin(data.nin)\r\n          setPen(data.pen)\r\n          setPenmanagerid(data.penmanagerid)\r\n          lod(data.soo)\r\n  \r\n          setElement('religion', data.religion )\r\n          setElement('gender', data.gender )\r\n          setElement('soo', data.soo )\r\n          setElement('lga', data.lga )\r\n          setElement('penmanager', data.penmanagerid )\r\n  \r\n        }\r\n        else if(editi === 1)\r\n        {\r\n          setId(data.id)\r\n          setTitle(data.title)\r\n          setSurname(data.surname)\r\n          setFirstname(data.firstname)\r\n          setMiddlename(data.middlename)\r\n          setEmployment(data.employment_no)\r\n          setSchoolid(data.schoolid)\r\n          setDepartmentid(data.departmentid)\r\n          setLevelid(data.designationid)\r\n          setDoe(data.doe)\r\n          setPhone1(data.phone1)\r\n          setPhone2(data.phone2)\r\n          setEmail(data.email)\r\n  \r\n          setElement('school', data.schoolid )\r\n          setElement('department', data.departmentid )\r\n          setElement('level', data.designationid )\r\n        }\r\n        else if(editi === 3)\r\n        {\r\n          setId(data.id)\r\n  \r\n          setKin1_name(data.kin1_name)\r\n          setKin1_address(data.kin1_address)\r\n          setKin1_rel(data.kin1_rel)\r\n          setKin1_phone1(data.kin1_phone1)\r\n          setKin1_phone2(data.kin1_phone2)\r\n          setKin1_email(data.kin1_email)\r\n          setKin2_name(data.kin2_name)\r\n          setKin2_address(data.kin2_address)\r\n          setKin2_rel(data.kin2_rel)\r\n          setKin2_phone1(data.kin2_phone1)\r\n          setKin2_phone2(data.kin2_phone2)\r\n          setKin2_email(data.kin2_email)\r\n  \r\n        }\r\n        else if(editi === 4)\r\n        {\r\n          setId(data.id)\r\n          setLinks(data.photo)\r\n        }\r\n        else if(editi === 5)\r\n        {\r\n          setId(data.id)\r\n          setReason(data.reason)\r\n          setDol(data.reason)\r\n          setIs_active(data.is_active)\r\n        }\r\n      }, [props.data, props.editid])\r\n\r\n    const lod = async(data) =>{\r\n        await setSoo(data)\r\n        await setElement('soo', data )\r\n    }\r\n  \r\n    useEffect(() => {\r\n\r\n        let params2 = {\r\n          data:JSON.stringify({\r\n              'schoolid':schoolid\r\n          }),\r\n          cat:'select',\r\n          table:'offices',\r\n          narration:'get offices'\r\n      }\r\n        props.getLevels(params2)\r\n        let params2a = {\r\n          data:JSON.stringify({\r\n              'schoolid':schoolid\r\n          }),\r\n          cat:'select',\r\n          table:'levels',\r\n          narration:'get levels'\r\n      }\r\n        props.getDepartments(params2a)\r\n        \r\n      }, [schoolid])\r\n    \r\n    const handlePassword = () =>{ \r\n        if(npassword === rpassword)\r\n        {\r\n            let fd = new FormData();\r\n            fd.append('id', id);\r\n            fd.append('passwd', npassword);\r\n            fd.append('cat', 'update');\r\n            \r\n            if(props.personal)\r\n            {\r\n                fd.append('table', 'staffs');\r\n                props.updateUser(fd)\r\n            }else{\r\n                fd.append('table', 'staffs');\r\n                props.updateStaff(fd)\r\n            }\r\n        }\r\n\r\n    }\r\n    const handlePasswordAutomatic = () =>{  \r\n        if(props.data.email.length > 0)\r\n        {\r\n            let fd = new FormData();\r\n            fd.append('id', id);\r\n            fd.append('email', props.data.email);\r\n            fd.append('fname', props.data.surname+\" \"+props.data.firstname+\" \"+props.data.middlename);\r\n            fd.append('memp', props.data.employment_no);\r\n            fd.append('cat', 'updatepassword');\r\n            \r\n            if(props.personal)\r\n            {\r\n                fd.append('table', 'staffs');\r\n                props.updateUser(fd)\r\n            }else{\r\n                fd.append('table', 'staffs');\r\n                props.updateStaff(fd)\r\n            }\r\n    }\r\n\r\n    }\r\n    const handlePicture1 = () =>{  \r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('files', photo);\r\n        fd.append('cat', 'update');\r\n        \r\n\r\n        if(props.personal)\r\n        {\r\n            fd.append('table', 'staffs');\r\n            props.updateUser(fd)\r\n        }else{\r\n            fd.append('table', 'staffs');\r\n            props.updateStaff(fd)\r\n        }\r\n\r\n    }\r\n    const handleCare1 = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('kin1_name', kin1_name);\r\n        fd.append('kin1_rel', kin1_rel);\r\n        fd.append('kin1_phone1', kin1_phone1);\r\n        fd.append('kin1_phone2', kin1_phone2);\r\n        fd.append('kin1_email', kin1_email);\r\n        fd.append('kin1_address', kin1_address);\r\n        fd.append('cat', 'update');\r\n        fd.append('table', 'staffs');\r\n        if(props.personal)\r\n        {\r\n                props.updateUser(fd)\r\n        }else{\r\n                props.updateStaff(fd)\r\n        }\r\n        \r\n    }\r\n    const handleCare2 = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('kin2_name', kin2_name);\r\n        fd.append('kin2_rel', kin2_rel);\r\n        fd.append('kin2_phone1', kin2_phone1);\r\n        fd.append('kin2_phone2', kin2_phone2);\r\n        fd.append('kin2_email', kin2_email);\r\n        fd.append('kin2_address', kin2_address);\r\n        fd.append('cat', 'update');\r\n        fd.append('table', 'staffs');\r\n        if(props.personal)\r\n        {\r\n            console.log(56)\r\n            props.updateUser(fd)\r\n        }else{\r\n            props.updateStaff(fd)\r\n        }\r\n        \r\n    }\r\n    const handleCare1Reset = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('kin1_name', '');\r\n        fd.append('kin1_rel', '');\r\n        fd.append('kin1_phone1', '');\r\n        fd.append('kin1_phone2', '');\r\n        fd.append('kin1_email', '');\r\n        fd.append('kin1_place', '');\r\n        fd.append('kin1_address', '');\r\n        fd.append('cat', 'update');\r\n        fd.append('table', 'staffs');\r\n        props.updateStaff(fd)\r\n        \r\n    }\r\n    const handleCare2Reset = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('kin2_name', '');\r\n        fd.append('kin2_rel', '');\r\n        fd.append('kin2_phone1', '');\r\n        fd.append('kin2_phone2', '');\r\n        fd.append('kin2_email', '');\r\n        fd.append('kin2_place', '');\r\n        fd.append('kin2_address', '');\r\n        fd.append('cat', 'update');\r\n        fd.append('table', 'staffs');\r\n        props.updateStaff(fd)\r\n        \r\n    }\r\n    const handleExit = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('reason', reason);\r\n        fd.append('dol', dol);\r\n        fd.append('is_delete', 1);\r\n        fd.append('is_active', 1);\r\n        fd.append('table', 'staffs');\r\n        props.updateStaff(fd)\r\n    }\r\n    const handleExitReset = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('reason', '');\r\n        fd.append('is_delete', 0);\r\n        fd.append('is_active', 0);\r\n        fd.append('table', 'staffs');\r\n        props.updateStaff(fd)\r\n    }\r\n    const handleSubmit = () =>{\r\n        let fd = new FormData();\r\n       // fd.append('title', title);\r\n       // fd.append('surname', surname);\r\n       // fd.append('firstname', firstname);\r\n       // fd.append('middlename', middlename);\r\n        fd.append('soo', soo);\r\n        fd.append('lga', lga);\r\n        fd.append('tin', tin);\r\n        fd.append('nin', nin);\r\n        fd.append('pen', pen);\r\n        fd.append('penmanagerid', penmanagerid);\r\n        fd.append('nationality', nationality);\r\n        fd.append('religion', religion);\r\n        fd.append('gender', gender);\r\n        fd.append('phone1', phone1);\r\n        fd.append('phone2', phone2);\r\n        fd.append('email', email);\r\n        fd.append('address', address);\r\n        fd.append('table', 'staffs');\r\n        \r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'update');\r\n            if(props.personal)\r\n            {\r\n                props.updateUser(fd)\r\n            }else{\r\n                props.updateStaff(fd)\r\n            }\r\n        }\r\n    }\r\n    const handleSubmitem = () =>{\r\n        let fd = new FormData();\r\n        fd.append('title', title);\r\n        fd.append('surname', surname);\r\n        fd.append('firstname', firstname);\r\n        fd.append('middlename', middlename);\r\n        fd.append('dob', dob);\r\n        fd.append('doe', doe);\r\n        fd.append('phone1', phone1);\r\n        fd.append('phone2', phone2);\r\n        fd.append('email', email);\r\n        fd.append('employment_no', employment);\r\n        fd.append('schoolid', schoolid);\r\n        fd.append('designationid', levelid);\r\n        fd.append('departmentid', departmentid);\r\n        fd.append('table', 'staffs');\r\n        \r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'update');\r\n            if(props.personal)\r\n            {\r\n                props.updateUser(fd)\r\n            }else{\r\n                props.updateStaff(fd)\r\n            }\r\n        }else\r\n        {\r\n            fd.append('cat', 'insert');\r\n            props.registerStaff(fd)\r\n        }\r\n    }\r\n    const changeSoo = (e) =>{\r\n        setSoo(e.target.value);\r\n    }\r\n    const changeImg = (e) =>{\r\n        setPhoto(e.target.files[0]);\r\n        setLinks(e.target.files[0]);\r\n    }\r\nif(parseInt(props.staffs.ref) > 0 && props.staffs.staff !== {})\r\n{\r\n   return <Redirect to={`/staffs/${props.staffs.ref}`} />\r\n\r\n}\r\nlet schoolarray = props.user.mySchoolData && Array.isArray(props.user.mySchoolData) ? props.user.mySchoolData : [];\r\nlet scarray = schoolarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.id}>{rw.name}</option>\r\n})\r\n\r\nlet sessionsarray = props.sessions && Array.isArray(props.sessions) ? props.sessions : [];\r\nlet searray = sessionsarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.id}>{rw.name}</option>\r\n})\r\n\r\nlet departmentsarray = props.departments && Array.isArray(props.departments) ? props.departments : [];\r\nlet deparray = departmentsarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.id}>{rw.name}</option>\r\n})\r\n\r\nlet levelsarray = props.levels && Array.isArray(props.levels) ? props.levels : [];\r\nlet levarray = levelsarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.id}>{rw.name}</option>\r\n})\r\n\r\nlet designationsarray = props.designations && Array.isArray(props.designations) ? props.designations : [];\r\nlet desarray = designationsarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.id}>{rw.name}</option>\r\n})\r\n\r\nlet penarray = allpensions && allpensions !== undefined && Array.isArray(allpensions)? allpensions.filter(rw=>rw !== null && rw !== undefined).map((rw, ind) =>{\r\n    return <option key={ind} value={rw}>{rw}</option>\r\n}): ''\r\n\r\nlet starray = states.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.state}>{rw.state}</option>\r\n})\r\n\r\nlet lgar = states.filter(rw=>rw !== null && rw.state === soo)\r\nlet lgarray = lgar.length > 0 ? lgar[0].lgas.map((rw1, ind) =>{\r\n    return <option key={ind} value={rw1}>{rw1}</option>\r\n}): '';\r\n\r\nlet relarray = Object.keys(allrelationsx).map((rw1, ind) =>{\r\n    return <option key={ind} value={rw1}>{rw1}</option>\r\n});\r\nconst setAlert = () =>{\r\n    return <CAlert\r\n    color=\"warning\"\r\n    show={true}\r\n    closeButton\r\n  >\r\n    I will be closed in 400 seconds!\r\n    <CProgress\r\n      striped\r\n      color=\"warning\"\r\n      value={400 * 10}\r\n      size=\"xs\"\r\n      className=\"mb-3\"\r\n    />\r\n  </CAlert>\r\n}\r\n  return (\r\n    <>\r\n  {props.editid === 2 ?\r\n    <CRow>\r\n    <CCol xs=\"12\" sm=\"12\">\r\n        <CCard>\r\n            <CCardBody>\r\n            <CRow>\r\n                <CCol xs=\"12\" sm='3'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"title\">Title<i className='text-danger'>*</i></CLabel>\r\n                    <CInput \r\n                        custom \r\n                        id=\"title\" \r\n                        defaultValue={title}\r\n                        aria-required \r\n                        placeholder=\"Pro. Dr. Mr. Mrs.\"\r\n                        onChange={(e)=>setTitle(e.target.value)} \r\n                        required\r\n                    />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='3'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"surname\">Surname<i className='text-danger'>*</i></CLabel>\r\n                    <CInput \r\n                        id=\"surname\" \r\n                        defaultValue={surname}\r\n                        disabled={true}\r\n                        aria-required \r\n                        placeholder=\"Enter Surname\"\r\n                        onChange={(e)=>setSurname(e.target.value)} \r\n                        required \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='3'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"firstname\">Firstname<i className='text-danger'>*</i></CLabel>\r\n                    <CInput \r\n                        id=\"firstname\" \r\n                        defaultValue={firstname}\r\n                        disabled={true}\r\n                        aria-required \r\n                        placeholder=\"Enter firstname\"\r\n                        onChange={(e)=>setFirstname(e.target.value)} \r\n                        required\r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='3'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"middlename\">Middlename</CLabel>\r\n                    <CInput \r\n                        id=\"middlename\" \r\n                        defaultValue={middlename}\r\n                        disabled={true}\r\n                        type='text'\r\n                        aria-required \r\n                        placeholder=\"Enter Middlename\"\r\n                        onChange={(e)=>setMiddlename(e.target.value)} \r\n                        required\r\n                    />\r\n                </CFormGroup>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"dob\">Date of Birth<i className='text-danger'>*</i></CLabel>\r\n                    <CInput \r\n                        id=\"dob\" \r\n                        defaultValue={dob}\r\n                        disabled={true}\r\n                        type='date'\r\n                        aria-required \r\n                        placeholder=\"Enter dob\"\r\n                        onChange={(e)=>setDob(e.target.value)} \r\n                        required \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"gender\">Gender<i className='text-danger'>*</i></CLabel>\r\n                    <CSelect \r\n                        custom \r\n                        id=\"gender\" \r\n                        defaultValue={gender}\r\n                        aria-required \r\n                        placeholder=\"Select gender\"\r\n                        onChange={(e)=>setGender(e.target.value)} \r\n                        required\r\n                    >\r\n                        <option value='Male'>Male</option>\r\n                        <option value='Female'>Female</option>\r\n                    </CSelect>\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                <CLabel htmlFor=\"religion\">Religion<i className='text-danger'>*</i></CLabel>\r\n                    <CSelect \r\n                        custom \r\n                        id=\"religion\" \r\n                        defaultValue={religion}\r\n                        aria-required \r\n                        placeholder=\"Select Religion\"\r\n                        onChange={(e)=>setReligion(e.target.value)} \r\n                        required\r\n                    >\r\n                        <option value='Christianity'>Christianity</option>\r\n                        <option value='Islam'>Islam</option>\r\n                    </CSelect>\r\n                </CFormGroup>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"dob\">Nationality<i className='text-danger'>*</i></CLabel>\r\n                    <CSelect \r\n                        custom \r\n                        id=\"nationality\" \r\n                        defaultValue={nationality}\r\n                        aria-required \r\n                        placeholder=\"Select Nationality\"\r\n                        onChange={(e)=>setNationality(e.target.value)} \r\n                        required\r\n                    >\r\n                        <option value='Nigerian'>Nigerian</option>\r\n                        <option value='Non-nigerian'>non-nigerian</option>\r\n                    </CSelect>\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"soo\">State of Origin<i className='text-danger'>*</i></CLabel>\r\n                    <CSelect \r\n                        custom \r\n                        id=\"soo\" \r\n                        value={soo}\r\n                        onChange={changeSoo} \r\n                    >\r\n                        {starray}\r\n                    </CSelect>\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                <CLabel htmlFor=\"lga\">LGA<i className='text-danger'>*</i></CLabel>\r\n                    <CSelect \r\n                        custom \r\n                        id=\"lga\" \r\n                        value={lga}\r\n                        aria-required \r\n                        placeholder=\"Select Lga\"\r\n                        onChange={(e)=>setLga(e.target.value)} \r\n                        required\r\n                    >\r\n                        {lgarray}\r\n                    </CSelect>\r\n                </CFormGroup>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"phone1\">Phone Number<i className='text-danger'>*</i></CLabel>\r\n                    <CInput \r\n                        id=\"phone1\" \r\n                        defaultValue={phone1}\r\n                        type='text'\r\n                        aria-required \r\n                        placeholder=\"0800000000\"\r\n                        onChange={(e)=>setPhone1(e.target.value)} \r\n                        required \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"phone2\">Alternative Phone Number</CLabel>\r\n                    <CInput \r\n                        id=\"phone2\" \r\n                        defaultValue={phone2}\r\n                        type='text'\r\n                        aria-required \r\n                        placeholder=\"0800000000\"\r\n                        onChange={(e)=>setPhone2(e.target.value)} \r\n                        required \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                <CLabel htmlFor=\"emails\">Email</CLabel>\r\n                <CInput \r\n                        id=\"emails\" \r\n                        defaultValue={email}\r\n                        type='email'\r\n                        aria-required \r\n                        placeholder=\"info@stresert.com\"\r\n                        onChange={(e)=>setEmail(e.target.value)} \r\n                        required \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow>\r\n                <CCol xs=\"12\" sm='12'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"address\">Address</CLabel>\r\n                    <CTextarea \r\n                        id=\"address\" \r\n                        defaultValue={address}\r\n                        type='text'\r\n                        aria-required \r\n                        placeholder=\"...\"\r\n                        onChange={(e)=>setAddress(e.target.value)} \r\n                        required \r\n                        ></CTextarea>\r\n                </CFormGroup>\r\n                </CCol>\r\n              </CRow>\r\n            <CRow>\r\n                <CCol xs=\"12\" sm='3'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"tin\">Tax Identification Number</CLabel>\r\n                    <CInput \r\n                        custom \r\n                        id=\"tin\" \r\n                        defaultValue={tin}\r\n                        aria-required \r\n                        placeholder=\"000000000000\"\r\n                        onChange={(e)=>setTin(e.target.value)} \r\n                        required\r\n                    />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='3'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"nin\">National Indentity Number</CLabel>\r\n                    <CInput \r\n                        id=\"nin\" \r\n                        defaultValue={nin}\r\n                        aria-required \r\n                        placeholder=\"Enter 11 digit number\"\r\n                        onChange={(e)=>setNin(e.target.value)} \r\n                        required \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='3'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"pen\">Pension Number<i className='text-danger'>*</i></CLabel>\r\n                    <CInput \r\n                        id=\"pen\" \r\n                        defaultValue={pen}\r\n                        aria-required \r\n                        placeholder=\"Enter number\"\r\n                        onChange={(e)=>setPen(e.target.value)} \r\n                        required\r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='3'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"penmanager\">Pension Manager<i className='text-danger'>*</i></CLabel>\r\n                    <CSelect \r\n                        id=\"penmanager\" \r\n                        defaultValue={penmanagerid}\r\n                        aria-required \r\n                        placeholder=\"Select Pension Manager\"\r\n                        onChange={(e)=>setPenmanagerid(e.target.value)} \r\n                        required\r\n                    >\r\n                        {penarray}\r\n                    </CSelect>\r\n                </CFormGroup>\r\n                </CCol>\r\n            </CRow>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n                <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={handleSubmit}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n        </CCard>\r\n        </CCol>\r\n    </CRow>\r\n    : ''\r\n  }\r\n  {props.editid === 1 || props.editid == null?\r\n    <CRow>\r\n    <CCol xs=\"12\" sm=\"12\">\r\n        <CCard>\r\n            <CCardBody>\r\n            <CRow>\r\n                <CCol xs=\"12\" sm='3'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"title\">Title<i className='text-danger'>*</i></CLabel>\r\n                    <CInput \r\n                        custom \r\n                        id=\"title\" \r\n                        defaultValue={title}\r\n                        aria-required \r\n                        placeholder=\"Pro. Dr. Mr. Mrs.\"\r\n                        onChange={(e)=>setTitle(e.target.value)} \r\n                        required\r\n                    />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='3'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"surname\">Surname<i className='text-danger'>*</i></CLabel>\r\n                    <CInput \r\n                        id=\"surname\" \r\n                        defaultValue={surname}\r\n                        aria-required \r\n                        placeholder=\"Enter Surname\"\r\n                        onChange={(e)=>setSurname(e.target.value)} \r\n                        required \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='3'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"firstname\">Firstname<i className='text-danger'>*</i></CLabel>\r\n                    <CInput \r\n                        id=\"firstname\" \r\n                        defaultValue={firstname}\r\n                        aria-required \r\n                        placeholder=\"Enter firstname\"\r\n                        onChange={(e)=>setFirstname(e.target.value)} \r\n                        required\r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='3'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"middlename\">Middlename</CLabel>\r\n                    <CInput \r\n                        id=\"middlename\" \r\n                        defaultValue={middlename}\r\n                        type='text'\r\n                        aria-required \r\n                        placeholder=\"Enter Middlename\"\r\n                        onChange={(e)=>setMiddlename(e.target.value)} \r\n                        required\r\n                    />\r\n                </CFormGroup>\r\n                </CCol>\r\n            </CRow>\r\n            \r\n            <CRow>\r\n                <CCol xs=\"12\" sm='4' >\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"employment\">Employment Number<i className='text-danger'>*</i></CLabel>\r\n                    <CInput \r\n                        id=\"employment\" \r\n                        defaultValue={employment}\r\n                        aria-required \r\n                        placeholder=\"Employment Number\"\r\n                        onChange={(e)=>setEmployment(e.target.value)} \r\n                        required \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n  <CLabel htmlFor=\"doe\">Date of Employment<i className='text-danger'>*</i></CLabel>\r\n                    <CInput \r\n                        id=\"doe\" \r\n                        defaultValue={doe}\r\n                        type='date'\r\n                        aria-required \r\n                        onChange={(e)=>setDoe(e.target.value)} \r\n                        required \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"dob\">Date of Birth<i className='text-danger'>*</i></CLabel>\r\n                    <CInput \r\n                        id=\"dob\" \r\n                        defaultValue={dob}\r\n                        type='date'\r\n                        aria-required \r\n                        placeholder=\"Enter dob\"\r\n                        onChange={(e)=>setDob(e.target.value)} \r\n                        required \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>           \r\n            </CRow>          \r\n            <CRow>\r\n            <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"School\">School<i className='text-danger'>*</i></CLabel>\r\n                    <CSelect \r\n                        id=\"school\" \r\n                        defaultValue={schoolid}\r\n                        aria-required \r\n                        placeholder=\"Enter School\"\r\n                        onChange={(e)=>setSchoolid(e.target.value)} \r\n                        required\r\n                    >\r\n                        <option></option>\r\n                        {scarray}\r\n                    </CSelect>\r\n                </CFormGroup>\r\n                </CCol>\r\n                \r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"department\">Department<i className='text-danger'>*</i></CLabel>\r\n                    <CSelect \r\n                        id=\"department\" \r\n                        defaultValue={departmentid}\r\n                        aria-required \r\n                        placeholder=\"Enter department\"\r\n                        onChange={(e)=>setDepartmentid(e.target.value)} \r\n                        required\r\n                    >\r\n                        <option></option>\r\n                        {deparray}\r\n                    </CSelect>\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"level\">Level<i className='text-danger'>*</i></CLabel>\r\n                    <CSelect \r\n                        id=\"level\" \r\n                        defaultValue={levelid}\r\n                        aria-required \r\n                        placeholder=\"Enter level\"\r\n                        onChange={(e)=>setLevelid(e.target.value)} \r\n                        required\r\n                    >\r\n                        <option></option>\r\n                        {levarray}\r\n                    </CSelect>\r\n                </CFormGroup>\r\n                </CCol>\r\n              </CRow>\r\n            \r\n            <CRow>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"phone1\">Phone Number<i className='text-danger'>*</i></CLabel>\r\n                    <CInput \r\n                        id=\"phone1\" \r\n                        defaultValue={phone1}\r\n                        type='text'\r\n                        aria-required \r\n                        placeholder=\"0800000000\"\r\n                        onChange={(e)=>setPhone1(e.target.value)} \r\n                        required \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"phone2\">Alternative Phone Number</CLabel>\r\n                    <CInput \r\n                        id=\"phone2\" \r\n                        defaultValue={phone2}\r\n                        type='text'\r\n                        aria-required \r\n                        placeholder=\"0800000000\"\r\n                        onChange={(e)=>setPhone2(e.target.value)} \r\n                        required \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm='4'>\r\n                <CFormGroup>\r\n                <CLabel htmlFor=\"emails\">Email</CLabel>\r\n                <CInput \r\n                        id=\"emails\" \r\n                        defaultValue={email}\r\n                        type='email'\r\n                        aria-required \r\n                        placeholder=\"info@stresert.com\"\r\n                        onChange={(e)=>setEmail(e.target.value)} \r\n                        required \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n            </CRow>\r\n            \r\n            </CCardBody>\r\n            <CCardFooter>\r\n                <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={handleSubmitem}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n        </CCard>\r\n        </CCol>\r\n    </CRow>\r\n    :''\r\n  }\r\n  {props.editid === 3 ?\r\n    <CRow>\r\n    <CCol sm=\"12\" md=\"6\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                        Next of Kin\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                       \r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"kin1_name\">Name of Next of Kin<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"kin1_name\" \r\n                                    value={kin1_name}\r\n                                    aria-required \r\n                                    placeholder=\"Next of Kin Fullname\"\r\n                                    onChange={(e)=>setKin1_name(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                        <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"kin1_rel\">Relationship to Staff<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    id=\"kin1_rel\" \r\n                                    value={kin1_rel}\r\n                                    aria-required \r\n                                    placeholder=\"Enter kin1_rel\"\r\n                                    onChange={(e)=>setKin1_rel(e.target.value)} \r\n                                    required\r\n                                >\r\n                                  {relarray}  \r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"kin1_phone1\">Phone Number<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"kin1_phone1\" \r\n                                    value={kin1_phone1}\r\n                                    aria-required \r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setKin1_phone1(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"kin1_phone2\">Alternative Phone Number</CLabel>\r\n                                <CInput \r\n                                    id=\"kin1_phone2\" \r\n                                    value={kin1_phone2}\r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setKin1_phone2(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"kin1_email\">Email</CLabel>\r\n                                <CInput \r\n                                    id=\"kin1_email\" \r\n                                    value={kin1_email}\r\n                                    type='email'\r\n                                    placeholder=\"info@mail.com\"\r\n                                    onChange={(e)=>setKin1_email(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"kin1_address\">Address</CLabel>\r\n                                <CTextarea \r\n                                    id=\"kin1_address\" \r\n                                    value={kin1_address}\r\n                                    placeholder=\"....P.0. Box \"\r\n                                    onChange={(e)=>setKin1_address(e.target.value)} \r\n                                    />\r\n                                \r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton onClick={handleCare1} type=\"submit\" size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                            <CButton onClick={handleCare1Reset} type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n                        </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n                    <CCol sm=\"12\" md=\"6\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                        Secondary Next of Kin\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                       \r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"kin2_name\">Name of Next of Kin<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"kin2_name\" \r\n                                    value={kin2_name}\r\n                                    aria-required \r\n                                    placeholder=\"Next of Kin Fullname\"\r\n                                    onChange={(e)=>setKin2_name(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                        <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"kin2_rel\">Relationship to Staff<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    id=\"kin2_rel\" \r\n                                    value={kin2_rel}\r\n                                    aria-required \r\n                                    placeholder=\"Enter kin2_rel\"\r\n                                    onChange={(e)=>setKin2_rel(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    {relarray}\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"kin2_phone1\">Phone Number<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"kin2_phone1\" \r\n                                    value={kin2_phone1}\r\n                                    aria-required \r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setKin2_phone1(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"kin2_phone2\">Alternative Phone Number</CLabel>\r\n                                <CInput \r\n                                    id=\"kin2_phone2\" \r\n                                    value={kin2_phone2}\r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setKin2_phone2(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"kin2_email\">Email</CLabel>\r\n                                <CInput \r\n                                    id=\"kin2_email\" \r\n                                    value={kin2_email}\r\n                                    type='email'\r\n                                    placeholder=\"info@mail.com\"\r\n                                    onChange={(e)=>setKin2_email(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                       \r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"kin2_address\">Address</CLabel>\r\n                                <CTextarea \r\n                                    id=\"kin2_address\" \r\n                                    value={kin2_address}\r\n                                    placeholder=\"....P.0. Box \"\r\n                                    onChange={(e)=>setKin2_address(e.target.value)} \r\n                                    />\r\n                                \r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton onClick={handleCare2}  type=\"submit\" size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                            <CButton  onClick={handleCare2Reset} type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n                        </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n    \r\n    </CRow>\r\n    :''}\r\n  {props.editid === 4 ?\r\n    <CRow>\r\n        <CCol xs=\"12\" sm=\"12\">\r\n            <CCard>\r\n                <CCardHeader>\r\n                    Photos\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                <CRow>\r\n                    <CCol xs=\"12\" sm='12' >\r\n                        <CFormGroup>\r\n                            <CLabel htmlFor=\"employment\">\r\n                                <strong>Staff Passport photo</strong><br/>\r\n                                Note : image should show both ears, no glasses, hat or mask\r\n                                </CLabel>\r\n                            <CCol xs=\"12\" md=\"9\" className='text-center'>\r\n                            <img \r\n                                src={process.env.REACT_APP_SERVER_URL + links} \r\n                                className=\"m-0 p-0\" \r\n                                width='180px'\r\n                                height='200px'\r\n                                alt={employment} \r\n                                onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL +'avatars/1.png' }}\r\n                             />\r\n                             </CCol>\r\n                             <CCol xs=\"12\" md=\"9\" className='mt-5'>\r\n                                <CInputFile \r\n                                custom \r\n                                id=\"custom-file-input\"\r\n                                name='picture1'\r\n                                onChange={changeImg}\r\n                                />\r\n                                <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\r\n                                Choose file...\r\n                                </CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"6\" className='mt-2 text-center'>\r\n                            <CButtonGroup className=\"mr-2\">\r\n                                <CButton color=\"secondary\" onClick={handlePicture1}><i className='fa fa-save'></i> Save</CButton>\r\n                            </CButtonGroup>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    </CCol>\r\n                   </CRow>\r\n                </CCardBody>\r\n            </CCard>\r\n        </CCol>\r\n    </CRow>\r\n    :''}\r\n  {props.editid === 5 ?\r\n    <CRow>\r\n    <CCol sm=\"6\" md=\"6\">\r\n                    <CCard>\r\n                        <CCardBody>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                                <CFormGroup>\r\n                                    <CLabel htmlFor=\"npassword\">New Password</CLabel>\r\n                                    <CInput \r\n                                        id=\"npassword\" \r\n                                        type='password'\r\n                                        defaultValue={npassword}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e)=>setNpassword(e.target.value)} \r\n                                        />\r\n                                </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\">\r\n                                <CFormGroup>\r\n                                    <CLabel htmlFor=\"rpassword\">Repeat New Password</CLabel>\r\n                                    <CInput \r\n                                        id=\"rpassword\" \r\n                                        type='password'\r\n                                        defaultValue={rpassword}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e)=>setRpassword(e.target.value)} \r\n                                        />\r\n                                </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton type=\"button\" size=\"sm\" color=\"primary\" onClick={handlePassword}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                            <CButton type=\"button\" size=\"sm\" color=\"danger\" onClick={handlePasswordAutomatic}><CIcon name=\"cil-ban\" /> Generate and Email New Password</CButton>\r\n                        </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n    </CRow>\r\n   :''}\r\n  {props.editid === 6 ?\r\n    <CRow>\r\n    <CCol sm=\"12\" md=\"12\">\r\n                    <CCard>\r\n                        <CCardBody>\r\n                       <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"dol\">Date of Leaving</CLabel>\r\n                                <CInput \r\n                                    id=\"dol\" \r\n                                    name='date'\r\n                                    defaultValue={dol}\r\n                                    onChange={(e)=>setDol(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"reason\">Reason for Leaving</CLabel>\r\n                                <CTextarea \r\n                                    id=\"reason\" \r\n                                    defaultValue={reason}\r\n                                    placeholder=\"Absent for....., Graduated with,,,, \"\r\n                                    onChange={(e)=>setReason(e.target.value)} \r\n                                    />\r\n                                \r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={handleExit}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                            <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={handleExitReset}><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n                        </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n    </CRow>\r\n   :''} \r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    staffs : state.staffReducer,\r\n    sessions : state.sessionReducer.sessions,\r\n    offices : state.officeReducer.offices,\r\n    departments : state.departmentReducer.departments,\r\n    designations : state.designationReducer.designations,\r\n    levels : state.levelReducer.levels,\r\n    penmanagers : state.penmanagerReducer.penmanagers,\r\n    schools : state.schoolReducer.schools,\r\n    user: state.userReducer\r\n  })\r\n  export default connect(mapStateToProps, {\r\n    getStaffs,\r\n    getStaff,\r\n    registerStaff,\r\n    updateStaff,\r\n    deleteStaff,\r\n    getSchools,\r\n    getSessions,\r\n    getLevels,\r\n    getDepartments,\r\n    getDesignations,\r\n    getPenmanagers,\r\n    updateUser\r\n  })(Staffs)\r\n  \r\n"],"sourceRoot":""}