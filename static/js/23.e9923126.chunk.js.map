{"version":3,"sources":["views/staff/Subjects/Header.js","views/staff/Subjects/ScoreBox.js","views/staff/Subjects/ScoreRate.js","views/staff/Subjects/ScoreStar.js","views/staff/Subjects/Students.js","actions/staff/stafflessonplan.js","views/staff/Subjects/PlanForm.js","views/staff/Subjects/Plan.js","views/staff/StaffDashboardSubject.js","views/setting/Stage/Header.js","actions/staff/staff.js","actions/setting/clasz.js","actions/student/student.js","actions/setting/ca.js","actions/setting/theme.js","actions/student/studentscore.js","actions/staff/staffsubject.js","../node_modules/@coreui/utils/src/deep-objects-merge.js","views/charts/ChartLineSimple.js","views/staff/StaffDashboardMenu.js","views/staff/SearchDashboard.js","views/staff/SearchDashboard1.js","../node_modules/@coreui/utils/src/get-css-custom-properties.js","../node_modules/@coreui/utils/src/get-style.js","views/staff/StaffDashboardSession1.js","views/staff/StaffDashboardDefault.js","views/charts/ChartBarSimple.js","actions/setting/week.js","views/staff/SearchDashboard3.js","actions/staff/staffstudent.js","../node_modules/react-rating-stars-component/dist/react-stars.js","../node_modules/react-rating-stars-component/dist/hooks/useConfig.js","../node_modules/react-rating-stars-component/dist/star.js","../node_modules/@coreui/utils/src/get-color.js","actions/staff/staffclass.js","views/setting/Form/Theme.js","views/setting/Table/Theme.js","views/setting/Stage/Theme.js"],"names":["Header","props","subject","len","studentdata","cas","ca_array","ca1_array","ca2_array","caunit_array","forEach","ele","parseInt","typeid","Object","keys","includes","sid","caname","arr","id","name","maxscore","push","itemname1","itemname","xs","sm","className","onClick","goBack","color","size","getAllStudents","caret","placement","map","prp","ind","header","tag","key","prps","inds","prev","setShowca","score","setShowbh","setShowsk","SearchDashboard3","studentx","placeStudent","length","src","process","photo","style","height","width","alt","class","onError","e","target","onerror","admission_no","loadStudent","setStudentdata","connect","state","registerStudentscore","deleteStudentscore","useState","value","setvalue","sd_val","setsd_val","mscore","setmscore","useEffect","setvalues","parseFloat","valign","row","md","type","fd","FormData","val","append","caid","sessionid","termid","studentid","subjectid","toString","staffid","callError","textAlign","fontWeight","padding","onChange","sd_id","deleteScore","disabled","ScoreRate","setvalued","count","isHalf","emptyIcon","halfIcon","fullIcon","activeColor","sc","saveScore","staffstudents","staffstudentReducer","studentscores","studentscoreReducer","caReducer","user","userReducer","getStaffstudents","updateStaffstudent","registerStaffstudent","deleteStaffstudent","getStudentscores","updateStudentscore","getStaffsubjects","data","Array","isArray","filter","rw","undefined","scoresall","ids","pp","ii","clientid","join","claszid","castore","setcastore","cascores","setcascores","cakeeps","setcakeeps","bhstore","setbhstore","skstore","setskstore","itemz","setitemz","params","JSON","stringify","itemid1","cat","table","narration","params1","setScoreValues","student","ca","namz","sco","nm","saveScoreValues","tabl","gender","clientname","sd","rws","sd_array","contact","sd_color","mid","ScoreStar","Swal","then","students","groupid","pr","sh","th","ar","defaultValue","sk","serScoreValues","minWidth","path","API_PATH_STAFF","termarray","1","2","3","4","theme","themeReducer","stafflessonplan","stafflessonplanReducer","week","weekReducer","registerStafflessonplan","dispatch","axios","post","axiosConfig1","res","STAFFLESSONPLAN_REGISTER_SUCCESS","payload","catch","err","STAFFLESSONPLAN_REGISTER_FAIL","updateStafflessonplan","getState","STAFFLESSONPLAN_UPDATE_SUCCESS","STAFFLESSONPLAN_UPDATE_FAIL","getThemes","getWeeks","getStafflessonplans","token","MAIN_TOKEN","STAFFLESSONPLAN_LOADING","get","axiosConfig","STAFFLESSONPLAN_GET_MULTIPLE","STAFFLESSONPLAN_LOADING_ERROR","useHistory","setid","schemeid","setschemeid","schemedata","setschemedata","schemedatas","setschemedatas","weekid","setweekid","setcontact","period","setperiod","topic","settopic","subtopic","setsubtopic","method","setmethod","population","setpopulation","content","setcontent","material","setmaterial","objective","setobjective","assessment","setassessment","note","setnote","reference","setreference","rowid","schemearray1","themes","claszabbrv","contactarray","weekidarray","weeks","contento","objectiveo","materialo","claszname","subjectname","htmlFor","custom","dt","textTransform","placeholder","config","toolbar","editor","getData","block","handleClose","whiteSpace","dangerouslySetInnerHTML","__html","staffsubject","staffsubjectReducer","getCas","setSubject","page","setPage","collapser","setCollapser","activeterm","StaffDashboardDefault","show","staffsubjects","numz1","num","split","itemid","cl","is_active","cl1","cl2","lg","text","footerSlot","ChartLineSimple","backgroundColor","dataPoints","options","elements","line","borderWidth","pointHoverBackgroundColor","label","labels","Students","Theme","pid","para","title","school","activeschool","PlanForm","Plan","history","icon","hasOwnProperty","editer","data-target","data-toggle","toggle","getStaffs","STAFF_LOADING","STAFF_GET_MULTIPLE","STAFF_LOADING_ERROR","getStaffAll","STAFF_GET_ALL","searchStaff","STAFF_GET_SEARCH","birthday","STAFF_GET_BIRTHDAY","getStaff","STAFF_GET_ONE","deleteStaff","POST","STAFF_DELETE_SUCCESS","STAFF_DELETE_FAIL","registerStaff","STAFF_REGISTER_SUCCESS","STAFF_REGISTER_FAIL","updateStaff","STAFF_UPDATE_SUCCESS","STAFF_UPDATE_FAIL","API_PATH_SETTING","getClaszs","CLASZ_LOADING","CLASZ_GET_MULTIPLE","CLASZ_LOADING_ERROR","getClasz","CLASZ_GET_ONE","deleteClasz","CLASZ_DELETE_SUCCESS","CLASZ_DELETE_FAIL","registerClasz","CLASZ_REGISTER_SUCCESS","CLASZ_REGISTER_FAIL","updateClasz","CLASZ_UPDATE_SUCCESS","CLASZ_UPDATE_FAIL","getStudents","STUDENT_LOADING","STUDENT_GET_MULTIPLE","STUDENT_LOADING_ERROR","searchStudent","STUDENT_GET_SEARCH","getStudent","STUDENT_GET_ONE","deleteStudent","STUDENT_DELETE_SUCCESS","STUDENT_DELETE_FAIL","registerStudent","STUDENT_REGISTER_SUCCESS","STUDENT_REGISTER_FAIL","updateStudent","STUDENT_UPDATE_SUCCESS","STUDENT_UPDATE_FAIL","CA_LOADING","CA_GET_MULTIPLE","CA_LOADING_ERROR","getCa","CA_GET_ONE","deleteCa","CA_DELETE_SUCCESS","CA_DELETE_FAIL","registerCa","CA_REGISTER_SUCCESS","CA_REGISTER_FAIL","updateCa","CA_UPDATE_SUCCESS","CA_UPDATE_FAIL","TABLE_NAME","THEME_LOADING","THEME_GET_MULTIPLE","THEME_LOADING_ERROR","getThemesummary","THEME_GET_SUMMARY","getTheme","THEME_GET_ONE","deleteTheme","THEME_DELETE_SUCCESS","THEME_DELETE_FAIL","registerTheme","THEME_REGISTER_SUCCESS","THEME_REGISTER_FAIL","updateTheme","THEME_UPDATE_SUCCESS","THEME_UPDATE_FAIL","STUDENTSCORE_LOADING","STUDENTSCORE_GET_MULTIPLE","STUDENTSCORE_LOADING_ERROR","getStudentscorecas","STUDENTSCORE_GET_MULTIPLE_CA","getStudentscoreSummary","STUDENTSCORE_GET_SUMMARY","STUDENTSCORE_DELETE_SUCCESS","STUDENTSCORE_DELETE_FAIL","STUDENTSCORE_REGISTER_SUCCESS","STUDENTSCORE_REGISTER_FAIL","insertStudentca","STUDENTSCORE_REGISTER_CA","STUDENTSCORE_REGISTER_CA_FAIL","deleteStudentca","STUDENTSCORE_DELETE_CA","STUDENTSCORE_UPDATE_SUCCESS","STUDENTSCORE_UPDATE_FAIL","STAFFSUBJECT_LOADING","STAFFSUBJECT_GET_MULTIPLE","STAFFSUBJECT_LOADING_ERROR","getStaffsubjectsummary","STAFFSUBJECT_GET_SUMMARY","getStaffsubject","STAFFSUBJECT_GET_ONE","deleteStaffsubject","STAFFSUBJECT_DELETE_SUCCESS","STAFFSUBJECT_DELETE_FAIL","registerStaffsubject","STAFFSUBJECT_REGISTER_SUCCESS","STAFFSUBJECT_REGISTER_FAIL","updateStaffsubject","STAFFSUBJECT_UPDATE_SUCCESS","STAFFSUBJECT_UPDATE_FAIL","deepObjectsMerge","source","assign","borderColor","pointed","attributes","pointHoverColor","defaultDatasets","getColor","pointBackgroundColor","pointedOptions","scales","xAxes","offset","gridLines","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","Math","apply","max","point","radius","hitRadius","hoverRadius","straightOptions","defaultOptions","maintainAspectRatio","legend","computedDatasets","datasets","computedOptions","defaultProps","Dashboard","setSchool","term","setTerm","clasz","setClasz","dropdowns","dt0","dt1","dt3","prop","sch","schools","changeSchool","parse","changeTerm","action","to","result","staffReducer","dat","index","href","active","employment_no","position","zIndex","studentReducer","getCssCustomProperties","cssCustomProperties","sheets","document","styleSheets","cssText","i","rules","cssRules","j","selectorText","substring","lastIndexOf","property","trim","isIE1x","Boolean","documentMode","isCustomProperty","match","getStyle","element","body","window","getComputedStyle","getPropertyValue","replace","toggleMenu","activeTerm","termReducer","getUserDatas","getUserSchools","getUserTerms","getUserdropdowns","settSchool","settTerm","showmenu","setShowmenu","did","myschools","mySchoolData","StaffDashboardMenu","ChartBarSimple","barPercentage","categoryPercentage","WEEK_LOADING","WEEK_GET_MULTIPLE","WEEK_LOADING_ERROR","getWeek","WEEK_GET_ONE","deleteWeek","WEEK_DELETE_SUCCESS","WEEK_DELETE_FAIL","registerWeek","WEEK_REGISTER_SUCCESS","WEEK_REGISTER_FAIL","updateWeek","WEEK_UPDATE_SUCCESS","WEEK_UPDATE_FAIL","onMouseLeave","STAFFSTUDENT_LOADING","STAFFSTUDENT_GET_MULTIPLE","STAFFSTUDENT_LOADING_ERROR","STAFFSTUDENT_DELETE_SUCCESS","STAFFSTUDENT_DELETE_FAIL","STAFFSTUDENT_REGISTER_SUCCESS","STAFFSTUDENT_REGISTER_FAIL","STAFFSTUDENT_UPDATE_SUCCESS","STAFFSTUDENT_UPDATE_FAIL","defineProperty","exports","_slicedToArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","sliceIterator","TypeError","_react","require","_react2","_interopRequireDefault","_propTypes2","_useConfig4","_star2","obj","__esModule","default","parentStyles","overflow","getHalfStarStyles","uniqueness","ReactStars","_useState","_useState2","setUniqueness","_useState3","_useState4","currentValue","setCurrentValue","_useState5","_useState6","stars","setStars","_useState7","_useState8","isUsingIcons","setIsUsingIcons","_useConfig","_useConfig2","setConfig","_useState9","_useState10","halfStarAt","setHalfStarAt","_useState11","_useState12","halfStarHidden","setHalfStarHidden","_useState13","_useState14","classNames","setClassNames","getStars","activeCount","floor","round","mouseOver","event","edit","Number","currentTarget","getAttribute","isAtHalf","moreThanHalf","currentActive","x","updateStars","boundingClientRect","getBoundingClientRect","mouseAt","clientX","left","abs","mouseLeave","updateHalfStarValues","isDecimal","currentValueUpdated","reactStarsClass","addClassNames","random","filledIcon","iconsUsed","createElement","tabIndex","a11y","onKeyDown","keyNumber","isInteger","preventDefault","renderHalfStarStyleElement","star","onMouseOver","role","propTypes","string","bool","half","number","char","setCount","setSize","setChar","setColor","setActiveColor","setIsHalf","setEdit","_useState15","_useState16","setEmptyIcon","_useState17","_useState18","setHalfIcon","_useState19","_useState20","setFilledIcon","_useState21","_useState22","setA11y","_extends","arguments","prototype","call","starClass","defaultStyles","cursor","onMouseMove","float","rawProperty","getStaffclasss","STAFFCLASS_LOADING","STAFFCLASS_GET_MULTIPLE","STAFFCLASS_LOADING_ERROR","getStaffclass","STAFFCLASS_GET_ONE","deleteStaffclass","STAFFCLASS_DELETE_SUCCESS","STAFFCLASS_DELETE_FAIL","registerStaffclass","STAFFCLASS_REGISTER_SUCCESS","STAFFCLASS_REGISTER_FAIL","updateStaffclass","STAFFCLASS_UPDATE_SUCCESS","STAFFCLASS_UPDATE_FAIL","claszs","claszReducer","useLocation","search","setId","moduleid","setModuleid","namez","setNamez","setTopic","setClaszid","setTermid","termname","setTermname","setObjective","setContent","setMaterial","setElement","termnamex","termnames","clarray","termz","xl","onClose","module","onReset","onEdit","onActivate","onDelete","subjects","subjectReducer","collapse","setCollapse","dts","setDts","ses","sess","submenu"],"mappings":"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","file":"static/js/23.e9923126.chunk.js","sourcesContent":["import React, { useEffect }  from 'react'\r\nimport SearchDashboard3 from '../SearchDashboard3'\r\nimport { \r\n    CCol, \r\n    CContainer, \r\n    CRow,\r\n    CButtonGroup,\r\n    CDropdown ,\r\n    CDropdownItem,\r\n    CDropdownMenu,\r\n    CWidgetDropdown,\r\n    CDropdownToggle,\r\n    CButton\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Header = (props) => {\r\n let {subject, len, studentdata} = props || '';\r\n let cas = props.cas;\r\n\r\n let ca_array = {};\r\n let ca1_array = {};\r\n let ca2_array = {};\r\n let caunit_array = {};\r\n cas.forEach(ele => {\r\n   if(parseInt(ele.typeid) === 1){\r\n     if(Object.keys(ca_array).includes(ele.sid))\r\n     {\r\n        //ca_array[ele.sid] = ele.cname;\r\n     }else{\r\n        ca_array[ele.sid] = ele.caname;\r\n     }\r\n   }else if(parseInt(ele.typeid) === 2){\r\n    if(Object.keys(ca_array).includes(ele.sid))\r\n    {\r\n       //ca_array[ele.sid] = ele.cname;\r\n    }else{\r\n       ca1_array[ele.sid] = ele.caname;\r\n    }\r\n   }\r\n   else if(parseInt(ele.typeid) === 3){\r\n    if(Object.keys(ca_array).includes(ele.sid))\r\n    {\r\n       //ca_array[ele.sid] = ele.cname;\r\n    }else{\r\n       ca2_array[ele.sid] = ele.caname;\r\n    }\r\n   }\r\n\r\n   if(Object.keys(caunit_array).includes(ele.sid))\r\n     {\r\n         let arr = {}\r\n         arr['id'] = ele.id;\r\n         arr['typeid'] = ele.typeid;\r\n         arr['name'] = ele.name;\r\n         arr['score'] = ele.maxscore;\r\n         caunit_array[ele.sid].push(arr);\r\n     }else\r\n     {\r\n        caunit_array[ele.sid] = [];\r\n        let arr = {}\r\n        arr['id'] = ele.id;\r\n        arr['typeid'] = ele.typeid;\r\n        arr['name'] = ele.name;\r\n        arr['score'] = ele.maxscore;\r\n        caunit_array[ele.sid].push(arr);\r\n     }\r\n });\r\n\r\n \r\n \r\n return(\r\n    <CContainer>\r\n        <CRow>\r\n        <CCol>\r\n            <h4>{subject.itemname1}{\" \"}{subject.itemname} ({`${len} Students`})</h4>\r\n            </CCol>\r\n            <CCol xs={12} sm={4} className=\"d-md-block btn-group\">\r\n            <CButtonGroup className='pull-right'>\r\n              <button  \r\n                onClick={()=>props.goBack()}\r\n                className=\"btn btn-info\"><i className='fa fa-backward'></i>\r\n              </button>\r\n              <CButton\r\n                color='dark'\r\n                size=\"sm\"\r\n                onClick={()=>props.getAllStudents()}\r\n                >\r\n                    Get All\r\n                </CButton>\r\n            </CButtonGroup>\r\n              <CButtonGroup className='pull-right'>\r\n              \r\n              <CDropdown color=\"secondary\" >\r\n              <CDropdownToggle caret color=\"secondary\">\r\n                  <i className='fa fa-list'></i> <span className='hidden-phone'> CAS</span>\r\n                </CDropdownToggle>\r\n                <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n                  {\r\n                      Object.keys(ca_array).map((prp, ind)=>{\r\n                        return <><CDropdownItem\r\n                          header\r\n                          tag=\"div\"\r\n                          color=\"light\"\r\n                          className=\"text-center\"\r\n                          >\r\n                          <strong key={ind}>{ca_array[prp]}</strong>\r\n                        </CDropdownItem>\r\n                        { Object.keys(caunit_array[prp]).map((prps, inds)=>{\r\n                        return <CDropdownItem key={inds}  onClick={(prev)=>props.setShowca(caunit_array[prp][prps].id, caunit_array[prp][prps].name, caunit_array[prp][prps].score)}>\r\n                                <CIcon \r\n                                    name=\"cil-book\" \r\n                                    className=\"mfe-2\" \r\n                                /> \r\n                                {`${caunit_array[prp][prps].name} (${caunit_array[prp][prps].score})`}\r\n                            </CDropdownItem>\r\n                        })}\r\n                        </>\r\n                      })\r\n                  }\r\n                </CDropdownMenu>     \r\n              </CDropdown>\r\n              <CDropdown color=\"secondary\" >\r\n              <CDropdownToggle caret color=\"secondary\">\r\n                  <i className='fa fa-list'></i> <span className='hidden-phone'> Behavior</span>\r\n                </CDropdownToggle>\r\n                <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n                  {\r\n                      Object.keys(ca1_array).map((prp, ind)=>{\r\n                        return <><CDropdownItem\r\n                          header\r\n                          tag=\"div\"\r\n                          color=\"light\"\r\n                          className=\"text-center\"\r\n                          >\r\n                          <strong key={ind}>{ca1_array[prp]}</strong>\r\n                        </CDropdownItem>\r\n                        { Object.keys(caunit_array[prp]).map((prps, inds)=>{\r\n                        return <CDropdownItem key={inds}  onClick={(prev)=>props.setShowbh(caunit_array[prp][prps].id, caunit_array[prp][prps].name, caunit_array[prp][prps].score)}>\r\n                                <CIcon \r\n                                    name=\"cil-book\" \r\n                                    className=\"mfe-2\" \r\n                                /> \r\n                                {`${caunit_array[prp][prps].name} `}\r\n                            </CDropdownItem>\r\n                        })}\r\n                        </>\r\n                      })\r\n                  }\r\n                </CDropdownMenu>     \r\n              </CDropdown>\r\n              <CDropdown color=\"secondary\" >\r\n              <CDropdownToggle caret color=\"secondary\">\r\n                  <i className='fa fa-list'></i> <span className='hidden-phone'> Skills</span>\r\n                </CDropdownToggle>\r\n                <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n                  {\r\n                      Object.keys(ca2_array).map((prp, ind)=>{\r\n                        return <><CDropdownItem\r\n                          header\r\n                          tag=\"div\"\r\n                          color=\"light\"\r\n                          className=\"text-center\"\r\n                          >\r\n                          <strong key={ind}>{ca2_array[prp]}</strong>\r\n                        </CDropdownItem>\r\n                        { Object.keys(caunit_array[prp]).map((prps, inds)=>{\r\n                        return <CDropdownItem key={inds}  onClick={(prev)=>props.setShowsk(caunit_array[prp][prps].id, caunit_array[prp][prps].name, caunit_array[prp][prps].score)}>\r\n                                <CIcon \r\n                                    name=\"cil-book\" \r\n                                    className=\"mfe-2\" \r\n                                /> \r\n                                {`${caunit_array[prp][prps].name} `}\r\n                            </CDropdownItem>\r\n                        })}\r\n                        </>\r\n                      })\r\n                  }\r\n                </CDropdownMenu>     \r\n              </CDropdown>\r\n                \r\n                </CButtonGroup>  \r\n            </CCol>\r\n        </CRow>\r\n        <CRow>\r\n        <CCol sm={6}>\r\n            <SearchDashboard3 \r\n                studentx={props.placeStudent}  \r\n            />\r\n            </CCol>\r\n            <CCol sm={6}>\r\n            { studentdata && Object.keys(studentdata).length > 0 ?\r\n            <>\r\n            <CRow>\r\n            <img\r\n            src={process.env.REACT_APP_SERVER_URL + studentdata.photo} \r\n            style={{height:'30px', width:'30px'}}\r\n            height=\"30px\"\r\n            alt=\"profile-image\" \r\n            class=\"profile\"\r\n            onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/icons/profile_1.png'} }\r\n            />\r\n            <CCol>\r\n            <strong>{studentdata.name}</strong><br/>\r\n            <small>{studentdata.admission_no}</small>\r\n            </CCol>\r\n            <CCol xs={3}>\r\n            <button className='btn btn-sm btn-success' onClick={props.loadStudent}><i className=\"fa fa-plus\"></i></button>\r\n            <button className='btn btn-sm btn-danger' onClick={()=>props.setStudentdata({})}><i className=\"fa fa-trash\"></i></button></CCol>\r\n            </CRow>\r\n            </>\r\n            :\"\"}\r\n            </CCol>\r\n        </CRow>\r\n        </CContainer>\r\n        )\r\n\r\n}\r\n\r\nexport default Header","import React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { registerStudentscore, deleteStudentscore } from './../../../actions/student/studentscore'\r\n\r\nimport { \r\n    CButton,\r\n    CCol,\r\n    CFormGroup,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CInputGroupText\r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport { callError, callReg } from '../../../actions/common';\r\n\r\n\r\n\r\nconst ScoreBox = (props) => {\r\n\r\n    const [value, setvalue] = useState('')\r\n    const [colors, setcolors] = useState('')\r\n    const [bgcolors, setbgcolors] = useState('')\r\n    const [sd_val, setsd_val] = useState(props.sd_val)\r\n    const [mscore, setmscore] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setvalue(props.sd_val)\r\n        setsd_val(props.sd_val)\r\n    }, [props.sd_val])\r\n\r\n    useEffect(() => {\r\n        setmscore(props.score)\r\n    }, [props.score])\r\n\r\n  const saveScore = () =>{\r\n        if(mscore > 0)\r\n        {\r\n            if(parseFloat(value) <= mscore){\r\n                let fd = new FormData();\r\n                let val = parseFloat(value) > 0 ? parseFloat(value) / mscore : 0;\r\n                fd.append('caid', props.caid);\r\n                fd.append('sessionid', props.sessionid);\r\n                fd.append('termid', props.termid);\r\n                fd.append('studentid', props.studentid);\r\n                fd.append('subjectid', props.subjectid);\r\n                fd.append('score', val.toString());\r\n                fd.append('staffid', props.staffid);\r\n                fd.append('grp', 8);\r\n                fd.append('cat', 'insertscore');\r\n                fd.append('table', 'accessstudentscore');\r\n            \r\n                props.registerStudentscore(fd);\r\n            }else{\r\n                callError('The imput value is more than the maximum score')\r\n            }\r\n        }else{\r\n            callError('Please input a max score value')\r\n        }\r\n    \r\n} \r\n\r\nconst deleteScore = (id) =>{\r\n    \r\n    let fd = new FormData();\r\n\r\n    fd.append('id', id);\r\n    fd.append('sessionid', props.sessionid);\r\n    fd.append('cat', 'deletes');\r\n    fd.append('table', 'accessstudentscore');\r\n \r\n    props.deleteStudentscore(fd, id);\r\n    setvalue('')\r\n \r\n} \r\n\r\nconst setvalues = (id) =>{\r\n    if(parseFloat(id) > parseFloat(mscore))\r\n    {\r\n        setvalue('')\r\n    }else{\r\n        setvalue(id)\r\n    }\r\n    \r\n}\r\n\r\n\r\nreturn (\r\n    <>\r\n    <td valign=\"middle\" width=\"500px\">\r\n        <CFormGroup row>\r\n            <CCol md=\"12\">\r\n            <CInputGroup>\r\n            <CInputGroupPrepend>\r\n            { parseFloat(value)  === parseFloat(sd_val) ?\r\n            <CButton \r\n            size='lg' \r\n            type=\"button\" \r\n            color=\"success\"><CIcon name=\"cil-check\" />\r\n            </CButton>:\r\n            <CButton \r\n            onClick={saveScore}\r\n            size='lg' \r\n            type=\"button\" \r\n            color=\"info\"><CIcon name=\"cil-save\" />\r\n            </CButton>}\r\n            </CInputGroupPrepend>\r\n            { parseFloat(value)  === parseFloat(sd_val)  ?\r\n            <CInput\r\n                size='lg'\r\n                type=\"number\"\r\n                style={{ textAlign:'center', fontWeight:'bolder', padding:'0px'}}\r\n                value={sd_val * mscore}\r\n                onChange={(e)=>setvalues(e.target.value)}  \r\n            />\r\n               :\r\n            <CInput\r\n               size='lg'\r\n               type=\"number\"\r\n               style={{ textAlign:'center', fontWeight:'bolder', padding:'0px'}}\r\n               value={value ? value : ''}\r\n               onChange={(e)=>setvalues(e.target.value)}  \r\n            />\r\n                }\r\n            <CInputGroupAppend>\r\n                {parseInt(props.sd_id) > 0 ?\r\n                <CButton  onClick={()=>deleteScore(props.sd_id)} size='lg' type=\"button\" color={ parseInt(props.sd_id) > 0 ? \"danger\":\"secondary\"}><CIcon name=\"cil-x\" /></CButton>:\r\n                <CButton  disabled size='lg' type=\"button\" color={ parseInt(props.sd_id) > 0 ? \"danger\":\"secondary\"}><CIcon name=\"cil-x\" /></CButton>}\r\n            </CInputGroupAppend>\r\n            </CInputGroup>\r\n            </CCol>\r\n        </CFormGroup>\r\n          \r\n     </td>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n\r\n})\r\nexport default connect(mapStateToProps, {\r\n    registerStudentscore,\r\n    deleteStudentscore\r\n}) (ScoreBox)","import React, {useEffect, useState} from 'react'\r\nimport ReactStars from \"react-rating-stars-component\";;\r\n\r\n\r\n\r\n\r\nconst ScoreRate = (props) => {\r\n\r\n    const [valued, setvalued] = useState(0)\r\n    useEffect(() => {\r\n        setvalued(props.value)\r\n    }, [props.value])\r\n\r\n    //console.log(valued)\r\nreturn (\r\n    <>\r\n    <ReactStars\r\n        count={5}\r\n        value={props.value}\r\n        onChange={props.setvalues}\r\n        size={30}\r\n        isHalf={true}\r\n        emptyIcon={<i className=\"far fa-star\"></i>}\r\n        halfIcon={<i className=\"fa fa-star-half-alt\"></i>}\r\n        fullIcon={<i className=\"fa fa-star\"></i>}\r\n        activeColor=\"#ffd700\"\r\n  />\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ScoreRate","import React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { registerStudentscore, deleteStudentscore } from './../../../actions/student/studentscore'\r\nimport {\r\n    CCol,\r\n    CFormGroup,\r\n    \r\n} from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport ScoreRate from './ScoreRate';\r\n\r\n\r\n\r\nconst ScoreBox = (props) => {\r\n\r\n    const [value, setvalue] = useState('')\r\n    const [colors, setcolors] = useState('')\r\n    const [bgcolors, setbgcolors] = useState('')\r\n    const [sd_val, setsd_val] = useState(props.sd_val)\r\n\r\n    useEffect(() => {\r\n        setvalue(parseFloat(props.sd_val) * 5)\r\n        setsd_val(props.sd_val)\r\n    }, [])\r\n\r\n  const saveScore = (sc) =>{\r\n\r\n        let fd = new FormData();\r\n        let val = parseFloat(sc) > 0 ? parseFloat(sc) / 5 : 0;\r\n        fd.append('caid', props.caid);\r\n        fd.append('sessionid', props.sessionid);\r\n        fd.append('termid', props.termid);\r\n        fd.append('studentid', props.studentid);\r\n        fd.append('subjectid', props.subjectid);\r\n        fd.append('score', val.toString());\r\n        fd.append('staffid', props.staffid);\r\n        fd.append('grp', 8);\r\n        fd.append('cat', 'insertscore');\r\n        fd.append('table', 'accessstudentscore');\r\n     \r\n        props.registerStudentscore(fd);\r\n     \r\n} \r\n\r\nconst deleteScore = (id) =>{\r\n    \r\n    let fd = new FormData();\r\n\r\n    fd.append('id', id);\r\n    fd.append('sessionid', props.sessionid);\r\n    fd.append('cat', 'deletes');\r\n    fd.append('table', 'accessstudentscore');\r\n \r\n    props.deleteStudentscore(fd, id);\r\n    setvalue('')\r\n \r\n} \r\n\r\nconst setvalues = (id) =>{\r\n    \r\n    if(parseFloat(id) > 0)\r\n    {\r\n        setvalue(id)\r\n    }else{\r\n       \r\n    }\r\n    saveScore(id)\r\n}\r\n\r\n\r\n\r\nreturn (\r\n    <>\r\n    <td valign=\"middle\" width=\"500px\">\r\n        \r\n        <CFormGroup row>\r\n            <CCol md=\"12\">{'SAVED'}{\" : \"} {sd_val * 5}{\" - \"}{value}\r\n            { parseFloat(value)  === parseFloat(sd_val * 5)  ?\r\n            <ScoreRate value={parseFloat(value)} setvalues={(e)=>setvalues(e)} />\r\n            :\r\n            <ScoreRate value={parseFloat(value)} setvalues={(e)=>setvalues(e)} />\r\n            }\r\n            </CCol>\r\n        </CFormGroup>\r\n          \r\n     </td>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n\r\n})\r\nexport default connect(mapStateToProps, {\r\n    registerStudentscore,\r\n    deleteStudentscore\r\n}) (ScoreBox)","import React, { useEffect, useState }  from 'react'\r\nimport { useHistory} from 'react-router-dom'\r\nimport { getStaffstudents, updateStaffstudent, registerStaffstudent, deleteStaffstudent} from './../../../actions/staff/staffstudent'\r\nimport { getStudentscores, updateStudentscore, registerStudentscore, deleteStudentscore} from './../../../actions/student/studentscore'\r\nimport { getStaffsubjects} from './../../../actions/staff/staffsubject'\r\nimport CIcon from '@coreui/icons-react'\r\nimport SearchDashboard3 from './../SearchDashboard3'\r\nimport { connect } from 'react-redux'\r\nimport { CCard, CCardBody, CCardHeader, CInput } from '@coreui/react'\r\nimport Swal from'sweetalert'\r\nimport Header from './Header'\r\nimport ScoreBox from './ScoreBox'\r\nimport ScoreStar from './ScoreStar'\r\n\r\n\r\nconst Studentclasss = (props) => {\r\n  \r\n  let data = props.staffstudents.staffstudents && Array.isArray(props.staffstudents.staffstudents) ? props.staffstudents.staffstudents.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let scoresall = props.studentscores.studentscores && Array.isArray(props.studentscores.studentscores) ? props.studentscores.studentscores.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let idx = data.map((pp, ii)=>pp.clientid);\r\n  let ids = idx.join(',')\r\n  let clientid = props.clientid;\r\n  let termid = props.termid;\r\n  let sessionid = props.sessionid;\r\n  let subjectid = props.subjectid;\r\n  let claszid = props.claszid;\r\n  let subject = props.subject;\r\n  let groupid = 3;\r\n   \r\n const [studentdata, setStudentdata] = useState({})\r\n const [castore, setcastore] = useState({})\r\n const [cascores, setcascores] = useState({})\r\n const [cakeeps, setcakeeps] = useState({})\r\n const [bhstore, setbhstore] = useState({})\r\n const [skstore, setskstore] = useState({})\r\n const [itemz, setitemz] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if(parseInt(subjectid) > 0 )\r\n    {\r\n     let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'termid':termid,\r\n            'itemid':subject.itemid1,\r\n            'sessionid':sessionid,\r\n            'itemid1':clientid,\r\n            'contact':claszid,\r\n            'grp':groupid\r\n        }),\r\n        cat:'staffclass',\r\n        table:'accessstudentsubject',\r\n        narration:'get staff student subjects'\r\n      }\r\n      props.getStaffstudents(params)\r\n\r\n      \r\n    }\r\n  }, [termid, subjectid, sessionid, groupid, clientid])\r\n\r\n  useEffect(() => {\r\n    let params1 = {\r\n      data:JSON.stringify(\r\n      {\r\n          'termid':termid,\r\n          'sessionid':sessionid,\r\n          'clientid':clientid,\r\n          'grp':2\r\n      }),\r\n      cat:'staffclass',\r\n      table:'accessstaffsubjectnum',\r\n      narration:'get staffsubjects'\r\n\r\n    }\r\n    props.getStaffsubjects(params1);\r\n    \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let params1 = {\r\n      data:JSON.stringify(\r\n      {\r\n          'termid':termid,\r\n          'sessionid':sessionid,\r\n          'itemid':subjectid,\r\n          'ids': ids, \r\n          'grp':8\r\n      }),\r\n      cat:'studentscore',\r\n      table:'accessstudentscore',\r\n      narration:'get scores'\r\n\r\n    }\r\n    props.getStudentscores(params1);\r\n    \r\n  }, [termid, sessionid, subjectid, ids, claszid])\r\n\r\n  const placeStudent = (students) =>{\r\n   setStudentdata(students);\r\n  }\r\nconst loadStudent = () =>{\r\n\r\n      let fd = new FormData();\r\n      fd.append('itemid', subjectid);\r\n      fd.append('itemid1', clientid);\r\n      fd.append('contact', claszid);\r\n      fd.append('clientid', studentdata.id);\r\n      fd.append('checker', groupid+'_'+termid+'_'+studentdata.id+'_'+subjectid);\r\n      fd.append('table', 'accessstudentsubject');\r\n      fd.append('sessionid', sessionid);\r\n     \r\n      //INSERT\r\n      fd.append('grp', groupid);\r\n      fd.append('termid', termid);\r\n      fd.append('cat', 'inserts');\r\n      props.registerStaffstudent(fd)\r\n      \r\n}\r\nconst getAllStudents = () =>{\r\n  /**\r\n    * classunitid\r\n    * termid\r\n    * subjectid\r\n    */\r\n   let fd = new FormData();\r\n   fd.append('claszid', claszid);\r\n   fd.append('termid', termid);\r\n   fd.append('subjectid', subjectid);\r\n   fd.append('sessionid', sessionid);\r\n   fd.append('staffid', clientid);\r\n   fd.append('grp', groupid);\r\n   \r\n   fd.append('table', 'accessstudentclass');\r\n   fd.append('cat', 'insertsubject');\r\n   props.registerStaffstudent(fd)\r\n}\r\nconst onRemove =(id)=>{\r\n     Swal(\"Are you sure you want to delete you will not be able to restore the data.\")\r\n    .then((value) => {\r\n      if(value == true && parseInt(id) > 0){\r\n          let fd = new FormData();\r\n          fd.append('id', id);\r\n          fd.append('sessionid', sessionid)\r\n          fd.append('table', 'accessstudentsubject')\r\n          fd.append('cat', 'deletes')\r\n          props.deleteStaffstudent(fd, id);\r\n      }else{\r\n        Swal(`Not deleted`);\r\n      }\r\n    });\r\n}\r\nconst setShowca = (id, name, score) =>{\r\n    let sh = {...castore};\r\n    let th = {...cakeeps};\r\n    if(Object.keys(sh).includes(id))\r\n    {\r\n      delete sh[id];\r\n      delete th[id];\r\n      setcastore(sh);\r\n      setcakeeps(th);\r\n      setitemz(1)\r\n    }else{\r\n      let ar = {}\r\n      ar['id'] = id;\r\n      ar['name'] = name;\r\n      ar['score'] = score;\r\n      sh[id] = ar;\r\n      th[id] = score;\r\n      setcastore(sh);\r\n      setcakeeps(th);\r\n      setitemz(1)\r\n    }\r\n    setskstore({})\r\n    setbhstore({})\r\n}\r\nconst setShowbh = (id, name, score) =>{\r\n  let sh = {...bhstore};\r\n  if(Object.keys(sh).includes(id))\r\n    {\r\n      delete sh[id];\r\n      setbhstore(sh);\r\n      setitemz(2)\r\n    }else{\r\n    let ar = {}\r\n    ar['id'] = id;\r\n    ar['name'] = name;\r\n    ar['score'] = score;\r\n    sh[id] = ar;\r\n    setbhstore(sh);\r\n    setitemz(2)\r\n    }\r\n    setcastore({})\r\n    setskstore({})\r\n}\r\nconst setShowsk = (id, name, score) =>{\r\n  let sh = {...skstore};\r\n  if(Object.keys(sh).includes(id))\r\n    {\r\n      delete sh[id];\r\n      setskstore(sh);\r\n      setitemz(3)\r\n    }else{\r\n      let ar = {}\r\n      ar['id'] = id;\r\n      ar['name'] = name;\r\n      ar['score'] = score;\r\n      sh[id] = ar;\r\n      setskstore(sh);\r\n      setitemz(3)\r\n    }\r\n    setcastore({})\r\n    setbhstore({})\r\n}\r\nconst saveScore = (studentid, caid, score) =>{\r\n\r\n   let fd = new FormData();\r\n   \r\n   fd.append('caid', caid);\r\n   fd.append('sessionid', sessionid);\r\n   fd.append('termid', termid);\r\n   fd.append('studentid', studentid);\r\n   fd.append('subjectid', subjectid);\r\n   fd.append('score', score);\r\n   fd.append('staffid', clientid);\r\n   fd.append('grp', 8);\r\n   fd.append('cat', 'insertscore');\r\n   fd.append('table', 'accessstudentscore');\r\n\r\n   props.registerStudentscore(fd)\r\n\r\n}\r\nconst saveScoreHeader = (caid, score) =>{\r\n   let fd = new FormData();\r\n   fd.append('caid', caid);\r\n   fd.append('sessionid', sessionid);\r\n   fd.append('termid', termid);\r\n   fd.append('subjectid', subjectid);\r\n   fd.append('score', score);\r\n   fd.append('staffid', clientid);\r\n   fd.append('grp', 7);\r\n\r\n}\r\nconst setScoreValues = (e, student, ca, namz, sco) =>{\r\n  let sc = {...cascores}\r\n  let nm = student+\"_\"+ca;\r\n  \r\n  if(parseFloat(e.target.value) <= parseFloat(sco)){\r\n    sc[nm] = e.target.value\r\n    setcascores(sc);\r\n  }else{\r\n    sc[nm] = ''\r\n    setcascores(sc);\r\n  } \r\n}\r\nconst serScoreValues = (e, ca, namz, sco) =>{\r\n  let sk = {...cakeeps}\r\n  \r\n  if(parseFloat(e.target.value) >0){\r\n    sk[ca] = e.target.value\r\n    setcakeeps(sk);\r\n  }else{\r\n    sk[ca] = ''\r\n    setcakeeps(sk);\r\n  } \r\n}\r\nconst saveScoreValues = (e, student, ca, namz, sco) =>{\r\n  saveScore(student, ca , e.target.value)\r\n  \r\n}\r\n\r\n\r\nlet tabl = data.filter(rw=>rw !== null && rw !== undefined).map((row, ind)=>{\r\n    return <tr key={ind}\r\n    >\r\n    <td className=\"text-center\" width='60px'>\r\n      <div className=\"c-avatar\">\r\n        <img \r\n          src={process.env.REACT_APP_SERVER_URL+ row.photo} \r\n          className=\"c-avatar-img\" \r\n          style={{width:'50px', height:'50px'}}\r\n          height='50px'\r\n          width='50px'\r\n          alt={row.admission_no} \r\n          onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/avatars/1.png'} }\r\n        />\r\n        <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n      </div>\r\n    </td>\r\n    <td width='340px' valign='middle' className='container' valign=\"middle\" >\r\n        <div className='strong my-auto py-auto'><strong>{`${row.clientname}`}</strong></div>\r\n            <div className=\"small text-muted\">  \r\n            {`${row.admission_no}`}\r\n        </div>\r\n    </td>\r\n    { itemz === 1 ?\r\n      Object.keys(castore).map((prp, inds)=>{\r\n        \r\n        let sd = scoresall.filter(rws=>rws !== undefined && rws !== null && parseInt(rws.itemid1) === parseInt(castore[prp].id) && parseInt(rws.clientid) === parseInt(row.clientid));\r\n        let sd_array = sd && Array.isArray(sd) && sd.length ? sd[0] : null;\r\n        let sd_val = sd_array !== null ? parseFloat(sd_array.contact) : '';\r\n        let sd_id = sd_array !== null ? sd_array.id : '';\r\n        let sd_color = sd_array !== null ? 'green' : 'black';\r\n     \r\n        return <ScoreBox \r\n                  key={inds}\r\n                  sessionid={sessionid}\r\n                  termid={termid}\r\n                  caid={prp}\r\n                  subjectid={subjectid}\r\n                  staffid={props.user.mid}\r\n                  studentid={row.clientid}\r\n                  id={prp}\r\n                  name={castore[prp].name} \r\n                  score={cakeeps[prp]}\r\n                  sd_val={sd_val}\r\n                  sd_id={sd_id}\r\n                  sd_color={sd_color}\r\n                  setScoreValues={(e, id, name, score)=>setScoreValues(e, id, prp, name, score)}\r\n                  saveScoreValues={(e, id, name, score)=>saveScoreValues(e, id, prp, name, score)}\r\n                />\r\n      })\r\n    :''}\r\n    { itemz === 2 ?\r\n      Object.keys(bhstore).map((prp, inds)=>{\r\n\r\n        let sd = scoresall.filter(rws=>rws !== undefined && rws !== null && parseInt(rws.itemid1) === parseInt(bhstore[prp].id) && parseInt(rws.clientid) === parseInt(row.clientid));\r\n        let sd_array = sd && Array.isArray(sd) && sd.length ? sd[0] : null;\r\n        let sd_val = sd_array !== null ? parseFloat(sd_array.contact) : '';\r\n        let sd_id = sd_array !== null ? sd_array.id : '';\r\n        let sd_color = sd_array !== null ? 'green' : 'black';\r\n     \r\n        return <ScoreStar \r\n                  key={inds}\r\n                  sessionid={sessionid}\r\n                  termid={termid}\r\n                  caid={prp}\r\n                  subjectid={subjectid}\r\n                  staffid={props.user.mid}\r\n                  studentid={row.clientid}\r\n                  id={prp}\r\n                  name={bhstore[prp].name} \r\n                  score={bhstore[prp].score}\r\n                  sd_val={sd_val}\r\n                  sd_id={sd_id}\r\n                  sd_color={sd_color}\r\n                  setScoreValues={(e, id, name, score)=>setScoreValues(e, id, prp, name, score)}\r\n                  saveScoreValues={(e, id, name, score)=>saveScoreValues(e, id, prp, name, score)}\r\n                />\r\n      })\r\n    :''}\r\n    { itemz === 3 ?\r\n      Object.keys(skstore).map((prp, inds)=>{\r\n\r\n        let sd = scoresall.filter(rws=>rws !== undefined && rws !== null && parseInt(rws.itemid1) === parseInt(skstore[prp].id) && parseInt(rws.clientid) === parseInt(row.clientid));\r\n        let sd_array = sd && Array.isArray(sd) && sd.length ? sd[0] : null;\r\n        let sd_val = sd_array !== null ? parseFloat(sd_array.contact) : '';\r\n        let sd_id = sd_array !== null ? sd_array.id : '';\r\n        let sd_color = sd_array !== null ? 'green' : 'black';\r\n     \r\n        return <ScoreStar \r\n                  key={inds}\r\n                  sessionid={sessionid}\r\n                  termid={termid}\r\n                  caid={prp}\r\n                  subjectid={subjectid}\r\n                  staffid={props.user.mid}\r\n                  studentid={row.clientid}\r\n                  id={prp}\r\n                  name={skstore[prp].name} \r\n                  score={skstore[prp].score}\r\n                  sd_val={sd_val}\r\n                  sd_id={sd_id}\r\n                  sd_color={sd_color}\r\n                  setScoreValues={(e, id, name, score)=>setScoreValues(e, id, prp, name, score)}\r\n                  saveScoreValues={(e, id, name, score)=>saveScoreValues(e, id, prp, name, score)}\r\n                />\r\n      })\r\n    :''}\r\n    <td >\r\n      <span className='pull-right'>\r\n      <button  onClick={()=>onRemove(row.id)} className='btn btn-sm btn-round btn-danger '><CIcon  size='lg' name=\"cil-x\"/></button>\r\n      </span>\r\n    </td>\r\n  </tr>\r\n});\r\n\r\n\r\nlet len = data.filter(rw=>rw !== null && rw !== undefined).length;\r\n\r\nreturn (\r\n   <>\r\n   <CCard>\r\n     <CCardHeader>\r\n      <Header \r\n        len={len}\r\n        subject={subject}\r\n        studentdata={studentdata}\r\n        goBack={props.goBack}\r\n        placeStudent={placeStudent}\r\n        loadStudent={loadStudent}\r\n        setStudentdata={(pr)=>setStudentdata(pr)}\r\n        getAllStudents={()=>getAllStudents()}\r\n        cas={props.cas}\r\n        setShowca={setShowca}\r\n        setShowbh={setShowbh}\r\n        setShowsk={setShowsk}\r\n      />\r\n    </CCardHeader>\r\n   <CCardBody className='table-responsive'>\r\n   <table className=\"table table-bordered mb-0  d-sm-table\">\r\n        <thead className=\"thead-light\">\r\n            <tr>\r\n            <th className=\"text-center\"><CIcon name=\"cil-people\" /></th>\r\n            <th>Students</th>\r\n            { itemz === 1 ?\r\n              Object.keys(castore).map((prp, inds)=>{\r\n                return <th key={inds}>\r\n                  {castore[prp].name}\r\n                  <CInput\r\n                    style={{width:'150px', textAlign:'center', fontWeight:'bolder'}}\r\n                    defaultValue={cakeeps[prp]}\r\n                    onChange={(e)=>serScoreValues(e, prp, castore[prp].name, cakeeps[prp])}\r\n                  />\r\n                </th>\r\n              }):''\r\n            }\r\n            { itemz === 2 ?\r\n              Object.keys(bhstore).map((prp, inds)=>{\r\n                return <th key={inds} style={{minWidth:'200px'}}>\r\n                  {bhstore[prp].name}\r\n                  \r\n                </th>\r\n              }):''\r\n            }\r\n            { itemz === 3 ?\r\n              Object.keys(skstore).map((prp, inds)=>{\r\n                return <th key={inds} style={{minWidth:'200px'}}>\r\n                  {skstore[prp].name}\r\n                  \r\n                </th>\r\n              }):''\r\n            }\r\n            <th>Remove</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {tabl}\r\n        </tbody>\r\n  </table>\r\n  </CCardBody>\r\n  </CCard>\r\n   </>\r\n  )\r\n}\r\nconst mapStatetoProps = (state)=>({\r\n staffstudents:state.staffstudentReducer,\r\n studentscores:state.studentscoreReducer,\r\n cas:state.caReducer.cas,\r\n user:state.userReducer\r\n})\r\nexport default connect(mapStatetoProps, {\r\n    getStaffstudents,\r\n    updateStaffstudent,\r\n    registerStaffstudent,\r\n    deleteStaffstudent,\r\n    getStudentscores,\r\n    updateStudentscore,\r\n    registerStudentscore,\r\n    deleteStudentscore,\r\n    getStaffsubjects\r\n}) (Studentclasss)\r\n  \r\n","import axios from 'axios';\r\nimport {\r\n    STAFFLESSONPLAN_GET_ONE,\r\n    STAFFLESSONPLAN_GET_MULTIPLE,\r\n    STAFFLESSONPLAN_REGISTER_SUCCESS,\r\n    STAFFLESSONPLAN_REGISTER_FAIL,\r\n    STAFFLESSONPLAN_LOADING,\r\n    STAFFLESSONPLAN_LOADING_ERROR,\r\n    STAFFLESSONPLAN_UPDATE_SUCCESS,\r\n    STAFFLESSONPLAN_UPDATE_FAIL,\r\n    STAFFLESSONPLAN_DELETE_SUCCESS,\r\n    STAFFLESSONPLAN_DELETE_FAIL\r\n} from \"./../../types/staff/stafflessonplan\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'access';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFFLESSONPLAN \r\nexport const getStafflessonplans = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFFLESSONPLAN_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFFLESSONPLAN_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFFLESSONPLAN_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STAFFLESSONPLAN \r\nexport const getStafflessonplan = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFFLESSONPLAN_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFFLESSONPLAN DELETE\r\nexport const deleteStafflessonplan = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFLESSONPLAN_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFLESSONPLAN_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFFLESSONPLAN REGISTER\r\nexport const registerStafflessonplan = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFLESSONPLAN_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFLESSONPLAN_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFFLESSONPLAN UPDATE\r\nexport const updateStafflessonplan = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFLESSONPLAN_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFLESSONPLAN_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React , { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { registerStafflessonplan, updateStafflessonplan, deleteStafflessonplan, getStafflessonplans } from './../../../actions/staff/stafflessonplan';\r\nimport { getThemes } from './../../../actions/setting/theme';\r\nimport { getWeeks } from './../../../actions/setting/week';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport CKEditor from 'ckeditor4-react';\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CCardHeader,\r\n  CCard,\r\n  CCardBody,\r\n  CButton,\r\n  CFormGroup,\r\n  CInput,\r\n  CSelect,\r\n  CLabel,\r\n  CCardFooter\r\n\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { setElement } from './../../../actions/common';\r\nconst termarray ={\r\n    1:'First term',\r\n    2:'Second term',\r\n    3:'Third term',\r\n    4:'Alternative/Obsolete'\r\n  }\r\nconst Stafflessonplans = (props) => {\r\n    const history = useHistory()\r\n    const subjectid = props.subjectid\r\n    const claszid = props.claszid\r\n    const termid = props.termid\r\n    const staffid = props.staffid\r\n    const sessionid = props.sessionid\r\n    const subject = props.subject\r\n\r\n    const [id, setid] = useState(null)\r\n    const [schemeid, setschemeid] = useState('')\r\n    const [schemedata, setschemedata] = useState('')\r\n    const [schemedatas, setschemedatas] = useState({})\r\n    const [weekid, setweekid] = useState('')\r\n    const [contact, setcontact] = useState('')\r\n    const [period, setperiod] = useState('')\r\n    const [topic, settopic] = useState('')\r\n    const [subtopic, setsubtopic] = useState('')\r\n    const [method, setmethod] = useState('')\r\n    const [population, setpopulation] = useState('')\r\n    const [content, setcontent] = useState('')\r\n    const [material, setmaterial] = useState('')\r\n    const [objective, setobjective] = useState('')\r\n    const [assessment, setassessment] = useState('')\r\n    const [note, setnote] = useState('')\r\n    const [reference, setreference] = useState('')\r\n\r\n    useEffect(() => {\r\n        let params = {\r\n            data:JSON.stringify(\r\n            {\r\n                'subjectid':subjectid\r\n            }),\r\n            cat:'selected',\r\n            table:'themes',\r\n            narration:'get themes'\r\n      \r\n        }\r\n        props.getThemes(params)\r\n      }, [subjectid])\r\n\r\n    useEffect(() => {\r\n        let params = {\r\n            data:JSON.stringify(\r\n            {\r\n                'termid':termid\r\n            }),\r\n            cat:'selected',\r\n            table:'weeks',\r\n            narration:'get Weeks'\r\n        }\r\n        props.getWeeks(params)\r\n        \r\n      }, [termid])   \r\n   \r\n    useEffect(() => {\r\n        let params = {\r\n          data:JSON.stringify(\r\n          {\r\n              'staffid':staffid,\r\n              'subjectid':subjectid,\r\n              'termid':termid,\r\n              'weekid':weekid\r\n          }),\r\n          cat:'selected',\r\n          table:'stafflessonplan',\r\n          narration:`get all staff lessonplan ${staffid}`\r\n        }\r\n       props.getStafflessonplans(params);\r\n        \r\n    }, [staffid, subjectid, claszid, termid])\r\n    \r\n    useEffect(() => {\r\n      if(parseInt(props.rowid) > 0)\r\n      {\r\n        let data = props.data; \r\n        setid(data.id)\r\n        setschemeid(data.schemeid)\r\n        setweekid(data.weekid)\r\n        setcontact(data.contact)\r\n        setperiod(data.period)\r\n        settopic(data.topic)\r\n        setsubtopic(data.subtopic)\r\n        setmethod(data.method)\r\n        setpopulation(data.population)\r\n        setcontent(data.content)\r\n        setobjective(data.objective)\r\n        setassessment(data.assessment)\r\n        setnote(data.note)\r\n        setreference(data.reference)\r\n      }\r\n    }, [props.rowid, props.data])\r\n   \r\n    const handleSubmit = () =>{\r\n        let fd = new FormData();\r\n        fd.append('schemeid', schemeid);\r\n        fd.append('weekid', weekid);\r\n        fd.append('contact', contact);\r\n        fd.append('period', period);\r\n        fd.append('topic', topic);\r\n        fd.append('subtopic', subtopic);\r\n        fd.append('subtopic', subtopic);\r\n        fd.append('method', method);\r\n        fd.append('population', population);\r\n        fd.append('content', content);\r\n        fd.append('objective', objective);\r\n        fd.append('assessment', assessment);\r\n        fd.append('note', note);\r\n        fd.append('reference', reference);\r\n\r\n        fd.append('table', 'stafflessonplans');\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'update');\r\n            fd.append('narration', 'Updating staff lesson plan');\r\n            props.updateStafflessonplan(fd)\r\n        }else\r\n        {\r\n            fd.append('cat', 'insert');\r\n            fd.append('narration', 'inserting new lesson plan');\r\n            fd.append('staffid', staffid);\r\n            fd.append('termid', termid);\r\n            fd.append('claszid', claszid);\r\n            fd.append('subjectid', subjectid);\r\n            props.registerStafflessonplan(fd)\r\n        }\r\n\r\n    }\r\n    const changeschemeid= (e) =>{\r\n        setschemeid(e.target.value)\r\n        let dt = Array.isArray(props.theme.themes) ? props.theme.themes.filter(rw=>rw.id == e.target.value):{'name':'-.-'}\r\n        let nm = Array.isArray(dt) && dt.length > 0 ? termarray[dt[0].termid] +\" \"+dt[0].claszabbrv+\" \"+dt[0].name: '-';\r\n        setschemedata(nm)\r\n        setschemedatas(dt[0])\r\n    }\r\n    const changecontact= (e) =>{\r\n        setcontact(e.target.value)\r\n    }\r\n    const changeperiod= (e) =>{\r\n        setperiod(e.target.value)\r\n    }\r\n    const changeweekid= (e) =>{\r\n        setweekid(e.target.value)\r\n    }\r\n    \r\n    let schemearray1 = Array.isArray(props.theme.themes) ? props.theme.themes.filter(rw=>rw !== null & rw !== undefined).map((rw, ind)=>{\r\n    return <option value={rw.id}>{`${termarray[rw.termid]} ${rw.claszabbrv} ${rw.name}`}</option>\r\n    }):[]\r\n    \r\n    let contactarray = []\r\n    let weekidarray = Array.isArray(props.week.weeks) ? props.week.weeks.filter(rw=>rw !== null & rw !== undefined).map((rw, ind)=>{\r\n        return <option value={rw.id}>{rw.name}</option>\r\n        }):[];\r\n   \r\n    \r\n    let { \r\n        name,\r\n        content:contento,\r\n        objective:objectiveo,\r\n        material:materialo,\r\n        claszname,\r\n        subjectname,\r\n    } = schemedatas || '';\r\n\r\n  return (\r\n    <>\r\n    <CRow className='align-center mx-auto d-flex ' sm={12}>\r\n    <CCol sm=\"6\" md=\"6\" className='mx-auto'>\r\n        <CCard>\r\n            <CCardHeader>\r\n                <CRow>\r\n                    <CCol>\r\n                    <h4>{parseInt(id) > 0 ? 'Edit':'Add'} Lesson Plan</h4>\r\n                    </CCol>\r\n                    <CCol xs={2}>\r\n                    <button  \r\n                        onClick={()=>props.goBack()}\r\n                        className=\"btn btn-info\"><i className='fa fa-backward'></i></button>\r\n                    </CCol> \r\n                </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <CRow>\r\n            <CCol xs=\"12\">\r\n                    <CFormGroup>\r\n                        <CLabel htmlFor=\"schemeid\">Scheme of Work<i className='text-danger'>*</i></CLabel>\r\n                        <CSelect \r\n                            custom \r\n                            id=\"schemeid\" \r\n                            defaultValue={schemeid}\r\n                            onChange={changeschemeid} \r\n                        >\r\n                            <option >Select</option>\r\n                            {schemearray1}\r\n                        </CSelect>\r\n                    </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\"><strong style={{textTransform:'uppercase'}}>{schemedata}</strong></CCol>\r\n                <CCol xs=\"12\">\r\n                <CFormGroup>\r\n                    <CLabel htmlFor=\"subtopic\">Subtopic</CLabel>\r\n                    <CInput \r\n                        id=\"subtopic\" \r\n                        name='text'\r\n                        defaultValue={subtopic}\r\n                        placeholder=\"Mathematics Education \"\r\n                        onChange={(e)=>setsubtopic(e.target.value)} \r\n                        />\r\n                </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\">\r\n                    <CFormGroup>\r\n                        <CLabel htmlFor=\"weekid\"><strong>Week <i className='text-danger'>*</i></strong></CLabel>\r\n                        <CSelect \r\n                            custom \r\n                            id=\"weekid\" \r\n                            defaultValue={weekid}\r\n                            onChange={changeweekid} \r\n                        >\r\n                            <option >Select</option>\r\n                            {weekidarray}\r\n                        </CSelect>\r\n                    </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm=\"6\">\r\n                    <CFormGroup>\r\n                        <CLabel htmlFor=\"contact\"><strong>Contact/Period<i className='text-danger'>*</i></strong></CLabel>\r\n                        <CSelect \r\n                            custom \r\n                            id=\"contact\" \r\n                            defaultValue={contact}\r\n                            onChange={changecontact} \r\n                        >\r\n                            <option >Select</option>\r\n                            {contactarray}\r\n                        </CSelect>\r\n                    </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" sm=\"6\">\r\n                    <CFormGroup>\r\n                        <CLabel htmlFor=\"period\"><strong>Time(minutes)<i className='text-danger'>*</i></strong></CLabel>\r\n                        <CSelect \r\n                            custom \r\n                            id=\"period\" \r\n                            defaultValue={period}\r\n                            onChange={changeperiod} \r\n                        >\r\n                            <option >Select</option>\r\n                            {contactarray}\r\n                        </CSelect>\r\n                    </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\">\r\n                <CLabel htmlFor=\"content\"><strong>Presentation/Steps<i className='text-danger'>*</i></strong></CLabel>\r\n                <CKEditor\r\n                data ={content}\r\n                type='classic'\r\n                config={{\r\n                    toolbar:[[\r\n                        'Cut', 'Copy', 'Paste', \r\n                        'PasteText', 'PasteFromWord', \r\n                        'Undo', 'Redo', 'NumberedList', 'BulletedList',\r\n                        'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', 'CopyFormatting', 'RemoveFormat' \r\n                    ]]\r\n                }}\r\n                \r\n\r\n                onChange={e=>setcontent(e.editor.getData())}\r\n                />\r\n                </CCol>\r\n                <CCol xs=\"12\">\r\n                <CLabel htmlFor=\"objective\"><strong>Specific Objectives<i className='text-danger'>*</i></strong></CLabel>\r\n                <CKEditor\r\n                data ={objective}\r\n                onChange={e=>setobjective(e.editor.getData())}\r\n                type='classic'\r\n                config={{\r\n                    toolbar:[[\r\n                        'Cut', 'Copy', 'Paste', \r\n                        'PasteText', 'PasteFromWord', \r\n                        'Undo', 'Redo', 'NumberedList', 'BulletedList',\r\n                        'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', 'CopyFormatting', 'RemoveFormat' \r\n                    ]]\r\n                }}\r\n                \r\n                />\r\n                </CCol>\r\n                <CCol xs=\"12\">\r\n                    <CLabel htmlFor=\"material\"><strong>Lesson materials<i className='text-danger'>*</i></strong></CLabel>\r\n                <CKEditor\r\n                data ={material}\r\n                onChange={e=>setmaterial(e.editor.getData())}\r\n                type='classic'\r\n                config={{\r\n                    toolbar:[[\r\n                        'Cut', 'Copy', 'Paste', \r\n                        'PasteText', 'PasteFromWord', \r\n                        'Undo', 'Redo', 'NumberedList', 'BulletedList',\r\n                        'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', 'CopyFormatting', 'RemoveFormat' \r\n                    ]]\r\n                }}\r\n                \r\n                />\r\n                </CCol>\r\n                <CCol xs=\"12\">\r\n                    <CLabel htmlFor=\"assessment\"><strong>Lesson assessments<i className='text-danger'>*</i></strong></CLabel>\r\n                    <CKEditor\r\n                    data ={assessment}\r\n                    onChange={e=>setassessment(e.editor.getData())}\r\n                    type='classic'\r\n                config={{\r\n                    toolbar:[[\r\n                        'Cut', 'Copy', 'Paste', \r\n                        'PasteText', 'PasteFromWord', \r\n                        'Undo', 'Redo', 'NumberedList', 'BulletedList',\r\n                        'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', 'CopyFormatting', 'RemoveFormat' \r\n                    ]]\r\n                }}\r\n                \r\n                    />\r\n                </CCol>\r\n                <CCol xs=\"12\">\r\n                    <CLabel htmlFor=\"reference\"><strong>Reference Materials<i className='text-danger'>*</i></strong></CLabel>\r\n                    <CKEditor\r\n                    data ={reference}\r\n                    onChange={e=>setreference(e.editor.getData())}\r\n                    type='classic'\r\n                config={{\r\n                    toolbar:[[\r\n                        'Cut', 'Copy', 'Paste', \r\n                        'PasteText', 'PasteFromWord', \r\n                        'Undo', 'Redo', 'NumberedList', 'BulletedList',\r\n                        'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', 'CopyFormatting', 'RemoveFormat' \r\n                    ]]\r\n                }}\r\n                \r\n                    />\r\n                </CCol>\r\n                <CCol xs=\"12\">\r\n                    <CLabel htmlFor=\"note\"><strong>Lesson notes<i className='text-danger'>(Optional)</i></strong></CLabel>\r\n                    <CKEditor\r\n                    data ={note}\r\n                    onChange={e=>setnote(e.editor.getData())}\r\n                    />\r\n                </CCol>\r\n            </CRow>\r\n            \r\n            </CCardBody>\r\n            <CCardFooter>\r\n                <CButton block type=\"button\" size=\"sm\" color=\"primary\" onClick={handleSubmit}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                <CButton block type=\"button\" size=\"sm\" color=\"danger\" onClick={()=>props.handleClose()}><CIcon name=\"cil-ban\" /> Close</CButton>\r\n            </CCardFooter>\r\n        </CCard>\r\n        </CCol>\r\n\r\n    <CCol sm=\"6\" md=\"6\" className='mx-auto'>\r\n        <CCard>\r\n            <CCardHeader>\r\n            \r\n            <CRow>\r\n                    <CCol>\r\n                    <h4>Lesson Plan: Preveiw</h4>\r\n                    </CCol>\r\n                    <CCol xs={2}>\r\n                    <button  \r\n                        onClick={()=>props.goBack()}\r\n                        className=\"btn btn-info\"><i className='fa fa-backward'></i></button>\r\n                    </CCol> \r\n                </CRow>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <CRow>\r\n                <table width=\"100%\">\r\n                    <tr>\r\n                        <td width='20%' className='strong'><strong>Week</strong></td>\r\n                        <td>{weekid}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width='20%' className='strong'><strong>Class</strong></td>\r\n                        <td>{weekid}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width='20%' className='strong'><strong>Subject</strong></td>\r\n                        <td>{weekid}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width='20%' className='strong'><strong>Theme</strong></td>\r\n                        <td>{name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width='20%' className='strong'><strong>Topic</strong></td>\r\n                        <td>{subtopic}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width='20%' className='strong'><strong>Instructional Materials</strong></td>\r\n                        <td><div style={{whiteSpace:'pre-wraps'}}  dangerouslySetInnerHTML={{__html: materialo}} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width='20%' className='strong'><strong>General Objectives</strong></td>\r\n                        <td><div style={{whiteSpace:'pre-wraps'}}  dangerouslySetInnerHTML={{__html: objectiveo}} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width='20%' className='strong'><strong>Specific Objectives</strong></td>\r\n                        <td>\r\n                            {'At the end of the lesson students should be able to'}\r\n                            <div style={{whiteSpace:'pre-wraps'}}  dangerouslySetInnerHTML={{__html: objective}} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width='20%' className='strong'><strong>Teaching Methodology</strong></td>\r\n                        <td><div style={{whiteSpace:'pre-wraps'}}  dangerouslySetInnerHTML={{__html: method}} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width='20%' className='strong'><strong>Lesson Content</strong></td>\r\n                        <td><div style={{whiteSpace:'pre-wraps'}}  dangerouslySetInnerHTML={{__html: contento}} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width='20%' className='strong'><strong>Presentation</strong></td>\r\n                        <td>\r\n                        {'The Teacher presented the lesson as follows'}\r\n                            <div style={{whiteSpace:'pre-wraps'}}  dangerouslySetInnerHTML={{__html: content}} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width='20%' className='strong'><strong>Evaluation / Assessment</strong></td>\r\n                        <td><div style={{whiteSpace:'pre-wraps'}}  dangerouslySetInnerHTML={{__html: assessment}} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td width='20%' className='strong'><strong>Summary / Conclusion</strong></td>\r\n                        <td><div style={{whiteSpace:'pre-wraps'}}  dangerouslySetInnerHTML={{__html: assessment}} /></td>\r\n                    </tr>\r\n                </table>\r\n            </CRow>\r\n            </CCardBody>\r\n        </CCard>\r\n    </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    user : state.userReducer,\r\n    theme:state.themeReducer,\r\n    stafflessonplan: state.stafflessonplanReducer,\r\n    week:state.weekReducer\r\n  })\r\n  export default connect(mapStateToProps, {\r\n    registerStafflessonplan,\r\n    updateStafflessonplan,\r\n    getThemes,\r\n    getWeeks,\r\n    getStafflessonplans\r\n    \r\n  })(Stafflessonplans)\r\n  \r\n","import React, { useEffect }  from 'react'\r\nimport { useHistory} from 'react-router-dom'\r\nimport { getStaffstudents, updateStaffstudent, registerStaffstudent, deleteStaffstudent} from './../../../actions/staff/staffstudent'\r\nimport CIcon from '@coreui/icons-react'\r\nimport SearchDashboard3 from '../SearchDashboard3'\r\nimport { connect } from 'react-redux'\r\nimport { CCard, CCardBody, CCardHeader, CCol, CContainer, CRow } from '@coreui/react'\r\nimport Swal from'sweetalert'\r\nimport { deleteStaffclass } from '../../../actions/staff/staffclass'\r\n\r\n\r\n\r\nconst Studentclasss = (props) => {\r\n  let history = useHistory()\r\n  let data = props.staffstudents.staffstudents && Array.isArray(props.staffstudents.staffstudents) ? props.staffstudents.staffstudents.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let clientid = props.clientid;\r\n  let termid = props.termid;\r\n  let sessionid = props.sessionid;\r\n  let subjectid = props.subjectid;\r\n  let subject = props.subject;\r\n  let groupid = 3;\r\n\r\n \r\n  useEffect(() => {\r\n    if(parseInt(subjectid) > 0 ){\r\n     let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'termid':termid,\r\n            'itemid':subjectid,\r\n            'sessionid':sessionid,\r\n            'itemid1':clientid,\r\n            'grp':groupid\r\n        }),\r\n        cat:'staffclass',\r\n        table:'accessstudentsubject',\r\n        narration:'get staff student subjects'\r\n  \r\n      }\r\n      props.getStaffstudents(params)\r\n    }\r\n  }, [termid,subjectid, sessionid, groupid, clientid])\r\n\r\nconst loadStudent = (studentid) =>{\r\n    let fd = new FormData();\r\n      fd.append('itemid', subjectid);\r\n      fd.append('itemid1', clientid);\r\n      fd.append('clientid', studentid.id);\r\n      fd.append('checker', groupid+'_'+termid+'_'+studentid.id+'_'+subjectid);\r\n      fd.append('table', 'accessstudentsubject');\r\n      fd.append('sessionid', sessionid);\r\n     \r\n        //INSERT\r\n        fd.append('grp', groupid);\r\n        fd.append('termid', termid);\r\n        fd.append('cat', 'inserts');\r\n        props.registerStaffstudent(fd)\r\n      \r\n}\r\n\r\nconst onRemove =(id)=>{\r\n     Swal(\"Are you sure you want to delete you will not be able to restore the data.\")\r\n    .then((value) => {\r\n      if(value == true && parseInt(id) > 0){\r\n          let fd = new FormData();\r\n          fd.append('id', id);\r\n          fd.append('sessionid', sessionid)\r\n          fd.append('table', 'accessstudentsubject')\r\n          fd.append('cat', 'deletes')\r\n          props.deleteStaffstudent(fd, id);\r\n      }else{\r\n        Swal(`Not deleted`);\r\n      }\r\n      \r\n    });\r\n  \r\n}\r\n\r\nlet tabl = data.filter(rw=>rw !== null && rw !== undefined).map((row, ind)=>{\r\n    return <tr key={ind}\r\n    >\r\n    <td className=\"text-center\" width='60px'>\r\n      <span>{row.admission_no}</span>\r\n    </td>\r\n    <td width='340px' valign='middle' className='container'>\r\n         {`${row.admission_no}`}\r\n    </td>\r\n    <td >\r\n      <span className='pull-right'>\r\n      <button  onClick={()=>onRemove(row.id)} className='btn btn-sm btn-round btn-danger '><CIcon  size='lg' name=\"cil-x\"/></button>\r\n      </span>\r\n    </td>\r\n  </tr>\r\n});\r\n  return (\r\n   <>\r\n   <CCard>\r\n     <CCardHeader>\r\n       <CContainer>\r\n         <CRow>\r\n           <CCol>\r\n              <h4>{subject.itemname1}{\" \"}{subject.itemname}</h4>\r\n            </CCol>\r\n            <CCol xs={2}>\r\n            <button  \r\n                onClick={()=>props.goBack()}\r\n                className=\"btn btn-info\"><i className='fa fa-backward'></i></button>\r\n            </CCol>\r\n         </CRow>\r\n      </CContainer>\r\n   </CCardHeader>\r\n   <CCardBody className='table-responsive'>\r\n   <table className=\"table table-bordered mb-0  d-sm-table\">\r\n        <thead className=\"thead-light\">\r\n            <tr>\r\n            <th className=\"text-center\"><CIcon name=\"cil-people\" /></th>\r\n            <th>Students</th>\r\n            <th>Remove</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {tabl}\r\n        </tbody>\r\n  </table>\r\n  </CCardBody>\r\n  </CCard>\r\n   </>\r\n  )\r\n}\r\nconst mapStatetoProps = (state)=>({\r\n staffstudents:state.staffstudentReducer\r\n})\r\nexport default connect(mapStatetoProps, {\r\n    getStaffstudents,\r\n    updateStaffstudent,\r\n    registerStaffstudent,\r\n    deleteStaffstudent\r\n}) (Studentclasss)\r\n  \r\n","import React, {useEffect, useMemo, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {  \r\n    CCol, \r\n    CRow, \r\n    CDropdown, \r\n    CDropdownToggle, \r\n    CDropdownMenu, \r\n    CDropdownItem,\r\n    CWidgetDropdown,\r\n    CCollapse\r\n} from '@coreui/react';\r\nimport StaffDashboardDefault from './StaffDashboardDefault'\r\nimport { getStaffsubjects } from './../../actions/staff/staffsubject'\r\nimport { getCas } from './../../actions/setting/ca'\r\nimport CIcon from '@coreui/icons-react'\r\nimport ChartLineSimple from '../charts/ChartLineSimple'\r\nimport ChartBarSimple from '../charts/ChartBarSimple'\r\nimport Students from './Subjects/Students'\r\nimport PlanForm from './Subjects/PlanForm'\r\nimport Plan from './Subjects/Plan'\r\nimport Theme from './../setting/Stage/Theme'\r\nconst Dashboard = (props) => {\r\n    \r\n  const [subject, setSubject]  = useState([])\r\n  const [page, setPage]  = useState(0)\r\n  const [collapser, setCollapser]  = useState(true)\r\n  \r\n  useEffect(() => {\r\n\r\n    if(props.user.activeterm !== undefined)\r\n    {\r\n       let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'termid':props.user.activeterm.termid,\r\n            'sessionid':props.user.activeterm.sessionid,\r\n            'clientid':props.user.user.id,\r\n            'grp':2\r\n        }),\r\n        cat:'staffclass',\r\n        table:'accessstaffsubjectnum',\r\n        narration:'get staffsubjects'\r\n  \r\n      }\r\n      props.getStaffsubjects(params)\r\n      let params1 = {\r\n        data:JSON.stringify(\r\n        {\r\n          'termid':props.user.activeterm.termid,\r\n          'schoolid':props.user.activeterm.sessionid\r\n        }),\r\n        cat:'dropdownca',\r\n        table:'dropdownca',\r\n        narration:'get ca'\r\n  \r\n      }\r\n      props.getCas(params1)\r\n    } \r\n    \r\n  }, [])\r\n\r\n  const goBack = () =>{\r\n    setPage(0);\r\n    setCollapser(true)\r\n  }\r\n\r\n  const loadStudents = (sub) =>{\r\n      setSubject(sub)\r\n      setPage(1);\r\n      setCollapser(false)\r\n  }\r\n  const loadRecords = (sub) =>{\r\n      setSubject(sub)\r\n      setPage(2);\r\n      setCollapser(false)\r\n  }\r\n  const loadScheme = (sub) =>{\r\n    setSubject(sub)\r\n      setPage(3);\r\n      setCollapser(false)\r\n  }\r\n  const loadPlan = (sub) =>{\r\n      setSubject(sub)\r\n      setPage(4);\r\n      setCollapser(false)\r\n  }\r\n  const loadAnalysis = (sub) =>{\r\n      setSubject(sub)\r\n      setPage(5);\r\n      setCollapser(false)\r\n  }\r\n \r\nreturn (\r\n    <>\r\n    <CRow>\r\n      <StaffDashboardDefault />\r\n      </CRow>\r\n      <CCollapse show={collapser}>\r\n      <CRow>\r\n        { \r\n          Array.isArray(props.staffsubject.staffsubjects) ? props.staffsubject.staffsubjects.filter(rw=>rw !== null & rw !== undefined).map((prp, ind)=>{\r\n            let numz =prp.num !== null && prp.num !== undefined ? prp.num.split(\",\"):[];  \r\n            let numz1 = numz.filter(rw=>rw !== null || rw=='').filter(rw=>parseInt(rw.split(\":\")[1]) == parseInt(prp.itemid1) && parseInt(rw.split(\":\")[3]) == parseInt(prp.itemid)).length\r\n            let cl = parseInt(prp.is_active) === 0 ? \"gradient-info\" : \"gradient-danger\";\r\n            let cl1 = parseInt(prp.is_active) === 0 ? \"cil-settings\" : \"fa fa-lock\";\r\n            let cl2 = parseInt(prp.is_active) === 0 ? \"\" : \"disabled\";\r\n            return <CCol sm=\"6\" lg=\"4\"  key={ind}>\r\n              <CWidgetDropdown\r\n                color={cl}\r\n                header={numz1 + ' Students'}\r\n                text={`${prp.itemname1} ${prp.itemname} `}\r\n                footerSlot={\r\n                  <ChartLineSimple\r\n                    className=\"mt-3\"\r\n                    style={{height: '70px'}}\r\n                    backgroundColor=\"rgba(255,255,255,.2)\"\r\n                    dataPoints={[78, 81, 80, 45, 34, 12, 40]}\r\n                    options={{ elements: { line: { borderWidth: 2.5 }}}}\r\n                    pointHoverBackgroundColor=\"warning\"\r\n                    label=\"Members\"\r\n                    labels=\"months\"\r\n                  />}\r\n              >\r\n                <CDropdown>\r\n                  <CDropdownToggle color=\"transparent\">\r\n                    <CIcon name={cl1}/>\r\n                  </CDropdownToggle>\r\n                  <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n                    <CDropdownItem disabled={cl2} onClick={()=>loadStudents(prp)}>Students</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>loadRecords(prp)}>Records</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>loadScheme(prp)}>Scheme of Work</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>loadPlan(prp)}>Lesson Plan</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>loadAnalysis(prp)}>Result Analysis</CDropdownItem>\r\n                  </CDropdownMenu>\r\n                </CDropdown>\r\n              </CWidgetDropdown>\r\n            </CCol>\r\n          }):''\r\n        }\r\n     \r\n      </CRow>\r\n      \r\n      </CCollapse>\r\n      {page == 1 ? \r\n      <Students\r\n        termid={props.user.activeterm.termid}\r\n        sessionid={props.user.activeterm.sessionid}\r\n        clientid={subject.clientid}\r\n        subjectid={subject.itemid1}\r\n        claszid={subject.itemid}\r\n        subject={subject}\r\n        goBack={goBack}\r\n      />:''\r\n      }\r\n\r\n      {page == 3 ? \r\n      <Theme\r\n        pid={subject.itemid1}\r\n        para={{'icon':process.env.PUBLIC_URL + '/icons/subject.png'}}\r\n        title={props.user.activeterm}\r\n        school={props.user.activeschool} \r\n        termid={props.user.activeterm.termid}\r\n        sessionid={props.user.activeterm.sessionid}\r\n        clientid={props.user.user.id}\r\n        subject={subject}\r\n        goBack={goBack}\r\n      />:''\r\n      }\r\n\r\n      {page == 4 ? \r\n      <>\r\n      <PlanForm\r\n        subjectid={subject.itemid1}\r\n        subject={subject}\r\n        claszid={subject.itemid}\r\n        termid={props.user.activeterm.termid}\r\n        sessionid={props.user.activeterm.sessionid}\r\n        staffid={props.user.user.id}\r\n        goBack={goBack}\r\n        \r\n      />\r\n      <Plan\r\n        subjectid={subject.itemid1}\r\n        subject={subject}\r\n        claszid={subject.itemid}\r\n        termid={props.user.activeterm.termid}\r\n        sessionid={props.user.activeterm.sessionid}\r\n        staffid={props.user.user.id}\r\n        goBack={goBack}\r\n        \r\n      />\r\n      </>\r\n      \r\n      :''\r\n      }\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  staffsubject:state.staffsubjectReducer,\r\n  user:state.userReducer,\r\n})\r\nexport default connect(mapStateToProps, { getStaffsubjects, getCas}) (Dashboard)","import React from 'react'\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTooltip\r\n} from '@coreui/react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n  const history = useHistory() \r\n   return (\r\n    <CCardHeader>\r\n          <CRow>\r\n          <CCol xs={2} sm=\"1\">\r\n                <img\r\n                    src={process.env.PUBLIC_URL + props.icon}\r\n                    height='40px'\r\n                />\r\n          </CCol>\r\n            <CCol xs={6} sm=\"7\">\r\n            <h4 id=\"traffic\" className=\"card-title mb-0\">{props.title}</h4>\r\n            <div className=\"small text-muted\">{props.school != undefined && props.school.hasOwnProperty('name') && props.school.name ? props.school.name: <i>No school active</i>}</div>\r\n            </CCol>\r\n            <CCol xs={4} sm=\"4\" className=\"d-md-block\">\r\n              <CButtonGroup className=\"float-right\">\r\n                <CTooltip content=\"Click to go back\">\r\n              <CButton\r\n                color=\"secondary\" \r\n                onClick={()=>history.goBack()}\r\n                \r\n              ><i className='fa fa-backward'></i></CButton></CTooltip>\r\n              <CTooltip content=\"Add new record\">\r\n              <CButton \r\n                  disabled={props.editer === false ? true : false}\r\n                  data-target='#formz' \r\n                  data-toggle=\"collapse\" \r\n                  color=\"primary\" \r\n                  onClick={()=>props.toggle()}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-plus'></i>\r\n              </CButton></CTooltip>\r\n              </CButtonGroup>\r\n            </CCol>\r\n          </CRow>\r\n</CCardHeader>)\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios';\r\nimport {\r\n    STAFF_GET_ONE,\r\n    STAFF_GET_MULTIPLE,\r\n    STAFF_GET_ALL,\r\n    STAFF_GET_BIRTHDAY,\r\n    STAFF_GET_SEARCH,\r\n    STAFF_REGISTER_SUCCESS,\r\n    STAFF_REGISTER_FAIL,\r\n    STAFF_LOADING,\r\n    STAFF_LOADING_ERROR,\r\n    STAFF_UPDATE_SUCCESS,\r\n    STAFF_UPDATE_FAIL,\r\n    STAFF_DELETE_SUCCESS,\r\n    STAFF_DELETE_FAIL\r\n} from \"./../../types/staff/staff\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'staffs';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFF \r\nexport const getStaffs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STAFF \r\nexport const getStaffAll = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                      \r\n                dispatch({\r\n                    type: STAFF_GET_ALL,\r\n                    payload: res.data\r\n                 })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                   type : STAFF_LOADING_ERROR,\r\n                   payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const searchStaff = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_SEARCH,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const birthday = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_BIRTHDAY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET SINGLE STAFF \r\nexport const getStaff = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFF_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFF DELETE\r\nexport const deleteStaff = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFF REGISTER\r\nexport const registerStaff = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFF UPDATE\r\nexport const updateStaff = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    CLASZ_GET_ONE,\r\n    CLASZ_GET_MULTIPLE,\r\n    CLASZ_REGISTER_SUCCESS,\r\n    CLASZ_REGISTER_FAIL,\r\n    CLASZ_LOADING,\r\n    CLASZ_LOADING_ERROR,\r\n    CLASZ_UPDATE_SUCCESS,\r\n    CLASZ_UPDATE_FAIL,\r\n    CLASZ_DELETE_SUCCESS,\r\n    CLASZ_DELETE_FAIL\r\n} from \"../../types/setting/clasz\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'claszs';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CLASZ \r\nexport const getClaszs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : CLASZ_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CLASZ_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CLASZ_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CLASZ \r\nexport const getClasz = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CLASZ_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CLASZ DELETE\r\nexport const deleteClasz = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CLASZ REGISTER\r\nexport const registerClasz = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CLASZ UPDATE\r\nexport const updateClasz = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STUDENT_GET_ONE,\r\n    STUDENT_GET_MULTIPLE,\r\n    STUDENT_GET_SEARCH,\r\n    STUDENT_REGISTER_SUCCESS,\r\n    STUDENT_REGISTER_FAIL,\r\n    STUDENT_LOADING,\r\n    STUDENT_LOADING_ERROR,\r\n    STUDENT_UPDATE_SUCCESS,\r\n    STUDENT_UPDATE_FAIL,\r\n    STUDENT_DELETE_SUCCESS,\r\n    STUDENT_DELETE_FAIL\r\n} from \"./../../types/student/student\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'students';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL STUDENT \r\nexport const getStudents = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : STUDENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENT \r\nexport const searchStudent = params => (dispatch, getState) => {\r\n   \r\n    dispatch({type : STUDENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENT_GET_SEARCH,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STUDENT \r\nexport const getStudent = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STUDENT DELETE\r\nexport const deleteStudent = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENT REGISTER\r\nexport const registerStudent = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STUDENT UPDATE\r\nexport const updateStudent = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    CA_GET_ONE,\r\n    CA_GET_MULTIPLE,\r\n    CA_REGISTER_SUCCESS,\r\n    CA_REGISTER_FAIL,\r\n    CA_LOADING,\r\n    CA_LOADING_ERROR,\r\n    CA_UPDATE_SUCCESS,\r\n    CA_UPDATE_FAIL,\r\n    CA_DELETE_SUCCESS,\r\n    CA_DELETE_FAIL\r\n} from \"../../types/setting/ca\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'cas';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CA \r\nexport const getCas = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : CA_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CA_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CA_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CA \r\nexport const getCa = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CA_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CA DELETE\r\nexport const deleteCa = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CA REGISTER\r\nexport const registerCa = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CA UPDATE\r\nexport const updateCa = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    THEME_GET_ONE,\r\n    THEME_GET_MULTIPLE,\r\n    THEME_GET_SUMMARY,\r\n    THEME_GET_DROPDOWNS,\r\n    THEME_REGISTER_SUCCESS,\r\n    THEME_REGISTER_FAIL,\r\n    THEME_LOADING,\r\n    THEME_LOADING_ERROR,\r\n    THEME_UPDATE_SUCCESS,\r\n    THEME_UPDATE_FAIL,\r\n    THEME_DELETE_SUCCESS,\r\n    THEME_DELETE_FAIL\r\n} from \"../../types/setting/theme\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'themes';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL THEME \r\nexport const getThemes = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : THEME_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: THEME_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : THEME_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL THEME \r\nexport const getThemesummary = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = 'themesummary';\r\n\r\n    dispatch({type : THEME_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: THEME_GET_SUMMARY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : THEME_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET ALL THEME \r\nexport const getThemedropdowns = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : THEME_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: THEME_GET_DROPDOWNS,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : THEME_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE THEME \r\nexport const getTheme = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : THEME_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//THEME DELETE\r\nexport const deleteTheme = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: THEME_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : THEME_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//THEME REGISTER\r\nexport const registerTheme = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: THEME_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : THEME_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //THEME UPDATE\r\nexport const updateTheme = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: THEME_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : THEME_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STUDENTSCORE_GET_ONE,\r\n    STUDENTSCORE_GET_MULTIPLE,\r\n    STUDENTSCORE_GET_MULTIPLE_CA,\r\n    STUDENTSCORE_DELETE_CA,\r\n    STUDENTSCORE_GET_SUMMARY,\r\n    STUDENTSCORE_GET_SINGLE,\r\n    STUDENTSCORE_REGISTER_SUCCESS,\r\n    STUDENTSCORE_REGISTER_FAIL,\r\n    STUDENTSCORE_REGISTER_CA,\r\n    STUDENTSCORE_REGISTER_CA_FAIL,\r\n    STUDENTSCORE_LOADING,\r\n    STUDENTSCORE_LOADING_ERROR,\r\n    STUDENTSCORE_UPDATE_SUCCESS,\r\n    STUDENTSCORE_SET_SUCCESS,\r\n    STUDENTSCORE_SET_FAIL,\r\n    STUDENTSCORE_SET_LOAD,\r\n    STUDENTSCORE_UPDATE_FAIL,\r\n    STUDENTSCORE_DELETE_SUCCESS,\r\n    STUDENTSCORE_DELETE_FAIL\r\n} from \"./../../types/student/studentscore\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL STUDENTSCORE \r\nexport const getStudentscores = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTSCORE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTSCORE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTSCORE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENTSCORE \r\nexport const getStudentscorecas = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n        params.token = MAIN_TOKEN;\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTSCORE_GET_MULTIPLE_CA,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTSCORE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENTSCORE \r\nexport const getStudentscoreSummary = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTSCORE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTSCORE_GET_SUMMARY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTSCORE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENTSCORE \r\nexport const getStudentscoresSingle = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTSCORE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTSCORE_GET_SINGLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTSCORE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STUDENTSCORE \r\nexport const getStudentscore = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENTSCORE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STUDENTSCORE DELETE\r\nexport const deleteStudentscore = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSCORE_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSCORE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENTSCORE REGISTER\r\nexport const registerStudentscore = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSCORE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSCORE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n//STUDENTSCORE REGISTER\r\nexport const insertStudentca = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSCORE_REGISTER_CA,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSCORE_REGISTER_CA_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n//STUDENTSCORE REGISTER\r\nexport const deleteStudentca = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSCORE_DELETE_CA,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSCORE_REGISTER_CA_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STUDENTSCORE UPDATE\r\nexport const updateStudentscore = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSCORE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSCORE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n//STUDENTSCORE UPDATE\r\nexport const setStudentscore = (data) => (dispatch, getState) => {\r\n    //body\r\n    dispatch({type : STUDENTSCORE_SET_LOAD});\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSCORE_SET_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSCORE_SET_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};","import axios from 'axios';\r\nimport {\r\n    STAFFSUBJECT_GET_ONE,\r\n    STAFFSUBJECT_GET_MULTIPLE,\r\n    STAFFSUBJECT_GET_SUMMARY,\r\n    STAFFSUBJECT_REGISTER_SUCCESS,\r\n    STAFFSUBJECT_REGISTER_FAIL,\r\n    STAFFSUBJECT_LOADING,\r\n    STAFFSUBJECT_LOADING_ERROR,\r\n    STAFFSUBJECT_UPDATE_SUCCESS,\r\n    STAFFSUBJECT_UPDATE_FAIL,\r\n    STAFFSUBJECT_DELETE_SUCCESS,\r\n    STAFFSUBJECT_DELETE_FAIL\r\n} from \"./../../types/staff/staffsubject\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'staffsubjects';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFFSUBJECT \r\nexport const getStaffsubjects = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFFSUBJECT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFFSUBJECT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFFSUBJECT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\nexport const getStaffsubjectsummary = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFFSUBJECT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFFSUBJECT_GET_SUMMARY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFFSUBJECT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET SINGLE STAFFSUBJECT \r\nexport const getStaffsubject = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFFSUBJECT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFFSUBJECT DELETE\r\nexport const deleteStaffsubject = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFSUBJECT_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFSUBJECT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFFSUBJECT REGISTER\r\nexport const registerStaffsubject = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFSUBJECT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFSUBJECT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFFSUBJECT UPDATE\r\nexport const updateStaffsubject = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFSUBJECT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFSUBJECT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","const deepObjectsMerge = (target, source) => {\r\n  // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\r\n  for (const key of Object.keys(source)) {\r\n    if (source[key] instanceof Object) {\r\n      Object.assign(source[key], deepObjectsMerge(target[key], source[key]))\r\n    }\r\n  }\r\n\r\n  // Join `target` and modified `source`\r\n  Object.assign(target || {}, source)\r\n  return target\r\n}\r\n\r\nexport default deepObjectsMerge\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor, deepObjectsMerge } from '@coreui/utils/src'\nimport { CChartLine } from '@coreui/react-chartjs'\n\nconst ChartLineSimple = props => {\n\n  const {\n    borderColor,\n    backgroundColor,\n    pointHoverBackgroundColor,\n    dataPoints,\n    label,\n    pointed,\n    ...attributes\n  } = props\n\n  const pointHoverColor = (()=>{\n    if (pointHoverBackgroundColor) {\n      return pointHoverBackgroundColor\n    } else if (backgroundColor !== 'transparent') {\n      return backgroundColor\n    }\n    return borderColor\n  })()\n\n  const defaultDatasets = (()=>{\n    return [\n      {\n        data: dataPoints,\n        borderColor: getColor(borderColor),\n        backgroundColor: getColor(backgroundColor),\n        pointBackgroundColor: getColor(pointHoverColor),\n        pointHoverBackgroundColor: getColor(pointHoverColor),\n        label\n      }\n    ]\n  })()\n\n  const pointedOptions = (()=>{\n    return {\n      scales: {\n        xAxes: [\n          {\n            offset: true,\n            gridLines: {\n              color: 'transparent',\n              zeroLineColor: 'transparent'\n            },\n            ticks: {\n              fontSize: 2,\n              fontColor: 'transparent'\n            }\n          }\n        ],\n        yAxes: [\n          {\n            display: false,\n            ticks: {\n              display: false,\n              min: Math.min.apply(Math, dataPoints) - 5,\n              max: Math.max.apply(Math, dataPoints) + 5\n            }\n          }\n        ]\n      },\n      elements: {\n        line: {\n          borderWidth: 1\n        },\n        point: {\n          radius: 4,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    }\n  })()\n\n  const straightOptions = (()=>{\n    return {\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      },\n      elements: {\n        line: {\n          borderWidth: 2\n        },\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    }\n  })()\n\n  const defaultOptions = (()=>{\n    const options = pointed ? pointedOptions : straightOptions\n      return Object.assign({}, options, {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        }\n      })\n  })()\n\n  const computedDatasets = (() => {\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\n  })()\n\n  const computedOptions = (() => {\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\n  })()\n\n  // render\n\n  return (\n    <CChartLine\n      {...attributes}\n      type=\"line\"\n      datasets={computedDatasets}\n      options={computedOptions}\n      labels={label}\n    />\n  )\n}\n\nChartLineSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  borderColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\n\nChartLineSimple.defaultProps = {\n  borderColor: 'rgba(255,255,255,.55)',\n  backgroundColor: 'transparent',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\n\nexport default ChartLineSimple\n","import React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { \r\n    CCard, \r\n    CCardBody, \r\n    CButton, \r\n    CButtonGroup, \r\n    CCardHeader, \r\n    CCol, \r\n    CRow, \r\n    CDropdown, \r\n    CDropdownToggle, \r\n    CDropdownMenu, \r\n    CDropdownItem, \r\n    CDropdownDivider, \r\n    CContainer, \r\n    CCardFooter, \r\n    CForm,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CFormGroup,\r\n    CInputGroupText,\r\n    CSelect,\r\n    CLabel\r\n} from '@coreui/react';\r\n\r\nimport CIcon from '@coreui/icons-react'\r\nimport { Link } from 'react-router-dom';\r\nimport SearchDashboard from './SearchDashboard'\r\nimport SearchDashboard1 from './SearchDashboard1'\r\nconst Dashboard = (props) => {\r\n  \r\n  const [school, setSchool] = useState({})\r\n  const [term, setTerm ] = useState({})\r\n  //const [term, setTerm] = useState(0)\r\n  const [clasz, setClasz] = useState(0)\r\n  let dt = props.dropdowns && Array.isArray(props.dropdowns) && props.dropdowns.length > 4 ? props.dropdowns : [[], [], [], []];\r\n  let dt0 ='';\r\n  let dt1 ='';\r\n  let dt2 ='';\r\n  let dt3 ='';\r\n  if(dt.length > 0)\r\n  {\r\n     dt0 = dt[0].map((prop, ind)=>{\r\n    return <option key={ind}  value={prop.termid}>{prop.name}</option>;\r\n    });\r\n    dt1 = dt[1].map((prop, ind)=>{\r\n    return <option key={ind}  value={prop.id}>{prop.name}</option>;\r\n    });\r\n    dt2 = dt[2].map((prop, ind)=>{\r\n    return <option key={ind}  value={prop.id}>{prop.name}</option>;\r\n    });\r\n    dt3 = dt[0].map((prop, ind)=>{\r\n    return <option key={ind} value={JSON.stringify(prop)}>{prop.name}</option>;\r\n    });\r\n}\r\n\r\nlet sch  = Array.isArray(props.schools) ? props.schools.map((prop, ind)=>{\r\n  return <option value={JSON.stringify(prop)}>{prop.name}</option>;\r\n}):<option></option>;\r\n\r\nconst changeSchool =() =>{\r\n    props.changeSchool(JSON.parse(school))\r\n}\r\nconst changeTerm =() =>{\r\n  props.changeTerm(JSON.parse(term))\r\n}\r\nreturn (\r\n    <>\r\n    \r\n    <CRow>\r\n      <CCol lg={12}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            \r\n              <h4>Quick Menu</h4>\r\n              \r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CContainer>\r\n            <CRow>\r\n              <CCol>\r\n              <CRow className='d-block'>\r\n                <strong>Change</strong>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol xs='12' sm='12' md='6' >\r\n                  <CForm>\r\n                  <CFormGroup row>\r\n                        <CInputGroup>\r\n                          <CInputGroupPrepend>\r\n                          <CInputGroupText>Change School</CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <CSelect \r\n                          id=\"input3-group2\" \r\n                          name=\"input3-group2\" \r\n                          placeholder=\"Search Staff\"\r\n                          onChange={(e)=>setSchool(e.target.value)}\r\n                          >\r\n                            {sch}\r\n                            </CSelect>\r\n                          <CInputGroupAppend>\r\n                            <CButton  onClick={changeSchool} type=\"button\" color=\"secondary\"><i className='fa fa-thumbs-up'></i></CButton>\r\n                          </CInputGroupAppend>\r\n                        </CInputGroup>\r\n                    </CFormGroup>\r\n                  </CForm>\r\n                </CCol>\r\n                <CCol xs='12' sm='12' md='6'>\r\n                <CForm>\r\n                <CFormGroup row>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                        <CInputGroupText>Change Term</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect  onChange={(e)=>setTerm(e.target.value)} id=\"input3-group2\" name=\"input3-group2\" placeholder=\"Search Staff\" >\r\n                          {dt3}\r\n                          </CSelect>\r\n                        <CInputGroupAppend>\r\n                          <CButton  onClick={changeTerm}  type=\"button\" color=\"secondary\"><i className='fa fa-thumbs-up'></i></CButton>\r\n                        </CInputGroupAppend>\r\n                      </CInputGroup>\r\n                  </CFormGroup>\r\n                </CForm>\r\n              </CCol>\r\n              </CRow>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              \r\n            <CCol>\r\n               <CRow className='d-block'>\r\n                <strong>Navigate</strong>\r\n              </CRow>\r\n              <CForm action=\"\" method=\"post\" >\r\n              <CRow xs={12} >\r\n              <CCol xs='12' sm='12' md='12'  >\r\n              <CRow>\r\n              <CCol xs='12' sm='4' md='5' lg='5'  className=\"ml-0\">\r\n                <CFormGroup row>\r\n                <CInputGroup>\r\n                    <CInputGroupPrepend>\r\n                    <CInputGroupText>Select Term</CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                  <CSelect \r\n                    custom \r\n                    size=\"md\" \r\n                    name=\"term\" \r\n                    id=\"term\"\r\n                    onChange={(e)=>setTerm(e.target.value)}\r\n                    >\r\n                      <option value=\"0\">Select Term</option>\r\n                      {dt0}\r\n                    </CSelect>\r\n                  </CInputGroup>\r\n                </CFormGroup>\r\n              </CCol>\r\n              <CCol  xs='12' sm='4' md='5' lg='5' className=\"ml-0\" >\r\n                <CFormGroup row>\r\n                <CInputGroup>\r\n                    <CInputGroupPrepend>\r\n                    <CInputGroupText>Select Class</CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                <CSelect \r\n                    custom \r\n                    size=\"md\" \r\n                    name=\"clasz\" \r\n                    id=\"clasz\"\r\n                    onChange={(e)=>setClasz(e.target.value)}\r\n                    >\r\n                      <option value=\"0\">Select Class</option>\r\n                      {dt1}\r\n                    </CSelect>\r\n                 </CInputGroup>\r\n                </CFormGroup>\r\n                </CCol>\r\n              <CCol xs='12' sm='3' md='2' lg='2' className=\"ml-0\" >\r\n                <CFormGroup className=\"\">\r\n                <Link \r\n                    type=\"submit\" \r\n                    className=\"btn btn-success btn-block btn-sm\"\r\n                    size=\"sm\" \r\n                    color=\"primary\"\r\n                    to={`/studentclasses/${term}/${clasz}`}\r\n                    >\r\n                      <CIcon name=\"cil-scrubber\" /> Load !</Link>\r\n                </CFormGroup>\r\n                </CCol>\r\n              </CRow>\r\n              </CCol>\r\n              </CRow>\r\n              </CForm>\r\n            </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol>\r\n                    <CRow className='d-block'>\r\n                      <strong>Search</strong>\r\n                    </CRow>\r\n                    <CRow className='pr-2'xs={12} >\r\n                      <CCol md='6'  >\r\n                        <SearchDashboard />\r\n                      </CCol>\r\n                      <CCol className='pr-2' md='6'  >\r\n                        <SearchDashboard1 />\r\n                      </CCol>\r\n                    </CRow>\r\n                </CCol>\r\n              </CRow>\r\n            </CContainer>\r\n          </CCardBody>\r\n         </CCard>\r\n      </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n\r\n})\r\nexport default Dashboard","\r\nimport React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { searchStaff } from './../../actions/staff/staff'\r\nimport {  \r\n    CCol, \r\n    CRow,\r\n    CFormGroup,\r\n    CInput,\r\n    CListGroup,\r\n    CListGroupItem,\r\n    CCard\r\n    \r\n} from '@coreui/react';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n  const [term, setTerm] = useState();\r\n  const [clasz, setClasz] = useState([]);\r\n\r\n  let dt0 = ''\r\n  let dt1 = ''\r\n\r\n  const changeSchool = (e) =>{\r\n      setTerm(e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.result !== undefined && Array.isArray(props.result))\r\n    {\r\n      setClasz(props.result)\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [props.result])\r\n\r\n  useEffect(() => {\r\n    if(term !== undefined && term.length > 2)\r\n    {\r\n      let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'search':term,\r\n            'schoolid': props.user.activeschool.id\r\n        }),\r\n        cat:'selected',\r\n        table:'staffsearch',\r\n        narration:`get all schools for access control`\r\n      }\r\n      props.searchStaff(params);\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [term, props.user.activeschool.id])\r\n\r\n\r\n  let dat = clasz.map((props, index)=>{\r\n    return <CListGroupItem key={index} target='_blank' className=\"m-0\" href={`#/staffs/${props.id}`} active>\r\n      <CRow>\r\n        <CCol xs='2' className='m-0'>\r\n            <img\r\n               src={process.env.REACT_APP_SERVER_URL + props.photo} \r\n               style={{height:'40px', width:'40px'}}\r\n               height=\"30px\"\r\n               alt=\"profile-image\" \r\n               class=\"profile\"\r\n               onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/icons/profile_1.png'} }\r\n               />\r\n        </CCol>\r\n        <CCol>\r\n        <strong>{props.name}</strong><br/>\r\n        <small>{props.employment_no}</small>\r\n        </CCol>\r\n      </CRow>\r\n      </CListGroupItem>\r\n  })\r\n  \r\n\r\nreturn (\r\n    <>\r\n              <CRow xs={12} >\r\n                <CCol>\r\n                <CFormGroup row>\r\n                  <CInput\r\n                    size=\"md\"\r\n                    className='w-100'\r\n                    value={term}\r\n                    onChange={(e)=>setTerm(e.target.value)}\r\n                    placeholder=' Staff search...'\r\n                    />     \r\n                </CFormGroup>\r\n                <CCard className=\"mt-0\" style={{display:'block', position:'absolute', zIndex:'101'}}>\r\n                <CListGroup style={{width:'300px'}}>\r\n                  {dat}\r\n                 </CListGroup>\r\n                </CCard>\r\n                </CCol>\r\n              </CRow>\r\n             \r\n             \r\n              \r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  result:state.staffReducer.result,\r\n  user : state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {searchStaff})(Dashboard)","\r\nimport React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { searchStudent } from './../../actions/student/student'\r\nimport {  \r\n    CCol, \r\n    CRow,\r\n    CFormGroup,\r\n    CInput,\r\n    CListGroup,\r\n    CListGroupItem,\r\n    CCard\r\n    \r\n} from '@coreui/react';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n  const [term, setTerm] = useState();\r\n  const [clasz, setClasz] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(props.result !== undefined && Array.isArray(props.result))\r\n    {\r\n      setClasz(props.result)\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [props.result])\r\n\r\n  useEffect(() => {\r\n    if(term !== undefined && term.length > 2)\r\n    {\r\n      let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'search':term,\r\n            'schoolid': props.user.activeschool.id\r\n        }),\r\n        cat:'selected',\r\n        table:'studentsearch',\r\n        narration:`get all schools for access control`\r\n      }\r\n      props.searchStudent(params);\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [term, props.user.activeschool.id])\r\n\r\n\r\n  let dat = clasz.map((props, index)=>{\r\n    return <CListGroupItem key={index} href={`/students/${props.id}`} active>\r\n        <strong>{props.name}</strong><br/>\r\n        <small>{props.admission_no}</small>\r\n      </CListGroupItem>\r\n  })\r\n  \r\n\r\nreturn (\r\n    <>\r\n              <CRow xs={12} >\r\n                <CCol>\r\n                <CFormGroup row>\r\n                  <CInput\r\n                    size=\"md\"\r\n                    className='w-100'\r\n                    value={term}\r\n                    onChange={(e)=>setTerm(e.target.value)}\r\n                    placeholder=' Student search...'\r\n                    />     \r\n                </CFormGroup>\r\n                <CCard className=\"mt-0\" style={{display:'block', position:'absolute', zIndex:'101'}}>\r\n                <CListGroup style={{width:'300px'}}>\r\n                  {dat}\r\n                 </CListGroup>\r\n                </CCard>\r\n                </CCol>\r\n              </CRow>\r\n             \r\n             \r\n              \r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  result:state.studentReducer.result,\r\n  user : state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {searchStudent})(Dashboard)","/**\r\n * --------------------------------------------------------------------------\r\n * Licensed under MIT (https://coreui.io/license)\r\n * @returns {string} css custom property name\r\n * --------------------------------------------------------------------------\r\n */\r\nconst getCssCustomProperties = () => {\r\n  const cssCustomProperties = {}\r\n  const sheets = document.styleSheets\r\n  let cssText = ''\r\n  for (let i = sheets.length - 1; i > -1; i--) {\r\n    const rules = sheets[i].cssRules\r\n    for (let j = rules.length - 1; j > -1; j--) {\r\n      if (rules[j].selectorText === '.ie-custom-properties') {\r\n        // eslint-disable-next-line prefer-destructuring\r\n        cssText = rules[j].cssText\r\n        break\r\n      }\r\n    }\r\n\r\n    if (cssText) {\r\n      break\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line unicorn/prefer-string-slice\r\n  cssText = cssText.substring(\r\n    cssText.lastIndexOf('{') + 1,\r\n    cssText.lastIndexOf('}')\r\n  )\r\n\r\n  cssText.split(';').forEach(property => {\r\n    if (property) {\r\n      const name = property.split(': ')[0]\r\n      const value = property.split(': ')[1]\r\n      if (name && value) {\r\n        cssCustomProperties[`--${name.trim()}`] = value.trim()\r\n      }\r\n    }\r\n  })\r\n  return cssCustomProperties\r\n}\r\n\r\nexport default getCssCustomProperties\r\n","import getCssCustomProperties from './get-css-custom-properties'\r\n\r\nconst minIEVersion = 10\r\nconst isIE1x = () => Boolean(document.documentMode) && document.documentMode >= minIEVersion\r\nconst isCustomProperty = property => property.match(/^--.*/i)\r\n\r\nconst getStyle = (property, element = document.body) => {\r\n  let style\r\n\r\n  if (isCustomProperty(property) && isIE1x()) {\r\n    const cssCustomProperties = getCssCustomProperties()\r\n    style = cssCustomProperties[property]\r\n  } else {\r\n    style = window.getComputedStyle(element, null).getPropertyValue(property).replace(/^\\s/, '')\r\n  }\r\n\r\n  return style\r\n}\r\n\r\nexport default getStyle\r\n","import React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { \r\n    CCard,  \r\n    CButton, \r\n    CButtonGroup, \r\n    CCardHeader, \r\n    CCol, \r\n    CRow, \r\n   \r\n} from '@coreui/react';\r\n\r\n\r\n\r\nconst Dashboard = (props) => {\r\n \r\nreturn (\r\n    <>\r\n    <CRow>\r\n      <CCol lg={12}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol xs={10}>\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">{props.activeschool != undefined && props.activeterm.hasOwnProperty('name') && props.activeschool.name ? props.activeschool.name: <i>Please select a school or consult the admin</i>}</h4>\r\n              <div className=\"small text-muted\"><strong>{props.activeterm != undefined &&  props.activeterm.hasOwnProperty('name') && props.activeterm.name ? props.activeterm.name : <span> Welcome<small><i> (No active term)</i></small></span> }</strong></div>\r\n              \r\n              </CCol>\r\n              <CCol className=\"d-md-block btn-group\">\r\n              <CButtonGroup className='pull-right'>\r\n              <CButton  \r\n                  color=\"primary\" \r\n                  className=\"\"\r\n                  onClick={()=>props.toggleMenu()}\r\n                  >\r\n                <i className='fa fa-search'></i>\r\n              </CButton>\r\n              </CButtonGroup>  \r\n            </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n         </CCard>\r\n      </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import { CCollapse } from '@coreui/react';\r\nimport React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { getUserDatas, getUserSchools, getUserTerms, getUserdropdowns, settSchool, settTerm} from './../../actions/user'\r\nimport StaffDashboardMenu from './StaffDashboardMenu';\r\nimport StaffDashboardSession from './StaffDashboardSession1';\r\n\r\nconst Dashboard = (props) => {\r\n  const [showmenu, setShowmenu] = useState(false)\r\n\r\nuseEffect(() => {\r\n  //load dropdowns\r\n  let did = props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0 ? props.user.activeschool.id :'null'\r\n  let params = {\r\n    data:JSON.stringify(\r\n    {\r\n        'schoolid':did\r\n    }),\r\n    cat:'dropdowns',\r\n    table:'access',\r\n    narration:'get all dropdowns'\r\n    }\r\n    props.getUserdropdowns(params)\r\n  let params1 = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':did\r\n      }),\r\n      cat:'accessterms',\r\n      table:'access',\r\n      narration:'get current term'\r\n      }\r\n      props.getUserTerms(params1)\r\n    \r\n}, [props.user.mid, props.user.activeschool])\r\n\r\nuseEffect(() => {\r\n  //load staff schools\r\n  let params = {\r\n    data:JSON.stringify(\r\n    {\r\n        'schools':props.user.myschools.join(',')\r\n    }),\r\n    cat:'schoolaccess',\r\n    table:'schools',\r\n    narration:'get all schools'\r\n    }\r\n    props.getUserSchools(params)\r\n}, [props.user.mid, props.user.myschools])\r\n\r\nuseEffect(() => {\r\n  //load staff subjects and class\r\n  let params = {\r\n    data:JSON.stringify(\r\n    {\r\n        'sessionid':props.user.activeterm.sessionid,\r\n        'termid':props.user.activeterm.termid,\r\n        'staffid':props.user.mid,\r\n    }),\r\n    cat:'dataaccess',\r\n    table:'access',\r\n    narration:'get all schools'\r\n    }\r\n    getUserDatas(params)\r\n  \r\n    \r\n}, [props.user.mid, props.user.activeterm]);\r\n\r\nlet dt = props.user.dropdowns && Array.isArray(props.user.dropdowns) ? props.user.dropdowns : [[], []];\r\nconst changeSchool = (data) =>{\r\n  \r\n      props.settSchool(data)\r\n}\r\nconst changeTerm = (data) =>{\r\n      props.settTerm(data)\r\n}\r\nconst changeMenu = () =>{\r\n      setShowmenu(prev=>!prev);\r\n}\r\n\r\nreturn (\r\n    <>\r\n    <StaffDashboardSession \r\n        activeterm={props.user.activeterm}\r\n        activeschool={props.user.activeschool}\r\n        schools={props.user.mySchoolData}\r\n        changeSchool={(data)=>changeSchool(data)}\r\n        toggleMenu={changeMenu}\r\n      />\r\n       <CCollapse\r\n      show={showmenu}\r\n      >\r\n      <StaffDashboardMenu \r\n        dropdowns={dt}\r\n        schools={props.user.mySchoolData}\r\n        changeSchool={(data)=>changeSchool(data)}\r\n        changeTerm={(data)=>changeTerm(data)}\r\n      />\r\n      \r\n      </CCollapse>\r\n      \r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  activeTerm : state.termReducer.activeTerm,\r\n  user : state.userReducer,\r\n\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getUserDatas,\r\n  getUserSchools,\r\n  getUserTerms,\r\n  getUserdropdowns,\r\n  settSchool,\r\n  settTerm\r\n\r\n})(Dashboard)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getColor } from '@coreui/utils/src'\nimport { CChartBar } from '@coreui/react-chartjs'\n\nconst ChartBarSimple = props => {\n\n  const {\n    backgroundColor,\n    pointHoverBackgroundColor,\n    dataPoints,\n    label,\n    pointed,\n    ...attributes\n  } = props\n\n  const defaultDatasets = (()=>{\n    return [\n      {\n        data: dataPoints,\n        backgroundColor: getColor(backgroundColor),\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\n        label: label,\n        barPercentage: 0.5,\n        categoryPercentage: 1\n      }\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          display: false\n        }],\n        yAxes: [{\n          display: false\n        }]\n      }\n    }\n  })()\n\n  // render\n  return (\n    <CChartBar\n      {...attributes}\n      type=\"bar\"\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={label}\n    />\n  )\n}\n\nChartBarSimple.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  //\n  backgroundColor: PropTypes.string,\n  pointHoverBackgroundColor: PropTypes.string,\n  dataPoints: PropTypes.array,\n  label: PropTypes.string,\n  pointed: PropTypes.bool\n};\n\nChartBarSimple.defaultProps = {\n  backgroundColor: 'rgba(0,0,0,.2)',\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\n  label: 'Sales'\n};\n\nexport default ChartBarSimple\n","import axios from 'axios';\r\nimport {\r\n    WEEK_GET_ONE,\r\n    WEEK_GET_MULTIPLE,\r\n    WEEK_REGISTER_SUCCESS,\r\n    WEEK_REGISTER_FAIL,\r\n    WEEK_LOADING,\r\n    WEEK_LOADING_ERROR,\r\n    WEEK_UPDATE_SUCCESS,\r\n    WEEK_UPDATE_FAIL,\r\n    WEEK_DELETE_SUCCESS,\r\n    WEEK_DELETE_FAIL\r\n} from \"../../types/setting/week\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from '../common';\r\n\r\nlet TABLE_NAME = 'weeks';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL WEEK \r\nexport const getWeeks = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : WEEK_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: WEEK_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : WEEK_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE WEEK \r\nexport const getWeek = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : WEEK_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//WEEK DELETE\r\nexport const deleteWeek = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: WEEK_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : WEEK_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//WEEK REGISTER\r\nexport const registerWeek = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: WEEK_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : WEEK_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //WEEK UPDATE\r\nexport const updateWeek = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: WEEK_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : WEEK_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","\r\nimport React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { searchStudent } from './../../actions/student/student'\r\nimport {  \r\n    CCol, \r\n    CRow,\r\n    CFormGroup,\r\n    CInput,\r\n    CListGroup,\r\n    CListGroupItem,\r\n    CCard\r\n    \r\n} from '@coreui/react';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n  const [term, setTerm] = useState();\r\n  const [clasz, setClasz] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(props.result !== undefined && Array.isArray(props.result))\r\n    {\r\n      setClasz(props.result)\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [props.result])\r\n\r\n  useEffect(() => {\r\n    if(term !== undefined && term.length > 2)\r\n    {\r\n      let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'search':term,\r\n            'schoolid': props.user.activeschool.id\r\n        }),\r\n        cat:'selected',\r\n        table:'studentsearch',\r\n        narration:`get all schools for access control`\r\n      }\r\n      props.searchStudent(params);\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [term, props.user.activeschool.id])\r\n\r\n\r\n  let dat = clasz.map((prop, index)=>{\r\n    return <CListGroupItem key={index} target='_blank' className=\"m-0\"  onClick={()=>props.studentx(prop)} active>\r\n      <CRow>\r\n        <CCol xs='2' className='m-0'>\r\n            <img\r\n               src={process.env.REACT_APP_SERVER_URL + prop.photo} \r\n               style={{height:'40px', width:'40px'}}\r\n               height=\"30px\"\r\n               alt=\"profile-image\" \r\n               class=\"profile\"\r\n               onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/icons/profile_1.png'} }\r\n               />\r\n        </CCol>\r\n        <CCol>\r\n        <strong>{prop.name}</strong><br/>\r\n        <small>{prop.admission_no}</small>\r\n        </CCol>\r\n      </CRow>\r\n      </CListGroupItem>\r\n  })\r\n  \r\nreturn (\r\n    <>\r\n              <CRow xs={12} >\r\n                <CCol xs={12}>\r\n                <CFormGroup >\r\n                  <CInput\r\n                    size=\"md\"\r\n                    className='w-100'\r\n                    value={term}\r\n                    onChange={(e)=>setTerm(e.target.value)}\r\n                    placeholder=' Search for students... Name or Admission number'\r\n                    \r\n                    />     \r\n                </CFormGroup>\r\n                <CCard className=\"mt-1\" style={{display:'block', position:'absolute', zIndex:'101'}}>\r\n                <CListGroup style={{width:'300px'}} onMouseLeave={()=>setClasz([])}>\r\n                  {dat}\r\n                 </CListGroup>\r\n                </CCard>\r\n                </CCol>\r\n              </CRow>        \r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  result:state.studentReducer.result,\r\n  user : state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {searchStudent})(Dashboard)","import axios from 'axios';\r\nimport {\r\n    STAFFSTUDENT_GET_ONE,\r\n    STAFFSTUDENT_GET_MULTIPLE,\r\n    STAFFSTUDENT_REGISTER_SUCCESS,\r\n    STAFFSTUDENT_REGISTER_FAIL,\r\n    STAFFSTUDENT_LOADING,\r\n    STAFFSTUDENT_LOADING_ERROR,\r\n    STAFFSTUDENT_UPDATE_SUCCESS,\r\n    STAFFSTUDENT_UPDATE_FAIL,\r\n    STAFFSTUDENT_DELETE_SUCCESS,\r\n    STAFFSTUDENT_DELETE_FAIL\r\n} from \"../../types/staff/staffstudent\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from '../common';\r\n\r\nlet TABLE_NAME = 'staffstudents';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFFSTUDENT \r\nexport const getStaffstudents = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFFSTUDENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFFSTUDENT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFFSTUDENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STAFFSTUDENT \r\nexport const getStaffstudent = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFFSTUDENT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFFSTUDENT DELETE\r\nexport const deleteStaffstudent = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFSTUDENT_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFSTUDENT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFFSTUDENT REGISTER\r\nexport const registerStaffstudent = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFSTUDENT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFSTUDENT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFFSTUDENT UPDATE\r\nexport const updateStaffstudent = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFSTUDENT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFSTUDENT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _useConfig3 = require('./hooks/useConfig');\n\nvar _useConfig4 = _interopRequireDefault(_useConfig3);\n\nvar _star = require('./star');\n\nvar _star2 = _interopRequireDefault(_star);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar parentStyles = {\n    overflow: \"hidden\",\n    position: \"relative\"\n};\n\nfunction getHalfStarStyles(color, uniqueness) {\n    return '\\n    .react-stars-' + uniqueness + ':before {\\n      position: absolute;\\n      overflow: hidden;\\n      display: block;\\n      z-index: 1;\\n      top: 0; left: 0;\\n      width: 50%;\\n      content: attr(data-forhalf);\\n      color: ' + color + ';\\n  }';\n}\n\nfunction getHalfStarStyleForIcons(color) {\n    return '\\n          span.react-stars-half > * {\\n          color: ' + color + ';\\n      }';\n};\n\nfunction ReactStars(props) {\n    var _useState = (0, _react.useState)(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        uniqueness = _useState2[0],\n        setUniqueness = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentValue = _useState4[0],\n        setCurrentValue = _useState4[1];\n\n    var _useState5 = (0, _react.useState)([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stars = _useState6[0],\n        setStars = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isUsingIcons = _useState8[0],\n        setIsUsingIcons = _useState8[1];\n\n    var _useConfig = (0, _useConfig4.default)(props),\n        _useConfig2 = _slicedToArray(_useConfig, 2),\n        config = _useConfig2[0],\n        setConfig = _useConfig2[1];\n\n    var _useState9 = (0, _react.useState)(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        halfStarAt = _useState10[0],\n        setHalfStarAt = _useState10[1];\n\n    var _useState11 = (0, _react.useState)(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        halfStarHidden = _useState12[0],\n        setHalfStarHidden = _useState12[1];\n\n    var _useState13 = (0, _react.useState)(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        classNames = _useState14[0],\n        setClassNames = _useState14[1];\n\n    function iconsUsed(config) {\n        return !config.isHalf && config.emptyIcon && config.filledIcon || config.isHalf && config.emptyIcon && config.halfIcon && config.filledIcon;\n    }\n\n    function createUniqueness() {\n        setUniqueness((Math.random() + \"\").replace(\".\", \"\"));\n    }\n\n    (0, _react.useEffect)(function () {\n        addClassNames();\n        validateInitialValue(props.value, props.count);\n        setStars(getStars(props.value));\n        setConfig(props);\n        createUniqueness();\n        setIsUsingIcons(iconsUsed(props));\n        setHalfStarAt(Math.floor(props.value));\n        setHalfStarHidden(props.isHalf && props.value % 1 < 0.5);\n    }, []);\n\n    function validateInitialValue(value, count) {\n        if (value < 0 || value > count) {\n            setCurrentValue(0);\n        } else {\n            setCurrentValue(value);\n        }\n    }\n\n    function addClassNames() {\n        var reactStarsClass = 'react-stars';\n        setClassNames(props.classNames + (' ' + reactStarsClass));\n    }\n\n    function isDecimal(value) {\n        return value % 1 === 0;\n    }\n\n    function getRate() {\n        return config.isHalf ? Math.floor(currentValue) : Math.round(currentValue);\n    }\n\n    function getStars(activeCount) {\n        if (typeof activeCount === 'undefined') {\n            activeCount = getRate();\n        }\n\n        var stars = [];\n        for (var i = 0; i < config.count; i++) {\n            stars.push({\n                active: i <= activeCount - 1\n            });\n        }\n        return stars;\n    }\n\n    function mouseOver(event) {\n        if (!config.edit) return;\n\n        var index = Number(event.currentTarget.getAttribute('data-index'));\n\n        if (config.isHalf) {\n            var isAtHalf = moreThanHalf(event);\n            setHalfStarHidden(isAtHalf);\n            if (isAtHalf) index += 1;\n            setHalfStarAt(index);\n        } else {\n            index += 1;\n        }\n\n        updateStars(index);\n    }\n\n    function updateStars(index) {\n        var currentActive = stars.filter(function (x) {\n            return x.active;\n        });\n        if (index !== currentActive.length) {\n            setStars(getStars(index));\n        }\n    }\n\n    function moreThanHalf(event) {\n        var target = event.target;\n\n        var boundingClientRect = target.getBoundingClientRect();\n        var mouseAt = event.clientX - boundingClientRect.left;\n        mouseAt = Math.round(Math.abs(mouseAt));\n\n        return mouseAt > boundingClientRect.width / 2;\n    }\n\n    function mouseLeave() {\n        if (!config.edit) return;\n\n        updateHalfStarValues(currentValue);\n        setStars(getStars());\n    }\n\n    function updateHalfStarValues(value) {\n        if (config.isHalf) {\n            setHalfStarHidden(isDecimal(value));\n            setHalfStarAt(Math.floor(value));\n        }\n    }\n\n    function onClick(event) {\n        if (!config.edit) return;\n\n        var index = Number(event.currentTarget.getAttribute('data-index'));\n        var value = void 0;\n        if (config.isHalf) {\n            var isAtHalf = moreThanHalf(event);\n            setHalfStarHidden(isAtHalf);\n            if (isAtHalf) index += 1;\n            value = isAtHalf ? index : index + 0.5;\n            setHalfStarAt(index);\n        } else {\n            value = index = index + 1;\n        }\n\n        currentValueUpdated(value);\n    }\n\n    function renderHalfStarStyleElement() {\n        return _react2.default.createElement('style', { dangerouslySetInnerHTML: {\n                __html: isUsingIcons ? getHalfStarStyleForIcons(config.activeColor) : getHalfStarStyles(config.activeColor, uniqueness)\n            } });\n    }\n\n    function currentValueUpdated(value) {\n        if (value !== currentValue) {\n            setStars(getStars(value));\n            setCurrentValue(value);\n            props.onChange(value);\n        }\n    }\n\n    function handleKeyDown(event) {\n        if (!config.a11y && !config.edit) return;\n\n        var key = event.key;\n\n        var value = currentValue;\n\n        var keyNumber = Number(key); // e.g. \"1\" => 1, \"ArrowUp\" => NaN\n        if (keyNumber) {\n            if (Number.isInteger(keyNumber) && keyNumber > 0 && keyNumber <= config.count) {\n                value = keyNumber;\n            }\n        } else {\n            if ((key === \"ArrowUp\" || key === \"ArrowRight\") && value < config.count) {\n                event.preventDefault();\n\n                value += config.isHalf ? 0.5 : 1;\n            } else if ((key === \"ArrowDown\" || key === \"ArrowLeft\") && value > 0.5) {\n                event.preventDefault();\n                value -= config.isHalf ? 0.5 : 1;\n            }\n        }\n\n        updateHalfStarValues(value);\n\n        currentValueUpdated(value);\n    }\n\n    function renderStars() {\n        return stars.map(function (star, i) {\n            return _react2.default.createElement(_star2.default, {\n                key: i,\n                index: i,\n                active: star.active,\n                config: config,\n                onMouseOver: mouseOver,\n                onMouseLeave: mouseLeave,\n                onClick: onClick,\n                halfStarHidden: halfStarHidden,\n                halfStarAt: halfStarAt,\n                isUsingIcons: isUsingIcons,\n                uniqueness: uniqueness\n            });\n        });\n    }\n\n    return _react2.default.createElement(\n        'div',\n        { className: 'react-stars-wrapper-' + uniqueness,\n            style: { display: 'flex' } },\n        _react2.default.createElement(\n            'div',\n            { tabIndex: config.a11y && config.edit ? 0 : null,\n                'aria-label': 'add rating by typing an integer from 0 to 5 or pressing arrow keys',\n                onKeyDown: handleKeyDown,\n                className: classNames,\n                style: parentStyles },\n            config.isHalf && renderHalfStarStyleElement(),\n            renderStars(),\n            _react2.default.createElement(\n                'p',\n                { style: { position: 'absolute', left: '-200rem' }, role: 'status' },\n                currentValue\n            )\n        )\n    );\n}\n\nReactStars.propTypes = {\n    classNames: _propTypes2.default.string,\n    edit: _propTypes2.default.bool,\n    half: _propTypes2.default.bool,\n    value: _propTypes2.default.number,\n    count: _propTypes2.default.number,\n    char: _propTypes2.default.string,\n    size: _propTypes2.default.number,\n    color: _propTypes2.default.string,\n    activeColor: _propTypes2.default.string,\n    emptyIcon: _propTypes2.default.element,\n    halfIcon: _propTypes2.default.element,\n    filledIcon: _propTypes2.default.element,\n    a11y: _propTypes2.default.bool\n};\n\nReactStars.defaultProps = {\n    edit: true,\n    half: false,\n    value: 0,\n    count: 5,\n    char: '★',\n    size: 15,\n    color: 'gray',\n    activeColor: '#ffd700',\n    a11y: true,\n\n    onChange: function onChange() {}\n};\n\nexports.default = ReactStars;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = useConfig;\n\nvar _react = require('react');\n\nfunction useConfig(config) {\n    var _useState = (0, _react.useState)(config.count),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(config.size),\n        _useState4 = _slicedToArray(_useState3, 2),\n        size = _useState4[0],\n        setSize = _useState4[1];\n\n    var _useState5 = (0, _react.useState)(config.char),\n        _useState6 = _slicedToArray(_useState5, 2),\n        char = _useState6[0],\n        setChar = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(config.color),\n        _useState8 = _slicedToArray(_useState7, 2),\n        color = _useState8[0],\n        setColor = _useState8[1];\n\n    var _useState9 = (0, _react.useState)(config.activeColor),\n        _useState10 = _slicedToArray(_useState9, 2),\n        activeColor = _useState10[0],\n        setActiveColor = _useState10[1];\n\n    var _useState11 = (0, _react.useState)(config.isHalf),\n        _useState12 = _slicedToArray(_useState11, 2),\n        isHalf = _useState12[0],\n        setIsHalf = _useState12[1];\n\n    var _useState13 = (0, _react.useState)(config.edit),\n        _useState14 = _slicedToArray(_useState13, 2),\n        edit = _useState14[0],\n        setEdit = _useState14[1];\n\n    var _useState15 = (0, _react.useState)(config.emptyIcon),\n        _useState16 = _slicedToArray(_useState15, 2),\n        emptyIcon = _useState16[0],\n        setEmptyIcon = _useState16[1];\n\n    var _useState17 = (0, _react.useState)(config.halfIcon),\n        _useState18 = _slicedToArray(_useState17, 2),\n        halfIcon = _useState18[0],\n        setHalfIcon = _useState18[1];\n\n    var _useState19 = (0, _react.useState)(config.filledIcon),\n        _useState20 = _slicedToArray(_useState19, 2),\n        filledIcon = _useState20[0],\n        setFilledIcon = _useState20[1];\n\n    var _useState21 = (0, _react.useState)(config.a11y),\n        _useState22 = _slicedToArray(_useState21, 2),\n        a11y = _useState22[0],\n        setA11y = _useState22[1];\n\n    var configObj = {\n        count: count,\n        size: size,\n        char: char,\n        color: color,\n        activeColor: activeColor,\n        isHalf: isHalf,\n        edit: edit,\n        emptyIcon: emptyIcon,\n        halfIcon: halfIcon,\n        filledIcon: filledIcon,\n        a11y: a11y\n    };\n\n    function setConfig(config) {\n        setCount(config.count);\n        setSize(config.size);\n        setChar(config.char);\n        setColor(config.color);\n        setActiveColor(config.activeColor);\n        setIsHalf(config.isHalf);\n        setEdit(config.edit);\n        setEmptyIcon(config.emptyIcon);\n        setHalfIcon(config.halfIcon);\n        setFilledIcon(config.filledIcon);\n        setA11y(config.a11y);\n    }\n\n    return [configObj, setConfig];\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = Star;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultStyles = {\n    position: \"relative\",\n    overflow: \"hidden\",\n    cursor: \"pointer\",\n    display: \"block\",\n    float: \"left\"\n};\n\nfunction Star(props) {\n    var index = props.index,\n        active = props.active,\n        config = props.config,\n        onMouseOver = props.onMouseOver,\n        onMouseLeave = props.onMouseLeave,\n        onClick = props.onClick,\n        halfStarHidden = props.halfStarHidden,\n        halfStarAt = props.halfStarAt,\n        isUsingIcons = props.isUsingIcons,\n        uniqueness = props.uniqueness;\n    var color = config.color,\n        activeColor = config.activeColor,\n        size = config.size,\n        char = config.char,\n        isHalf = config.isHalf,\n        edit = config.edit,\n        halfIcon = config.halfIcon,\n        emptyIcon = config.emptyIcon,\n        filledIcon = config.filledIcon;\n\n\n    var starClass = '';\n    var half = false;\n\n    if (isHalf && !halfStarHidden && halfStarAt === index) {\n        if (!isUsingIcons) starClass = \"react-stars-\" + uniqueness;else starClass = 'react-stars-half';\n        half = true;\n    }\n\n    var style = _extends({}, defaultStyles, {\n        color: active ? activeColor : color,\n        cursor: edit ? 'pointer' : 'default',\n        fontSize: size + \"px\"\n    });\n\n    function renderIcon() {\n        if (!isUsingIcons) {\n            return char;\n        } else {\n            if (active) {\n                return filledIcon;\n            } else if (!active && half) {\n                return halfIcon;\n            } else {\n                return emptyIcon;\n            }\n        }\n    }\n\n    return _react2.default.createElement(\n        \"span\",\n        {\n            className: starClass,\n            style: style,\n            key: index,\n            \"data-index\": index,\n            \"data-forhalf\": filledIcon ? index : char,\n            onMouseOver: onMouseOver,\n            onMouseMove: onMouseOver,\n            onMouseLeave: onMouseLeave,\n            onClick: onClick },\n        renderIcon()\n    );\n}","import getStyle from './get-style'\r\n\r\nconst getColor = (rawProperty, element = document.body) => {\r\n  const property = `--${rawProperty}`\r\n  const style = getStyle(property, element)\r\n  return style ? style : rawProperty\r\n}\r\n\r\nexport default getColor\r\n","import axios from 'axios';\r\nimport {\r\n    STAFFCLASS_GET_ONE,\r\n    STAFFCLASS_GET_MULTIPLE,\r\n    STAFFCLASS_REGISTER_SUCCESS,\r\n    STAFFCLASS_REGISTER_FAIL,\r\n    STAFFCLASS_LOADING,\r\n    STAFFCLASS_LOADING_ERROR,\r\n    STAFFCLASS_UPDATE_SUCCESS,\r\n    STAFFCLASS_UPDATE_FAIL,\r\n    STAFFCLASS_DELETE_SUCCESS,\r\n    STAFFCLASS_DELETE_FAIL\r\n} from \"./../../types/staff/staffclass\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'access';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFFCLASS \r\nexport const getStaffclasss = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFFCLASS_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFFCLASS_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFFCLASS_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STAFFCLASS \r\nexport const getStaffclass = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFFCLASS_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFFCLASS DELETE\r\nexport const deleteStaffclass = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFCLASS_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFCLASS_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFFCLASS REGISTER\r\nexport const registerStaffclass = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFCLASS_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFCLASS_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFFCLASS UPDATE\r\nexport const updateStaffclass = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFCLASS_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFCLASS_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {registerTheme, updateTheme, deleteTheme} from './../../../actions/setting/theme';\r\nimport {getClaszs} from './../../../actions/setting/clasz';\r\nimport CKEditor from 'ckeditor4-react';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CFormText,\r\n  CTextarea,\r\n  CSelect,\r\n  CInputGroupAppend,\r\n  CInputGroupPrepend,\r\n  CInputGroup,\r\n  CAlert\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { setElement } from './../../../actions/common'\r\n\r\nconst termarray =[\r\n  {id:1, name:'First'},\r\n  {id:2, name:'Second'},\r\n  {id:3, name:'Third'},\r\n  {id:4, name:'Alternative/Obsolete'}\r\n];\r\nconst Theme = (props) => {\r\n  const subjectid = props.pid\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const [id, setId] = useState(null)\r\n  const [moduleid, setModuleid ]= useState('')\r\n  const [namez, setNamez] = useState('')\r\n  const [topic, setTopic] = useState('')\r\n  const [claszid, setClaszid] = useState()\r\n  const [termid, setTermid] = useState()\r\n  const [termname, setTermname] = useState('')\r\n  const [objective, setObjective] = useState([])\r\n  const [content, setContent] = useState([])\r\n  const [material, setMaterial] = useState([])\r\n  const [contentind, setContentind] = useState('')\r\n  const [objectiveind, setObjectiveind] = useState('')\r\n  const [materialind, setMaterialind] = useState('')\r\n\r\n  //GET THEMES PER SCHOOL\r\n  useEffect(() => {\r\n    \r\n    let params1 = {\r\n      data:JSON.stringify(\r\n      {\r\n          'typeid': props.school.typeid\r\n      }),\r\n      cat:'select',\r\n      table:'claszs',\r\n      narration:'get claszs'\r\n    }\r\n    props.getClaszs(params1);\r\n    \r\n  }, [subjectid, props.school.typeid])\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(props.data !== undefined && parseInt(props.data.id) > 0)\r\n    {\r\n      let dt = props.data;\r\n      setId(dt.id);\r\n      setModuleid(dt.moduleid);\r\n      setNamez(dt.name);\r\n      setTopic(dt.topic);\r\n      setClaszid(dt.claszid);\r\n      setTermid(dt.termid);\r\n      setObjective(dt.objective);\r\n      setMaterial(dt.material);\r\n      setContent(dt.content);\r\n      setElement('nf-claszid', dt.claszid )\r\n      let termnamex = '';\r\n      let termnames = termarray.filter(rw=>rw.id === dt.termid);\r\n       termnamex = Array.isArray(termnames) && termnames.length > 0 ? termnames[0].name : '';\r\n       setTermname(termnamex);\r\n    }else{\r\n      setId(null);\r\n      setModuleid(null);\r\n      setNamez('');\r\n      setClaszid('');\r\n      setObjective('');\r\n      setMaterial('');\r\n      setContent('');\r\n    }\r\n    \r\n  }, [props.data])\r\n\r\n \r\n \r\n \r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0)\r\n    {\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('topic', topic);\r\n      fd.append('claszid', claszid);\r\n      fd.append('termid', termid);\r\n      fd.append('moduleid', moduleid);\r\n      fd.append('objective', objective);\r\n      fd.append('material', material);\r\n      fd.append('content', content);\r\n      fd.append('staffid', props.user.user.id);\r\n      fd.append('checker', 'A'+moduleid+'_B'+subjectid+'_C'+claszid);\r\n      fd.append('checker1', 'A'+moduleid+'_B'+subjectid);\r\n      fd.append('table', 'themes');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateTheme(fd)\r\n        \r\n      }else if(subjectid && parseInt(subjectid) > 0)\r\n      {\r\n        //INSERT\r\n        fd.append('subjectid', subjectid);\r\n        fd.append('cat', 'insert');\r\n        props.registerTheme(fd)\r\n      }\r\n     // props.onReset()\r\n    }\r\n  }\r\n  const loadContent = (num, inde, dt) =>{\r\n    let con = [...content];\r\n     if(contentind.length > 0)\r\n     {\r\n      if(num === 0)\r\n      {\r\n        let d =  con.push(contentind);\r\n        setContent(con)\r\n        setContentind('');\r\n      }\r\n      if(num === 1)\r\n      {\r\n        \r\n        let cons = [...content];\r\n        let c = cons[inde];\r\n        setContentind(c);\r\n      }\r\n      if(num === 2)\r\n      {\r\n        let cons = [...content];\r\n        let c = cons.filter(rw=>rw !== dt);\r\n        setContent(c)\r\n        setContentind('');\r\n      }\r\n    }\r\n      \r\n  }\r\n  const loadObjective = (num, inde, dt) =>{\r\n    let con = [...objective];\r\n    if(objectiveind.length > 0)\r\n     {\r\n      if(num === 0)\r\n      {\r\n        let d =  con.push(objectiveind);\r\n        setObjective(con)\r\n        setObjectiveind('');\r\n      }\r\n      if(num === 1)\r\n      {\r\n        \r\n        let cons = [...objective];\r\n        let c = cons[inde];\r\n        setObjectiveind(c);\r\n      }\r\n      if(num === 2)\r\n      {\r\n        let cons = [...objective];\r\n        let c = cons.filter(rw=>rw !== dt);\r\n        setObjective(c)\r\n        setObjectiveind('');\r\n      }   \r\n    }\r\n  }\r\n\r\n  const loadMaterial = (num, inde, dt) =>{\r\n    let con = [...material];\r\n    if(materialind.length > 0)\r\n     {\r\n      if(num === 0)\r\n      {\r\n       if(materialind.length > 0){\r\n         con.push(materialind);\r\n         setMaterial(con)\r\n         setMaterialind('');\r\n       }\r\n      }\r\n      if(num === 1)\r\n      {\r\n        \r\n        let cons = [...material];\r\n        let c = cons[inde];\r\n        setMaterialind(c);\r\n      }\r\n      if(num === 2)\r\n      {\r\n        let cons = [...material];\r\n        let c = cons.filter(rw=>rw !== dt);\r\n        setMaterial(c)\r\n        setMaterialind('');\r\n      } \r\n    }  \r\n  }\r\n  \r\n  \r\n  let claszarray = props.claszs && Array.isArray(props.claszs) ? props.claszs : [];\r\n  let clarray = claszarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.name}</option>\r\n  })\r\n  let termz= termarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.id}>{rw.name}</option>\r\n})\r\n \r\n   return (\r\n    <CCol xl={12}  style={{width:'500px'}} id=\"#formz\">\r\n    <CCard>\r\n        <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n          <CRow>\r\n            <CCol sm=\"6\">\r\n            <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <br/><small> Scheme of Work</small></h4>\r\n            </CCol>\r\n            <CCol sm=\"6\" className=\"d-md-block\">\r\n              <CButton  \r\n                  color=\"danger\" \r\n                  onClick={props.onClose}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-remove'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm action=\"\" method=\"post\">\r\n            <CAlert \r\n            color='danger'\r\n            value={Number(400) * 10}\r\n            size=\"sm\"\r\n            className=\"mb-3\"\r\n            >\r\n            <h4 className=\"alert-heading\">Warning</h4>\r\n              <p>If you duplicate the MODULEID for a particular subject your entry would not be saved. Do ensure that your MODULE ID is serial</p></CAlert>\r\n          <CFormGroup>\r\n              <CLabel htmlFor=\"nf-module\">ModuleID</CLabel>\r\n              <CInput \r\n                  type=\"number\" \r\n                  id=\"nf-module\" \r\n                  module=\"modulez\"\r\n                  value={moduleid}\r\n                  onChange={(e)=>setModuleid(e.target.value)}\r\n                  placeholder=\"00\" \r\n                />\r\n              <CFormText className=\"help-block text-danger\">This number has to be unique and serial if you duplicate this number for a particular subject it will not save</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-name\">Theme</CLabel>\r\n              <CInput \r\n                  type=\"text\" \r\n                  id=\"nf-name\" \r\n                  name=\"namez\"\r\n                  value={namez}\r\n                  onChange={(e)=>setNamez(e.target.value)}\r\n                  placeholder=\"Matter\" \r\n                />\r\n              <CFormText className=\"help-block\">Please enter theme name</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-claszid\">Class </CLabel>\r\n              <CSelect\r\n                  type=\"text\" \r\n                  id=\"nf-claszid\" \r\n                  name=\"claszid\"\r\n                  defaultValue={claszid}\r\n                  onChange={(e)=>setClaszid(e.target.value)}\r\n                  placeholder=\"\" \r\n                >\r\n                  {id && parseInt(id) > 0 ? <option value={claszid}>{props.data !== null && props.data !== undefined? props.data.claszname : ''}</option>:<option></option>}\r\n                  {clarray}\r\n              </CSelect>\r\n              <CFormText className=\"help-block\">Select the class</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-termid\">Term</CLabel>\r\n              <CSelect\r\n                  type=\"text\" \r\n                  id=\"nf-termid\" \r\n                  name=\"termid\"\r\n                  defaultValue={termid}\r\n                  onChange={(e)=>setTermid(e.target.value)}\r\n                  placeholder=\"\" \r\n                >\r\n                  {id && parseInt(id) > 0 ? <option value={termid}>{termname}</option>:<option></option>}\r\n                  \r\n                  {termz}\r\n              </CSelect>\r\n              <CFormText className=\"help-block\">Select the term</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-content\">Lesson Content</CLabel>\r\n              <CKEditor\r\n                data ={content}\r\n                type='classic'\r\n                config={{\r\n                    toolbar:[[\r\n                        'Cut', 'Copy', 'Paste', \r\n                        'PasteText', 'PasteFromWord', \r\n                        'Undo', 'Redo', 'NumberedList', 'BulletedList',\r\n                        'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', 'CopyFormatting', 'RemoveFormat' \r\n                    ]]\r\n                }}\r\n                onChange={e=>setContent(e.editor.getData())}\r\n                />\r\n             \r\n              \r\n              <CFormText className=\"help-block\">Add or remove subtopics outline in order of presentation</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-objective\">Lesson Objectives</CLabel><CKEditor\r\n                data ={objective}\r\n                type='classic'\r\n                config={{\r\n                    toolbar:[[\r\n                        'Cut', 'Copy', 'Paste', \r\n                        'PasteText', 'PasteFromWord', \r\n                        'Undo', 'Redo', 'NumberedList', 'BulletedList',\r\n                        'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', 'CopyFormatting', 'RemoveFormat' \r\n                    ]]\r\n                }}\r\n                onChange={e=>setObjective(e.editor.getData())}\r\n                />\r\n              <CFormText className=\"help-block\">Add or remove lesson objectives</CFormText>\r\n            </CFormGroup>\r\n            <CFormGroup>\r\n              <CLabel htmlFor=\"nf-material\">Lesson Materials</CLabel><CKEditor\r\n                data ={material}\r\n                type='classic'\r\n                config={{\r\n                    toolbar:[[\r\n                        'Cut', 'Copy', 'Paste', \r\n                        'PasteText', 'PasteFromWord', \r\n                        'Undo', 'Redo', 'NumberedList', 'BulletedList',\r\n                        'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', 'CopyFormatting', 'RemoveFormat' \r\n                    ]]\r\n                }}\r\n                onChange={e=>setMaterial(e.editor.getData())}\r\n                />\r\n              <CFormText className=\"help-block\">Add or remove Instruction Materials</CFormText>\r\n            </CFormGroup>\r\n         \r\n          </CForm>\r\n        </CCardBody>\r\n        \r\n        <CCardFooter>\r\n          <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n          <CButton type=\"reset\" onClick={props.onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n        </CCardFooter>\r\n      </CCard>\r\n  </CCol>\r\n \r\n     )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  themes : state.themeReducer,\r\n  user:state.userReducer,\r\n  claszs : state.claszReducer.claszs\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerTheme,\r\n  updateTheme,\r\n  deleteTheme,\r\n  getClaszs\r\n})(Theme)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getThemes, getTheme, registerTheme, updateTheme, deleteTheme} from './../../../actions/setting/theme';\r\nimport { useHistory} from 'react-router-dom'\r\nimport { \r\n  CRow ,\r\n  CCol,\r\n  CBadge\r\n} from '@coreui/react';\r\n\r\n\r\nconst termarray ={\r\n  1:'First term',\r\n  2:'Second term',\r\n  3:'Third term',\r\n  4:'Alternative/Obsolete'\r\n}\r\nconst Theme = (props) => {\r\n  const history = useHistory()\r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n      <td>\r\n        <strong>MODULE {row.moduleid}</strong>{\" : \"}<span style={{textTransform:'uppercase'}}> {row.name}</span><br/>\r\n  <strong>CLASS</strong>{\" : \"}<span style={{textTransform:'uppercase'}}> {row.claszname}{termarray[row.termid]}</span>\r\n        <CRow>\r\n          <CCol xs={12} sm={4}>\r\n              <strong >The lesson would be presented as follows</strong>\r\n              <div style={{whiteSpace:'pre-wraps'}}  dangerouslySetInnerHTML={{__html: row.content}} />\r\n          </CCol>\r\n          <CCol xs={12} sm={4}>\r\n          <strong >At the end of the lesson students should be able to</strong>\r\n          <div style={{whiteSpace:'pre-wraps'}}>\r\n            <div style={{whiteSpace:'pre-wraps'}}  dangerouslySetInnerHTML={{__html: row.objective}} />\r\n            </div>\r\n          </CCol>\r\n          <CCol xs={12}sm={4}>\r\n          <strong >Instructional Material</strong>\r\n          <div  dangerouslySetInnerHTML={{__html: row.material.replace(/(\\r\\n|\\n|\\r)/gm, \"<br/>\") }} />\r\n          </CCol>\r\n           </CRow>\r\n           <CRow className='d-print-none'>\r\n             <CCol>\r\n             <CBadge className=\"mr-1\" color=\"primary\">Primary</CBadge>\r\n             <button className='btn btn-sm btn-link'><i className='fa fa-bank text-success'></i> Question Bank</button>\r\n             <button onClick={()=>props.onEdit(row)} className='btn btn-sm btn-link'><i className='fa fa-edit'></i> Edit</button>\r\n             <button onClick={()=>props.onActivate(row.id, row.is_active)} className='btn btn-sm btn-link text-mute'><i className={parseInt(row.is_active) === 0 ? 'fa fa-unlock text-success':'fa fa-lock text-danger'}></i> {parseInt(row.is_active) === 0 ?'Lock':'Unlock'}</button>\r\n             <button onClick={()=>props.onDelete(row)}className='btn btn-sm btn-link'><i className='fa fa-trash text-danger'></i> Delete</button>\r\n             </CCol>\r\n           </CRow>\r\n      </td>\r\n     \r\n    </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th><i className='fa fa-list'></i> Scheme Of Work</th>\r\n                       </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  themes : state.themeReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getThemes,\r\n  getTheme,\r\n  registerTheme,\r\n  updateTheme,\r\n  deleteTheme\r\n})(Theme)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getThemes, getTheme, deleteTheme} from './../../../actions/setting/theme';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n} from '@coreui/react'\r\nimport ThemeForm from'./../Form/Theme'\r\nimport ThemeTable from'./../Table/Theme'\r\nimport Header from './Header';\r\n\r\nconst Theme = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'subjectid':props.pid\r\n        }),\r\n        cat:'selected',\r\n        table:'themes',\r\n        narration:'get themes'\r\n  \r\n    }\r\n    props.getThemes(params)\r\n    \r\n  }, [props.pid])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true)\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});  \r\n  }\r\n  const onClose = (rw, dt) =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  //GET SUBJECT NAME\r\n  let ses = props.subjects.filter(rw=>parseInt(rw.id) === parseInt(props.pid));\r\n  let sess = ses && Array.isArray(ses) && ses.length > 0 ? ses[0].name : 'None'\r\n  let data = props.themes.themes && Array.isArray(props.themes.themes) ? props.themes.themes.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <Header \r\n              pid={props.pid}\r\n              icon={props.para.icon}\r\n              title={sess} \r\n              school={props.school} \r\n              toggle={toggle}\r\n              />\r\n         <CCardBody className='table-responsive'>\r\n            <ThemeTable  \r\n                pid={props.pid}\r\n                data={data}\r\n                editer={true}\r\n                submenu={props.para.submenu}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n            <ThemeForm \r\n                pid={props.pid}\r\n                id={id}\r\n                school={props.school}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  themes : state.themeReducer,\r\n  subjects : state.subjectReducer.subjects,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getThemes,\r\n  deleteTheme\r\n})(Theme)\r\n"],"sourceRoot":""}