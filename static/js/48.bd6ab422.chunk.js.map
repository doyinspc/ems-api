{"version":3,"sources":["views/setting/Subject.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/setting/subject.js"],"names":["connect","state","subjects","subjectReducer","departments","departmentReducer","school","schoolReducer","getSubjects","getSubject","registerSubject","updateSubject","deleteSubject","props","departmentid","useParams","subject","history","useHistory","useLocation","search","match","useState","collapse","setCollapse","id","setId","dts","setDts","namez","setNamez","abbrv","setAbbrv","useEffect","params","data","JSON","stringify","cat","table","narration","parseInt","dt","name","onReset","deparr","filter","rw","departmentname","length","tabl","Array","isArray","undefined","map","row","ind","key","className","color","is_active","size","onClick","item","push","num","nu","fd","FormData","append","onActivate","sm","style","textTransform","data-target","data-toggle","e","preventDefault","show","xl","action","method","htmlFor","type","defaultValue","onChange","target","value","placeholder","_slicedToArray","arr","i","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","err","unsupportedIterableToArray","TypeError","path","API_PATH_SETTING","dispatch","getState","token","MAIN_TOKEN","SUBJECT_LOADING","axios","get","axiosConfig","then","res","SUBJECT_GET_MULTIPLE","payload","catch","SUBJECT_LOADING_ERROR","SUBJECT_GET_ONE","POST","SUBJECT_DELETE_SUCCESS","SUBJECT_DELETE_FAIL","post","axiosConfig1","SUBJECT_REGISTER_SUCCESS","SUBJECT_REGISTER_FAIL","SUBJECT_UPDATE_SUCCESS","SUBJECT_UPDATE_FAIL"],"mappings":"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","file":"static/js/48.bd6ab422.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getSubjects, getSubject, registerSubject, updateSubject, deleteSubject} from './../../actions/setting/subject';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CCollapse,\r\n  CFormText,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n  CDropdownToggle,\r\n  CDropdownMenu\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport department from '../../reducers/setting/department';\r\n\r\n\r\nconst Subject = (props) => {\r\n  const departmentid = useParams().subject\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [dts, setDts] = useState('')\r\n  const [namez, setNamez] = useState('')\r\n  const [abbrv, setAbbrv] = useState()\r\n \r\n  const toggle = (e) => {\r\n    setCollapse(!collapse)\r\n    e.preventDefault()\r\n  }\r\n//GET SUBJECTS PER SCHOOL\r\n  useEffect(() => {\r\n    let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'departmentid':departmentid\r\n      }),\r\n      cat:'select',\r\n      table:'subjects',\r\n      narration:'get subjects'\r\n  }\r\n    props.getSubjects(params)\r\n    \r\n  }, [departmentid])\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(id && parseInt(id) > 0)\r\n    {\r\n      let dt = dts;\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [id])\r\n\r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onActivate = (rw, num) =>{\r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    props.updateSubject(fd);\r\n  }\r\n  const onReset = () =>setId(null);\r\n  const onClose = () =>setCollapse(false);\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'subjects');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateSubject(fd)\r\n        \r\n      }else if(departmentid && parseInt(departmentid) > 0)\r\n      {\r\n        //INSERT\r\n        fd.append('departmentid', departmentid);\r\n        fd.append('cat', 'insert');\r\n        props.registerSubject(fd)\r\n      }\r\n      onReset()\r\n    }\r\n  }\r\n  \r\n  let deparr = props.departments.filter(rw =>parseInt(rw.id) === parseInt(departmentid) && parseInt(rw.id) > 0);\r\n  \r\n  let departmentname = deparr.length > 0 ? deparr[0].name : 'None';\r\n  let data = props.subjects.subjects && Array.isArray(props.subjects.subjects) ? props.subjects.subjects.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n  let tabl = data.map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                <td className='text-center'>\r\n                <CDropdown className=\"m-0 btn-group \">\r\n                  <CDropdownToggle color={parseInt(row.is_active) === 0 ? 'success' : 'danger'} size=\"sm\">\r\n                  <i className='fa fa-gear'></i> Action\r\n                  </CDropdownToggle>\r\n                  <CDropdownMenu>\r\n                    <CDropdownItem\r\n                      onClick={(item) => history.push(`/department/${departmentid}/${row.id}`)}\r\n                     ><i className='fa fa-list'></i>{' '} Scheme of Work</CDropdownItem>\r\n                     <CDropdownItem\r\n                      onClick={(item) => history.push(`/department/${departmentid}/${row.id}`)}\r\n                     ><i className='fa fa-bar-chart'></i>{' '} Performance Analysis</CDropdownItem>\r\n                     <CDropdownItem \r\n                          onClick={()=>onActivate(row.id, row.is_active)} >\r\n                          <i className={parseInt(row.is_active) === 0 ? 'fa fa-thumbs-up' : 'fa fa-thumb-down'}></i>\r\n                          {' '}  {parseInt(row.is_active) === 0 ? 'Deactivate' : 'Activate'}</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onEdit(row)} ><i className='fa fa-edit'></i>{' '}  Edit</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onDelete(row.id, row)}><i className='fa fa-remove'></i>{' '}  Delete</CDropdownItem>\r\n                  \r\n                  </CDropdownMenu>\r\n                </CDropdown>\r\n                </td>\r\n              </tr>\r\n  })\r\n  return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n            <h4 id=\"traffic\" className=\"card-title mb-0\">{departmentname} Subjects</h4>\r\n              <div className=\"small text-muted\" style={{textTransform:'capitalize'}}>{props.school.name}</div>\r\n            </CCol>\r\n            <CCol sm=\"7\" className=\"d-md-block\">\r\n              <CButton \r\n                  data-target='#formz' \r\n                  data-toggle=\"collapse\" \r\n                  color=\"primary\" \r\n                  onClick={toggle}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-plus'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Subject</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-crosshairs'></i> Abbreviate.</th>\r\n                    <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n        <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Subject</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-name\">Subject</CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-name\" \r\n                      name=\"namez\"\r\n                      defaultValue={namez}\r\n                      onChange={(e)=>setNamez(e.target.value)}\r\n                      placeholder=\"Chemistry\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Please enter subject name</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-abbrv\">Subject Abbrv </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-abbrv\" \r\n                      name=\"abbrv\"\r\n                      defaultValue={abbrv}\r\n                      onChange={(e)=>setAbbrv(e.target.value)}\r\n                      placeholder=\"CHEM\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Please enter subject abbrv (max 6 characters)</CFormText>\r\n                </CFormGroup>\r\n               \r\n              </CForm>\r\n            </CCardBody>\r\n            \r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n      </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  subjects : state.subjectReducer,\r\n  departments : state.departmentReducer.departments,\r\n  school : state.schoolReducer.school,\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getSubjects,\r\n  getSubject,\r\n  registerSubject,\r\n  updateSubject,\r\n  deleteSubject\r\n})(Subject)\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    SUBJECT_GET_ONE,\r\n    SUBJECT_GET_MULTIPLE,\r\n    SUBJECT_REGISTER_SUCCESS,\r\n    SUBJECT_REGISTER_FAIL,\r\n    SUBJECT_LOADING,\r\n    SUBJECT_LOADING_ERROR,\r\n    SUBJECT_UPDATE_SUCCESS,\r\n    SUBJECT_UPDATE_FAIL,\r\n    SUBJECT_DELETE_SUCCESS,\r\n    SUBJECT_DELETE_FAIL\r\n} from \"./../../types/setting/subject\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'subjects';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL SUBJECT \r\nexport const getSubjects = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    \r\n\r\n    dispatch({type : SUBJECT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SUBJECT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SUBJECT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE SUBJECT \r\nexport const getSubject = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : SUBJECT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//SUBJECT DELETE\r\nexport const deleteSubject = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SUBJECT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SUBJECT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//SUBJECT REGISTER\r\nexport const registerSubject = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SUBJECT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SUBJECT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //SUBJECT UPDATE\r\nexport const updateSubject = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SUBJECT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SUBJECT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n"],"sourceRoot":""}