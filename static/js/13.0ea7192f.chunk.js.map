{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/student/student.js","actions/setting/school.js","actions/setting/session.js","views/student/StudentAdd.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","path","API_PATH_SETTING","getStudents","params","dispatch","getState","token","MAIN_TOKEN","table","type","STUDENT_LOADING","axios","get","axiosConfig","then","res","STUDENT_GET_MULTIPLE","payload","data","catch","STUDENT_LOADING_ERROR","searchStudent","STUDENT_GET_SEARCH","getStudent","id","STUDENT_GET_ONE","deleteStudent","POST","STUDENT_DELETE_SUCCESS","STUDENT_DELETE_FAIL","registerStudent","post","axiosConfig1","STUDENT_REGISTER_SUCCESS","STUDENT_REGISTER_FAIL","updateStudent","STUDENT_UPDATE_SUCCESS","STUDENT_UPDATE_FAIL","TABLE_NAME","getSchools","SCHOOL_LOADING","SCHOOL_GET_MULTIPLE","SCHOOL_LOADING_ERROR","getSchool","SCHOOL_GET_ONE","deleteSchool","SCHOOL_DELETE_SUCCESS","SCHOOL_DELETE_FAIL","registerSchool","SCHOOL_REGISTER_SUCCESS","SCHOOL_REGISTER_FAIL","updateSchool","SCHOOL_UPDATE_SUCCESS","SCHOOL_UPDATE_FAIL","getSessions","SESSION_LOADING","SESSION_GET_MULTIPLE","SESSION_LOADING_ERROR","getSession","SESSION_GET_ONE","deleteSession","SESSION_DELETE_SUCCESS","SESSION_DELETE_FAIL","registerSession","SESSION_REGISTER_SUCCESS","SESSION_REGISTER_FAIL","updateSession","SESSION_UPDATE_SUCCESS","SESSION_UPDATE_FAIL","connect","state","students","studentReducer","sessions","sessionReducer","schools","userReducer","mySchoolData","dropdowns","props","useHistory","useState","active","setActive","setId","admission","setAdmission","admit","setAdmit","doa","setDoa","schoolid","setSchoolid","surname","setSurname","firstname","setFirstname","middlename","setMiddlename","house","setHouse","place","setPlace","gender","setGender","dob","setDob","religion","setReligion","nationality","setNationality","soo","setSoo","lga","setLga","photo","setPhoto","photo1","setPhoto1","photo2","setPhoto2","photo3","setPhoto3","g1_name","setG1_name","g1_rel","setG1_rel","g1_phone1","setG1_phone1","g1_phone2","setG1_phone2","g1_email","setG1_email","g1_place","setG1_place","g1_address","setG1_address","g2_name","setG2_name","g2_rel","setG2_rel","g2_phone1","setG2_phone1","g2_phone2","setG2_phone2","g2_email","setG2_email","g2_place","setG2_place","g2_address","setG2_address","reason","setReason","dol","setDol","setIs_active","setIs_delete","useEffect","editid","hasOwnProperty","admission_no","is_active","is_delete","setElement","handlePictureActivate","num","fd","FormData","append","schoolarray","console","log","scarray","filter","rw","map","ind","key","name","starray","states","lgar","lgarray","lgas","rw1","relarray","keys","allrelations","placearray","allplaces","housearray","allhousess","xs","md","className","parseInt","activeTab","onActiveTabChange","idx","variant","sm","htmlFor","defaultValue","size","aria-required","placeholder","onChange","e","target","required","custom","color","onClick","pr","ir","callError","JSON","stringify","admission_nox","src","process","width","height","alt","onError","onerror","accept","files","style"],"mappings":"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","file":"static/js/13.0ea7192f.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    STUDENT_GET_ONE,\r\n    STUDENT_GET_MULTIPLE,\r\n    STUDENT_GET_SEARCH,\r\n    STUDENT_REGISTER_SUCCESS,\r\n    STUDENT_REGISTER_FAIL,\r\n    STUDENT_LOADING,\r\n    STUDENT_LOADING_ERROR,\r\n    STUDENT_UPDATE_SUCCESS,\r\n    STUDENT_UPDATE_FAIL,\r\n    STUDENT_DELETE_SUCCESS,\r\n    STUDENT_DELETE_FAIL\r\n} from \"./../../types/student/student\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'students';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL STUDENT \r\nexport const getStudents = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : STUDENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENT \r\nexport const searchStudent = params => (dispatch, getState) => {\r\n   \r\n    dispatch({type : STUDENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENT_GET_SEARCH,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STUDENT \r\nexport const getStudent = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STUDENT DELETE\r\nexport const deleteStudent = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENT REGISTER\r\nexport const registerStudent = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STUDENT UPDATE\r\nexport const updateStudent = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    SCHOOL_GET_ONE,\r\n    SCHOOL_GET_MULTIPLE,\r\n    SCHOOL_GET_DROPDOWNS,\r\n    SCHOOL_REGISTER_SUCCESS,\r\n    SCHOOL_REGISTER_FAIL,\r\n    SCHOOL_LOADING,\r\n    SCHOOL_LOADING_ERROR,\r\n    SCHOOL_UPDATE_SUCCESS,\r\n    SCHOOL_UPDATE_FAIL,\r\n    SCHOOL_DELETE_SUCCESS,\r\n    SCHOOL_DELETE_FAIL\r\n} from \"../../types/setting/school\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'schools';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL SCHOOL \r\nexport const getSchools = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : SCHOOL_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SCHOOL_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SCHOOL_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL SCHOOL \r\nexport const getSchooldropdowns = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : SCHOOL_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SCHOOL_GET_DROPDOWNS,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SCHOOL_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE SCHOOL \r\nexport const getSchool = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : SCHOOL_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//SCHOOL DELETE\r\nexport const deleteSchool = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SCHOOL_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SCHOOL_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//SCHOOL REGISTER\r\nexport const registerSchool = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SCHOOL_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SCHOOL_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //SCHOOL UPDATE\r\nexport const updateSchool = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SCHOOL_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SCHOOL_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    SESSION_GET_ONE,\r\n    SESSION_GET_MULTIPLE,\r\n    SESSION_REGISTER_SUCCESS,\r\n    SESSION_REGISTER_FAIL,\r\n    SESSION_LOADING,\r\n    SESSION_LOADING_ERROR,\r\n    SESSION_UPDATE_SUCCESS,\r\n    SESSION_UPDATE_FAIL,\r\n    SESSION_DELETE_SUCCESS,\r\n    SESSION_DELETE_FAIL\r\n} from \"./../../types/setting/session\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'sessions';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL SESSION \r\nexport const getSessions = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : SESSION_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SESSION_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SESSION_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE SESSION \r\nexport const getSession = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : SESSION_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//SESSION DELETE\r\nexport const deleteSession = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//SESSION REGISTER\r\nexport const registerSession = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //SESSION UPDATE\r\nexport const updateSession = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React , { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getStudents, getStudent, registerStudent, updateStudent, deleteStudent } from './../../actions/student/student';\r\nimport { getSessions } from './../../actions/setting/session';\r\nimport { getSchools } from './../../actions/setting/school';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CCardHeader,\r\n  CNav,\r\n  CNavLink,\r\n  CNavItem,\r\n  CTabContent,\r\n  CTabPane,\r\n  CCard,\r\n  CCardBody,\r\n  CTextarea,\r\n  CTabs,\r\n  CButton,\r\n  CFormGroup,\r\n  CInput,\r\n  CSelect,\r\n  CLabel,\r\n  CCardFooter,\r\n  CInputFile,\r\n  CButtonGroup,\r\n  CFormText\r\n\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { allrelations, allplaces, states, callError, allhousess, setElement } from '../../actions/common';\r\n\r\nconst Students = (props) => {\r\n    const history = useHistory()\r\n\r\n    const [active, setActive] = useState(0)\r\n    const [id, setId] = useState(null)\r\n    const [admission, setAdmission] = useState('')\r\n    const [admit, setAdmit] = useState('')\r\n    const [doa, setDoa] = useState('')\r\n    const [schoolid, setSchoolid] = useState('')\r\n    const [surname, setSurname] = useState('')\r\n    const [firstname, setFirstname] = useState('')\r\n    const [middlename, setMiddlename] = useState('')\r\n    const [house, setHouse] = useState('')\r\n    const [place, setPlace] = useState('')\r\n\r\n    const [gender, setGender] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [religion, setReligion] = useState('')\r\n    const [nationality, setNationality] = useState('')\r\n    const [soo, setSoo] = useState('')\r\n    const [lga, setLga] = useState('')\r\n\r\n    const [photo, setPhoto] = useState('')\r\n    const [photo1, setPhoto1] = useState('')\r\n    const [photo2, setPhoto2] = useState('')\r\n    const [photo3, setPhoto3] = useState('')\r\n\r\n    const [g1_name, setG1_name] = useState('')\r\n    const [g1_rel, setG1_rel] = useState('')\r\n    const [g1_phone1, setG1_phone1] = useState('')\r\n    const [g1_phone2, setG1_phone2] = useState('')\r\n    const [g1_email, setG1_email] = useState('')\r\n    const [g1_place, setG1_place] = useState('')\r\n    const [g1_address, setG1_address] = useState('')\r\n    //const [g1_photo, setG1_photo] = useState('')\r\n\r\n    const [g2_name, setG2_name] = useState('')\r\n    const [g2_rel, setG2_rel] = useState('')\r\n    const [g2_phone1, setG2_phone1] = useState('')\r\n    const [g2_phone2, setG2_phone2] = useState('')\r\n    const [g2_email, setG2_email] = useState('')\r\n    const [g2_place, setG2_place] = useState('')\r\n    const [g2_address, setG2_address] = useState('')\r\n    //const [g2_photo, setG2_photo] = useState('')\r\n\r\n    const [reason, setReason] = useState('')\r\n    const [dol, setDol] = useState('')\r\n    const [is_active, setIs_active] = useState(0)\r\n    const [is_delete, setIs_delete] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n        let data = props.data; \r\n        let editi = props.editid;\r\n        if(props.data && props.data.hasOwnProperty('id'))\r\n        {\r\n          setId(data.id)\r\n          setSurname(data.surname)\r\n          setFirstname(data.firstname)\r\n          setMiddlename(data.middlename)\r\n          setDob(data.dob)\r\n          setPhoto(data.photo)\r\n          setPhoto1(data.photo1)\r\n          setPhoto2(data.photo2)\r\n          setPhoto3(data.photo3)\r\n          setGender(data.gender)\r\n          setReligion(data.religion)\r\n          setNationality(data.nationality)\r\n          setSoo(data.soo)\r\n          setLga(data.lga)\r\n          setHouse(data.house)\r\n          setPlace(data.place)\r\n          setAdmit(data.admit)\r\n          setAdmission(data.admission_no)\r\n          setSchoolid(data.schoolid)\r\n          setDoa(data.doa)\r\n          setG1_name(data.g1_name)\r\n          setG1_address(data.g1_address)\r\n          setG1_rel(data.g1_rel)\r\n          setG1_phone1(data.g1_phone1)\r\n          setG1_phone2(data.g1_phone2)\r\n          setG1_email(data.g1_email)\r\n          setG2_name(data.g2_name)\r\n          setG2_address(data.g2_address)\r\n          setG2_rel(data.g2_rel)\r\n          setG2_phone1(data.g2_phone1)\r\n          setG2_phone2(data.g2_phone2)\r\n          setG2_email(data.g2_email)\r\n\r\n          setReason(data.reason)\r\n          setDol(data.dol)\r\n          setIs_active(data.is_active)\r\n          setIs_delete(data.is_delete)\r\n\r\n          setElement('soo', data.soo)\r\n          setElement('religion', data.religion)\r\n          setElement('gender', data.gender)\r\n          setElement('house', data.house)\r\n          setElement('place', data.place)\r\n          setElement('g1_rel', data.g1_rel)\r\n          setElement('g2_rel', data.g2_rel)\r\n          setElement('g1_place', data.g1_place)\r\n          setElement('g2_place', data.g2_place)\r\n          \r\n        }\r\n      }, [props.data, props.editid])\r\n\r\n\r\n    \r\n    const handlePictureActivate = num =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('photo', num);\r\n        fd.append('cat', 'update');\r\n        fd.append('table', 'students');\r\n        props.updateStudent(fd)\r\n\r\n    }\r\n    const handlePicture1 = () =>{\r\n        let fd = new FormData();\r\n        fd.append('files', photo1);\r\n        fd.append('links', 'photo1');\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'update');\r\n            fd.append('table', 'students');\r\n            props.updateStudent(fd)\r\n        }\r\n        \r\n    }\r\n    const handlePicture2 = () =>{\r\n        let fd = new FormData();\r\n        fd.append('files', photo2);\r\n        fd.append('links', 'photo2');\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'update');\r\n            fd.append('table', 'students');\r\n            props.updateStudent(fd)\r\n        }\r\n    }\r\n    const handlePicture3 = () =>{\r\n        let fd = new FormData();\r\n        fd.append('files', photo3);\r\n        fd.append('links', 'photo3');\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'update');\r\n            fd.append('table', 'students');\r\n            props.updateStudent(fd)\r\n        }  \r\n    }\r\n    const handleCare1 = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('g1_name', g1_name);\r\n        fd.append('g1_rel', g1_rel);\r\n        fd.append('g1_phone1', g1_phone1);\r\n        fd.append('g1_phone2', g1_phone2);\r\n        fd.append('g1_email', g1_email);\r\n        fd.append('g1_place', g1_place);\r\n        fd.append('g1_address', g1_address);\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'update');\r\n            fd.append('table', 'students');\r\n            props.updateStudent(fd)\r\n        }\r\n        \r\n    }\r\n    const handleCare2 = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('g2_name', g2_name);\r\n        fd.append('g2_rel', g2_rel);\r\n        fd.append('g2_phone1', g2_phone1);\r\n        fd.append('g2_phone2', g2_phone2);\r\n        fd.append('g2_email', g2_email);\r\n        fd.append('g2_place', g2_place);\r\n        fd.append('g2_address', g2_address);\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'update');\r\n            fd.append('table', 'students');\r\n            props.updateStudent(fd)\r\n        }\r\n        \r\n    }   \r\n    const handleExit = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('reason', reason);\r\n        fd.append('dol', dol);\r\n        fd.append('is_delete', 1);\r\n        fd.append('is_active', 1);\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'update');\r\n            fd.append('table', 'students');\r\n            props.updateStudent(fd)\r\n        }\r\n    }\r\n    const handleExitReset = () =>{\r\n        let fd = new FormData();\r\n        fd.append('id', id);\r\n        fd.append('reason', reason);\r\n        fd.append('is_delete', 1);\r\n        fd.append('is_active', 1);\r\n        \r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'update');\r\n            fd.append('table', 'students');\r\n            props.updateStudent(fd)\r\n        }\r\n    }\r\n    const handleSubmit = () =>{\r\n        let fd = new FormData();\r\n        fd.append('surname', surname);\r\n        fd.append('firstname', firstname);\r\n        fd.append('middlename', middlename);\r\n        fd.append('dob', dob);\r\n        fd.append('soo', soo);\r\n        fd.append('lga', lga);\r\n        fd.append('nationality', nationality);\r\n        fd.append('religion', religion);\r\n        fd.append('gender', gender);\r\n\r\n        if(id && parseInt(id) > 0)\r\n        {\r\n            fd.append('id', id);\r\n            fd.append('cat', 'update');\r\n            fd.append('table', 'students');\r\n            props.updateStudent(fd)\r\n        }\r\n       \r\n        \r\n    }\r\n    const handleSubmitAdm = () =>{\r\n        let arr = []\r\n        if(surname && surname !== 'nil' && surname.length > 0 ){}else{arr.push('Please input a surname') };\r\n        if(firstname !== 'nil' && firstname.length > 0 ){}else{arr.push('Please input a firstname') };\r\n        if(parseInt(schoolid) > 0 ){}else{arr.push('No School selected') };\r\n        if(parseInt(admission) > 0 ){}else{arr.push('Admission number must be dig1ts') };\r\n        if(parseInt(admission) > 0 && admission.length > 3 ){}else{arr.push('Admission number must be four digits') };\r\n        \r\n        if(arr.length === 0)\r\n        {\r\n            let admission_nox = schoolid+\"_\"+admission;\r\n            let fd = new FormData();\r\n            fd.append('surname', surname);\r\n            fd.append('firstname', firstname);\r\n            fd.append('middlename', middlename);\r\n            fd.append('admission_no', admission);\r\n            fd.append('admission_nox', admission_nox);\r\n            fd.append('schoolid', schoolid);\r\n            fd.append('place', place);\r\n            fd.append('house', house);\r\n            fd.append('doa', doa);\r\n            fd.append('admit', admit);\r\n\r\n            if(id && parseInt(id) > 0)\r\n            {\r\n                fd.append('id', id);\r\n                fd.append('cat', 'update');\r\n                fd.append('table', 'students');\r\n                props.updateStudent(fd);\r\n\r\n            }else{\r\n\r\n                fd.append('cat', 'insert');\r\n                fd.append('table', 'students');\r\n                props.registerStudent(fd)\r\n            }\r\n        }else\r\n        {\r\n            let err = arr.map((pr, ir)=>{\r\n                return pr\r\n            })\r\n            return callError(JSON.stringify(err))\r\n        }\r\n       \r\n        \r\n    }\r\n\r\n\r\nconst changeSoo = (e) =>{\r\n    setSoo(e.target.value);\r\n}\r\nconst changePhoto1 = (e) =>{\r\n    setPhoto1(e.target.files[0]);\r\n}\r\nconst changePhoto2 = (e) =>{\r\n    setPhoto2(e.target.files[0]);\r\n}\r\nconst changePhoto3 = (e) =>{\r\n    setPhoto3(e.target.files[0]);\r\n}\r\n\r\nlet schoolarray = props.schools && Array.isArray(props.schools) ? props.schools : [];\r\nconsole.log(schoolarray);\r\nlet scarray = schoolarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.id}>{rw.name}</option>\r\n})\r\n\r\nlet sessionsarray = props.sessions && Array.isArray(props.sessions) ? props.sessions : [];\r\nlet searray = sessionsarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.id}>{rw.name}</option>\r\n})\r\n\r\n\r\nlet starray = states.filter(rw=>rw !== null).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.state}>{rw.state}</option>\r\n})\r\n\r\nlet lgar = states.filter(rw=>rw !== null && rw.state === soo)\r\nlet lgarray = lgar.length > 0 ? lgar[0].lgas.map((rw1, ind) =>{\r\n    return <option key={ind} value={rw1}>{rw1}</option>\r\n}): '';\r\n\r\n\r\nlet relarray = Object.keys(allrelations).map((rw1, ind) =>{\r\n    return <option key={ind} value={rw1}>{rw1}</option>\r\n});\r\n\r\nlet placearray = Object.keys(allplaces).map((rw1, ind) =>{\r\n    return <option key={ind} value={rw1}>{rw1}</option>\r\n});\r\n\r\nlet housearray = Object.keys(allhousess).map((rw1, ind) =>{\r\n    return <option key={ind} value={rw1}>{rw1}</option>\r\n});\r\n\r\n  return (\r\n    <>\r\n    <CRow>\r\n    <CCol xs=\"12\" md=\"12\" className=\"mb-4\">\r\n        <CCard>\r\n          <CCardHeader>\r\n          { id && parseInt(id)  > 0 ? <h4>{` Edit ${surname} ${firstname} ${middlename} Data`}</h4>:''}\r\n          </CCardHeader>\r\n            <CCardBody>\r\n            <CTabs activeTab={active} onActiveTabChange={idx => setActive(idx)}>\r\n              <CNav variant=\"tabs\">\r\n              <CNavItem>\r\n                  <CNavLink>\r\n                    <i className='fa fa-user'></i>\r\n                    { active === 0 && ' Admission'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <i className='fa fa-user'></i>\r\n                    { active === 1 && ' Basic Data'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                  <i className='fa fa-users'></i>\r\n                    { active === 2 && ' Care Giver/Guardian'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                  <i className='fa fa-image'></i>\r\n                    { active === 3 && ' Photos '}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                  <i className='fa fa-close'></i>\r\n                    { active === 4 && ' Exit'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n              </CNav>\r\n    <CTabContent>\r\n    <CTabPane>\r\n    <CRow>\r\n    <CCol xs=\"12\" sm=\"12\">\r\n                    <CCard>\r\n                        <CCardBody>\r\n                        <CRow>\r\n                            <CCol xs=\"12\" sm='6' >\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"admission\">Admission Number<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"admission\" \r\n                                    defaultValue={admission}\r\n                                    size='lg'\r\n                                    aria-required \r\n                                    placeholder=\"Admission Number\"\r\n                                    onChange={(e)=>setAdmission(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            <CFormText></CFormText>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='6'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"School\">School<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    id=\"school\" \r\n                                    defaultValue={schoolid}\r\n                                    size='lg'\r\n                                    aria-required \r\n                                    placeholder=\"Enter School\"\r\n                                    onChange={(e)=>setSchoolid(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    <option></option>\r\n                                    {scarray}\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='6'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"admit\">Admission Year<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    custom \r\n                                    id=\"admit\" \r\n                                    defaultValue={admit}\r\n                                    aria-required \r\n                                    placeholder=\"Select admission year\"\r\n                                    onChange={(e)=>setAdmit(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    <option value=\"2025\">2025</option>\r\n                                    <option value=\"2024\">2024</option>\r\n                                    <option value=\"2023\">2023</option>\r\n                                    <option value=\"2022\">2022</option>\r\n                                    <option value=\"2021\">2021</option>\r\n                                    <option value=\"2020\">2020</option>\r\n                                    <option value=\"2019\">2019</option>\r\n                                    <option value=\"2018\">2018</option>\r\n                                    <option value=\"2017\">2017</option>\r\n                                    <option value=\"2016\">2016</option>\r\n                                    <option value=\"2015\">2015</option>\r\n                                    <option value=\"2014\">2014</option>\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='6'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"doa\">Date Admitted<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    custom \r\n                                    type='date'\r\n                                    id=\"doa\" \r\n                                    defaultValue={doa}\r\n                                    aria-required \r\n                                    placeholder=\"\"\r\n                                    onChange={(e)=>setDoa(e.target.value)} \r\n                                    required\r\n                                />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"surname\">Surname<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"surname\" \r\n                                    defaultValue={surname}\r\n                                    aria-required \r\n                                    placeholder=\"Enter Surname\"\r\n                                    onChange={(e)=>setSurname(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"firstname\">Firstname<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"firstname\" \r\n                                    defaultValue={firstname}\r\n                                    aria-required \r\n                                    placeholder=\"Enter firstname\"\r\n                                    onChange={(e)=>setFirstname(e.target.value)} \r\n                                    required\r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"middlename\">Middlename</CLabel>\r\n                                <CInput \r\n                                    id=\"middlename\" \r\n                                    defaultValue={middlename}\r\n                                    type='text'\r\n                                    aria-required \r\n                                    placeholder=\"Enter Middlename\"\r\n                                    onChange={(e)=>setMiddlename(e.target.value)} \r\n                                    required\r\n                                />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>   \r\n                        <CRow>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                            <CLabel htmlFor=\"house\">House</CLabel>\r\n                                <CSelect \r\n                                    id=\"house\" \r\n                                    defaultValue={house}\r\n                                    aria-required \r\n                                    placeholder=\"Enter house\"\r\n                                    onChange={(e)=>setHouse(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    <option></option>\r\n                                  {housearray}  \r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"place\">Main Sponsor (Nature/Place of Work)</CLabel>\r\n                                <CSelect \r\n                                    id=\"place\" \r\n                                    defaultValue={place}\r\n                                    aria-required \r\n                                    placeholder=\"Enter place\"\r\n                                    onChange={(e)=>setPlace(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    <option></option>\r\n                                  {placearray}  \r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                           \r\n                            </CCol>\r\n                        </CRow>                         \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={handleSubmitAdm}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                        </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n    </CRow>                    \r\n    </CTabPane>\r\n    <CTabPane>\r\n    <CRow>\r\n     <CCol xs=\"12\" sm=\"12\">\r\n                    <CCard>\r\n                        <CCardBody>\r\n                        <CRow>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"dob\">Date of Birth<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"dob\" \r\n                                    defaultValue={dob}\r\n                                    type='date'\r\n                                    aria-required \r\n                                    placeholder=\"Enter dob\"\r\n                                    onChange={(e)=>setDob(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"gender\">Gender<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    custom \r\n                                    id=\"gender\" \r\n                                    defaultValue={gender}\r\n                                    aria-required \r\n                                    placeholder=\"Select gender\"\r\n                                    onChange={(e)=>setGender(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    <option value='Male'>Male</option>\r\n                                    <option value='Female'>Female</option>\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                            <CLabel htmlFor=\"religion\">Religion<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    custom \r\n                                    id=\"religion\" \r\n                                    defaultValue={religion}\r\n                                    aria-required \r\n                                    placeholder=\"Select Religion\"\r\n                                    onChange={(e)=>setReligion(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    <option value='Christianity'>Christianity</option>\r\n                                    <option value='Islam'>Islam</option>\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        <CRow>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"dob\">Nationality<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    custom \r\n                                    id=\"nationality\" \r\n                                    defaultValue={nationality}\r\n                                    aria-required \r\n                                    placeholder=\"Select Nationality\"\r\n                                    onChange={(e)=>setNationality(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    <option value='Male'>Nigerian</option>\r\n                                    <option value='Female'>non-nigerian</option>\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"soo\">State of Origin<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    custom \r\n                                    id=\"soo\" \r\n                                    onChange={changeSoo} \r\n                                >\r\n                                    {starray}\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" sm='4'>\r\n                            <CFormGroup>\r\n                            <CLabel htmlFor=\"lga\">LGA<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    custom \r\n                                    id=\"lga\" \r\n                                    defaultValue={lga}\r\n                                    aria-required \r\n                                    placeholder=\"Select Lga\"\r\n                                    onChange={(e)=>setLga(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    {id ? <option value={props.data.lga}>{props.data.lga}</option>:<option></option>}\r\n                                    {lgarray}\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={handleSubmit}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                            <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n                        </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n    </CRow>\r\n    </CTabPane>\r\n    <CTabPane>\r\n    <CRow>\r\n    <CCol sm=\"12\" md=\"6\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                        Primary Care Giver\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                       \r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_name\">Name of Care Giver<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"g1_name\" \r\n                                    defaultValue={g1_name}\r\n                                    aria-required \r\n                                    placeholder=\"Care Giver Fullname\"\r\n                                    onChange={(e)=>setG1_name(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                        <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_rel\">Relationship to Student<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    id=\"g1_rel\" \r\n                                    defaultValue={g1_rel}\r\n                                    aria-required \r\n                                    placeholder=\"Enter g1_rel\"\r\n                                    onChange={(e)=>setG1_rel(e.target.value)} \r\n                                    required\r\n                                >\r\n                                  {relarray}  \r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_phone1\">Phone Number<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"g1_phone1\" \r\n                                    defaultValue={g1_phone1}\r\n                                    aria-required \r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setG1_phone1(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_phone2\">Alternative Phone Number</CLabel>\r\n                                <CInput \r\n                                    id=\"g1_phone2\" \r\n                                    defaultValue={g1_phone2}\r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setG1_phone2(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_email\">Email</CLabel>\r\n                                <CInput \r\n                                    id=\"g1_email\" \r\n                                    defaultValue={g1_email}\r\n                                    type='email'\r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setG1_email(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_place\">Place of Work/Name of Business</CLabel>\r\n                                <CSelect \r\n                                    id=\"g1_place\" \r\n                                    defaultValue={g1_place}\r\n                                    aria-required \r\n                                    placeholder=\"Enter g1_place\"\r\n                                    onChange={(e)=>setG1_place(e.target.value)} \r\n                                    required\r\n                                >\r\n                                  {placearray}  \r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g1_address\">Address</CLabel>\r\n                                <CTextarea \r\n                                    id=\"g1_address\" \r\n                                    defaultValue={g1_address}\r\n                                    placeholder=\"....P.0. Box \"\r\n                                    onChange={(e)=>setG1_address(e.target.value)} \r\n                                    />\r\n                                \r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton onClick={handleCare1} type=\"submit\" size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                           </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n                    <CCol sm=\"12\" md=\"6\">\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                        Secondary Care Giver\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                       \r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_name\">Name of Care Giver<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"g2_name\" \r\n                                    defaultValue={g2_name}\r\n                                    aria-required \r\n                                    placeholder=\"Care Giver Fullname\"\r\n                                    onChange={(e)=>setG2_name(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                        <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_rel\">Relationship to Student<i className='text-danger'>*</i></CLabel>\r\n                                <CSelect \r\n                                    id=\"g2_rel\" \r\n                                    defaultValue={g2_rel}\r\n                                    aria-required \r\n                                    placeholder=\"Enter g2_rel\"\r\n                                    onChange={(e)=>setG2_rel(e.target.value)} \r\n                                    required\r\n                                >\r\n                                    {relarray}\r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_phone1\">Phone Number<i className='text-danger'>*</i></CLabel>\r\n                                <CInput \r\n                                    id=\"g2_phone1\" \r\n                                    defaultValue={g2_phone1}\r\n                                    aria-required \r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setG2_phone1(e.target.value)} \r\n                                    required \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_phone2\">Alternative Phone Number</CLabel>\r\n                                <CInput \r\n                                    id=\"g2_phone2\" \r\n                                    defaultValue={g2_phone2}\r\n                                    placeholder=\"080123456789\"\r\n                                    onChange={(e)=>setG2_phone2(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_email\">Email</CLabel>\r\n                                <CInput \r\n                                    id=\"g2_email\" \r\n                                    defaultValue={g2_email}\r\n                                    type='email'\r\n                                    placeholder=\"XX@info.com\"\r\n                                    onChange={(e)=>setG2_email(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_place\">Place of Work/Name of Business</CLabel>\r\n                                <CSelect \r\n                                    id=\"g2_place\" \r\n                                    defaultValue={g2_place}\r\n                                    aria-required \r\n                                    placeholder=\"Enter g2_place\"\r\n                                    onChange={(e)=>setG2_place(e.target.value)} \r\n                                    required\r\n                                >\r\n                                  {placearray}  \r\n                                </CSelect>\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"g2_address\">Address</CLabel>\r\n                                <CTextarea \r\n                                    id=\"g2_address\" \r\n                                    defaultValue={g2_address}\r\n                                    placeholder=\"....P.0. Box \"\r\n                                    onChange={(e)=>setG2_address(e.target.value)} \r\n                                    />\r\n                                \r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton onClick={handleCare2}  type=\"submit\" size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                                 </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n    \r\n    </CRow>\r\n    </CTabPane>\r\n    <CTabPane>\r\n    <CRow>\r\n        <CCol xs=\"12\" sm=\"12\">\r\n            <CCard>\r\n                <CCardHeader>\r\n                Photos\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                <CRow>\r\n                    <CCol xs=\"12\" sm='4' >\r\n                        <CFormGroup>\r\n                            <CLabel htmlFor=\"admission\">\r\n                               Passport 1<br/>\r\n                                <small>Year 1 & 2</small>\r\n                                </CLabel>\r\n                            <CCol xs=\"12\" md=\"9\" className='text-center'>\r\n                            <img \r\n                                src={process.env.REACT_APP_SERVER_URL+ photo1} \r\n                                className=\"m-0 p-0\" \r\n                                width='100px'\r\n                                height='100px'\r\n                                alt={admission} \r\n                                onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + 'avatars/1.png'} }\r\n                             />\r\n                             </CCol>\r\n                             <CCol xs=\"12\" md=\"9\" className='mt-5'>\r\n                                <CInputFile \r\n                                custom \r\n                                id=\"custom-file-input\"\r\n                                name='picture1'\r\n                                accept=\"image/*:capture=camera\"\r\n                                onChange={changePhoto1}\r\n                                />\r\n                                <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\r\n                                Choose file...\r\n                                </CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\" className='mt-2 text-center'>\r\n                            <CButtonGroup className=\"mr-2\">\r\n                                <CButton color=\"secondary\" onClick={handlePicture1}><i className='fa fa-save'></i> Save</CButton>\r\n                                <CButton color=\"secondary\" onClick={()=>handlePictureActivate(photo1)}>Activate</CButton>\r\n                            </CButtonGroup>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    </CCol>\r\n                    <CCol xs=\"12\" sm='4' >\r\n                    <CFormGroup>\r\n                            <CLabel htmlFor=\"admission\">\r\n                                Passport 2<br/>\r\n                                <small>Year 3 & 4</small>\r\n                                </CLabel>\r\n                            <CCol xs=\"12\" md=\"9\" className='text-center'>\r\n                            <img \r\n                                src={process.env.REACT_APP_SERVER_URL+ photo2} \r\n                                className=\"m-0 p-0\" \r\n                                width='100px'\r\n                                height='100px'\r\n                                alt={admission} \r\n                                onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/avatars/1.png'} }\r\n                             />\r\n                             </CCol>\r\n                             <CCol xs=\"12\" md=\"9\" className='mt-5'>\r\n                                <CInputFile \r\n                                custom \r\n                                id=\"custom-file-input2\"\r\n                                name='picture2'\r\n                                accept=\"image/*:capture=camera\"\r\n                                onChange={changePhoto2}\r\n                                />\r\n                                <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\r\n                                Choose file...\r\n                                </CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\" className='mt-2 text-center'>\r\n                            <CButtonGroup className=\"mr-2\">\r\n                                <CButton color=\"secondary\" onClick={handlePicture2}><i className='fa fa-save'></i> Save</CButton>\r\n                                <CButton color=\"secondary\" onClick={()=>handlePictureActivate(photo2)}>Activate</CButton>\r\n                            </CButtonGroup>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    \r\n                    </CCol>\r\n                    <CCol xs=\"12\" sm='4' >\r\n                    <CFormGroup>\r\n                            <CLabel htmlFor=\"admission\">\r\n                                Passport 3<br/>\r\n                                <small>Year 5 & 6</small>\r\n                                </CLabel>\r\n                            <CCol xs=\"12\" md=\"9\" className='text-center'>\r\n                            <img \r\n                                src={process.env.REACT_APP_SERVER_URL+ photo3} \r\n                                className=\"m-0 p-0\" \r\n                                width='100px'\r\n                                height='100px'\r\n                                alt={admission} \r\n                                onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/avatars/1.png'} }\r\n                             />\r\n                             </CCol>\r\n                             <CCol xs=\"12\" md=\"9\" className='mt-5'>\r\n                                <CInputFile \r\n                                custom \r\n                                id=\"custom-file-input\"\r\n                                name='picture3'\r\n                                accept=\"image/*:capture=camera\"\r\n                                onChange={changePhoto3}\r\n                                />\r\n                                \r\n                                <CLabel htmlFor=\"custom-file-input\" variant=\"custom-file\">\r\n                                Choose file...\r\n                                </CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\" className='mt-2 text-center'>\r\n                            <CButtonGroup className=\"mr-2\">\r\n                                \r\n                                <CButton color=\"secondary\" onClick={handlePicture3}><i className='fa fa-save'></i> Save</CButton>\r\n                                <CButton color=\"secondary\" onClick={()=>handlePictureActivate(photo3)}>Activate</CButton>\r\n                            </CButtonGroup>\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                    \r\n                    </CCol>\r\n                </CRow>\r\n                <CRow className='m-auto  p-auto d-flex text-center align-items-center justify-content-center' xs='12'>\r\n                    <CCol xs=\"12\" sm='6' md='4'  className='align-middle'>\r\n                    <CFormGroup>\r\n                            <CLabel htmlFor=\"mm\">\r\n                               Active Passport\r\n                                </CLabel>\r\n                            <CCol xs=\"12\" md=\"9\" className='text-center'>\r\n                            <img \r\n                                src={process.env.REACT_APP_SERVER_URL+ photo} \r\n                                className=\"m-0 p-0\" \r\n                                style={{width:\"200px\", height:\"200px\"}}\r\n                                width='200px'\r\n                                height='200px'\r\n                                alt={admission} \r\n                                onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/avatars/1.png'} }\r\n                             />\r\n                             </CCol>\r\n                        </CFormGroup>\r\n                    </CCol>\r\n                </CRow>\r\n                </CCardBody>\r\n            </CCard>\r\n        </CCol>\r\n    </CRow>\r\n    </CTabPane>\r\n    <CTabPane>\r\n    <CRow>\r\n    <CCol sm=\"12\" md=\"12\">\r\n                    <CCard>\r\n                        <CCardBody>\r\n                       <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"dol\">Date of Leaving</CLabel>\r\n                                <CInput \r\n                                    id=\"dol\" \r\n                                    name='date'\r\n                                    defaultValue={dol}\r\n                                    onChange={(e)=>setDol(e.target.value)} \r\n                                    />\r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CRow>\r\n                            <CCol xs=\"12\">\r\n                            <CFormGroup>\r\n                                <CLabel htmlFor=\"reason\">Reason for Leaving</CLabel>\r\n                                <CTextarea \r\n                                    id=\"reason\" \r\n                                    defaultValue={reason}\r\n                                    placeholder=\"Absent for....., Graduated with,,,, \"\r\n                                    onChange={(e)=>setReason(e.target.value)} \r\n                                    />\r\n                                \r\n                            </CFormGroup>\r\n                            </CCol>\r\n                        </CRow>\r\n                        \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={handleExit}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                            <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={handleExitReset}><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n                        </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n    </CRow>\r\n    </CTabPane>\r\n    </CTabContent>\r\n    </CTabs>\r\n    </CCardBody>\r\n    </CCard>\r\n    </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    students : state.studentReducer,\r\n    sessions : state.sessionReducer.sessions,\r\n    schools : state.userReducer.mySchoolData,\r\n    dropdowns:state.userReducer.dropdowns\r\n  })\r\n  export default connect(mapStateToProps, {\r\n    getStudents,\r\n    getStudent,\r\n    registerStudent,\r\n    updateStudent,\r\n    deleteStudent,\r\n    getSchools,\r\n    getSessions\r\n  })(Students)\r\n  \r\n"],"sourceRoot":""}