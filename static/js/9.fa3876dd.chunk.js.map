{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/staff/staff.js","actions/student/student.js","actions/setting/ca.js","actions/student/studentscore.js","actions/staff/staffsubject.js","actions/student/studentclass.js","actions/setting/report.js","actions/student/studentfee.js","actions/setting/subject.js","actions/setting/fee.js","actions/setting/account.js","actions/setting/gradeunit.js","actions/student/studentattendance.js","actions/setting/classstaff.js","views/staff/SearchDashboard3.js","actions/staff/staffstudent.js","actions/student/studentsubject.js","views/student/ClassBioAnalysis.js","views/student/StudentContactList.js","views/student/StudentGallery.js","views/student/StudentList.js","views/student/StudentFeeList.js","views/staff/Subjects/Headers.js","views/student/StudentDefault.js","views/student/ScoreReportTable1.js","views/student/StudentReportTable.js","views/student/StudentScoreList.js","views/student/ScoreReportTable.js","views/student/StudentReportList.js","views/student/StudentReportList1.js","views/student/StudentClassTeacher.js","views/student/StudentClasses.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","path","API_PATH_STAFF","getStaffs","params","dispatch","getState","token","MAIN_TOKEN","table","type","STAFF_LOADING","axios","get","axiosConfig","then","res","STAFF_GET_MULTIPLE","payload","data","catch","STAFF_LOADING_ERROR","getStaffAll","STAFF_GET_ALL","searchStaff","STAFF_GET_SEARCH","birthday","STAFF_GET_BIRTHDAY","getStaff","id","STAFF_GET_ONE","deleteStaff","POST","STAFF_DELETE_SUCCESS","STAFF_DELETE_FAIL","registerStaff","post","axiosConfig1","STAFF_REGISTER_SUCCESS","STAFF_REGISTER_FAIL","updateStaff","STAFF_UPDATE_SUCCESS","STAFF_UPDATE_FAIL","API_PATH_SETTING","getStudents","STUDENT_LOADING","STUDENT_GET_MULTIPLE","STUDENT_LOADING_ERROR","searchStudent","STUDENT_GET_SEARCH","getStudent","STUDENT_GET_ONE","deleteStudent","STUDENT_DELETE_SUCCESS","STUDENT_DELETE_FAIL","registerStudent","STUDENT_REGISTER_SUCCESS","STUDENT_REGISTER_FAIL","updateStudent","STUDENT_UPDATE_SUCCESS","STUDENT_UPDATE_FAIL","getCas","CA_LOADING","CA_GET_MULTIPLE","CA_LOADING_ERROR","getCa","CA_GET_ONE","deleteCa","CA_DELETE_SUCCESS","CA_DELETE_FAIL","registerCa","CA_REGISTER_SUCCESS","CA_REGISTER_FAIL","updateCa","CA_UPDATE_SUCCESS","CA_UPDATE_FAIL","getStudentscores","STUDENTSCORE_LOADING","STUDENTSCORE_GET_MULTIPLE","STUDENTSCORE_LOADING_ERROR","getStudentscorecas","STUDENTSCORE_GET_MULTIPLE_CA","getStudentscoreSummary","STUDENTSCORE_GET_SUMMARY","deleteStudentscore","STUDENTSCORE_DELETE_SUCCESS","STUDENTSCORE_DELETE_FAIL","registerStudentscore","STUDENTSCORE_REGISTER_SUCCESS","STUDENTSCORE_REGISTER_FAIL","insertStudentca","STUDENTSCORE_REGISTER_CA","STUDENTSCORE_REGISTER_CA_FAIL","deleteStudentca","STUDENTSCORE_DELETE_CA","updateStudentscore","STUDENTSCORE_UPDATE_SUCCESS","STUDENTSCORE_UPDATE_FAIL","getStaffsubjects","STAFFSUBJECT_LOADING","STAFFSUBJECT_GET_MULTIPLE","STAFFSUBJECT_LOADING_ERROR","getStaffsubjectsummary","STAFFSUBJECT_GET_SUMMARY","getStaffsubject","STAFFSUBJECT_GET_ONE","deleteStaffsubject","STAFFSUBJECT_DELETE_SUCCESS","STAFFSUBJECT_DELETE_FAIL","registerStaffsubject","STAFFSUBJECT_REGISTER_SUCCESS","STAFFSUBJECT_REGISTER_FAIL","updateStaffsubject","STAFFSUBJECT_UPDATE_SUCCESS","STAFFSUBJECT_UPDATE_FAIL","getStudentclasss","STUDENTCLASS_LOADING","STUDENTCLASS_GET_MULTIPLE","STUDENTCLASS_LOADING_ERROR","getStudentclassSummary","STUDENTCLASS_GET_SUMMARY","getStudentclass","STUDENTCLASS_GET_ONE","deleteStudentclass","STUDENTCLASS_DELETE_SUCCESS","STUDENTCLASS_DELETE_FAIL","registerStudentclass","STUDENTCLASS_REGISTER_SUCCESS","STUDENTCLASS_REGISTER_FAIL","updateStudentclass","console","log","STUDENTCLASS_UPDATE_SUCCESS","STUDENTCLASS_UPDATE_FAIL","getReports","REPORT_LOADING","REPORT_GET_MULTIPLE","REPORT_LOADING_ERROR","getReport","REPORT_GET_ONE","deleteReport","REPORT_DELETE_SUCCESS","REPORT_DELETE_FAIL","registerReport","REPORT_REGISTER_SUCCESS","REPORT_REGISTER_FAIL","updateReport","REPORT_UPDATE_SUCCESS","REPORT_UPDATE_FAIL","getStudentfees","STUDENTFEE_LOADING","STUDENTFEE_GET_MULTIPLE","STUDENTFEE_LOADING_ERROR","getStudentfeeSummary","STUDENTFEE_GET_SUMMARY","getStudentfeesSingle","STUDENTFEE_GET_SINGLE","getStudentfee","STUDENTFEE_GET_ONE","deleteStudentfee","STUDENTFEE_DELETE_SUCCESS","STUDENTFEE_DELETE_FAIL","registerStudentfee","STUDENTFEE_REGISTER_SUCCESS","STUDENTFEE_REGISTER_FAIL","updateStudentfee","STUDENTFEE_UPDATE_SUCCESS","STUDENTFEE_UPDATE_FAIL","setStudentfee","STUDENTFEE_SET_LOAD","STUDENTFEE_SET_SUCCESS","STUDENTFEE_SET_FAIL","getSubjects","SUBJECT_LOADING","SUBJECT_GET_MULTIPLE","SUBJECT_LOADING_ERROR","getSubject","SUBJECT_GET_ONE","deleteSubject","SUBJECT_DELETE_SUCCESS","SUBJECT_DELETE_FAIL","registerSubject","SUBJECT_REGISTER_SUCCESS","SUBJECT_REGISTER_FAIL","updateSubject","SUBJECT_UPDATE_SUCCESS","SUBJECT_UPDATE_FAIL","getFees","FEE_LOADING","FEE_GET_MULTIPLE","FEE_LOADING_ERROR","getFee","FEE_GET_ONE","deleteFee","FEE_DELETE_SUCCESS","FEE_DELETE_FAIL","registerFee","FEE_REGISTER_SUCCESS","FEE_REGISTER_FAIL","updateFee","FEE_UPDATE_SUCCESS","FEE_UPDATE_FAIL","getAccounts","ACCOUNT_LOADING","ACCOUNT_GET_MULTIPLE","ACCOUNT_LOADING_ERROR","getAccount","ACCOUNT_GET_ONE","deleteAccount","ACCOUNT_DELETE_SUCCESS","ACCOUNT_DELETE_FAIL","registerAccount","ACCOUNT_REGISTER_SUCCESS","ACCOUNT_REGISTER_FAIL","updateAccount","ACCOUNT_UPDATE_SUCCESS","ACCOUNT_UPDATE_FAIL","getGradeunits","GRADEUNIT_LOADING","GRADEUNIT_GET_MULTIPLE","GRADEUNIT_LOADING_ERROR","getGradeunit","GRADEUNIT_GET_ONE","deleteGradeunit","GRADEUNIT_DELETE_SUCCESS","GRADEUNIT_DELETE_FAIL","registerGradeunit","GRADEUNIT_REGISTER_SUCCESS","GRADEUNIT_REGISTER_FAIL","updateGradeunit","GRADEUNIT_UPDATE_SUCCESS","GRADEUNIT_UPDATE_FAIL","API_PATH_STUDENT","getStudentattendances","STUDENTATTENDANCE_LOADING","STUDENTATTENDANCE_GET_MULTIPLE","STUDENTATTENDANCE_LOADING_ERROR","getStudentattendanceSummary","STUDENTATTENDANCE_GET_SUMMARY","getStudentattendancedailys","STUDENTATTENDANCE_GET_DAILY","getStudentattendance","STUDENTATTENDANCE_GET_ONE","deleteStudentattendance","STUDENTATTENDANCE_DELETE_SUCCESS","STUDENTATTENDANCE_DELETE_FAIL","deleteStudentattendancedaily","STUDENTATTENDANCE_DELETE_DAILY","registerStudentattendance","STUDENTATTENDANCE_REGISTER_SUCCESS","STUDENTATTENDANCE_REGISTER_FAIL","registerStudentattendancedaily","STUDENTATTENDANCE_REGISTER_DAILY","updateStudentattendance","STUDENTATTENDANCE_UPDATE_SUCCESS","STUDENTATTENDANCE_UPDATE_FAIL","updateStudentattendancedaily","STUDENTATTENDANCE_UPDATE_DAILY","getClassstaffs","CLASSSTAFF_LOADING","CLASSSTAFF_GET_MULTIPLE","CLASSSTAFF_LOADING_ERROR","getClassstaff","CLASSSTAFF_GET_ONE","deleteClassstaff","CLASSSTAFF_DELETE_SUCCESS","CLASSSTAFF_DELETE_FAIL","registerClassstaff","CLASSSTAFF_REGISTER_SUCCESS","CLASSSTAFF_REGISTER_FAIL","updateClassstaff","CLASSSTAFF_UPDATE_SUCCESS","CLASSSTAFF_UPDATE_FAIL","connect","state","result","studentReducer","user","userReducer","props","useState","term","setTerm","clasz","setClasz","useEffect","JSON","stringify","activeschool","cat","narration","dat","map","prop","index","key","target","className","onClick","studentx","active","xs","src","process","photo","style","height","width","alt","class","onError","e","onerror","name","admission_no","size","onChange","placeholder","display","position","zIndex","onMouseLeave","getStaffstudents","STAFFSTUDENT_LOADING","STAFFSTUDENT_GET_MULTIPLE","STAFFSTUDENT_LOADING_ERROR","deleteStaffstudent","STAFFSTUDENT_DELETE_SUCCESS","STAFFSTUDENT_DELETE_FAIL","registerStaffstudent","STAFFSTUDENT_REGISTER_SUCCESS","STAFFSTUDENT_REGISTER_FAIL","updateStaffstudent","STAFFSTUDENT_UPDATE_SUCCESS","STAFFSTUDENT_UPDATE_FAIL","Studentclasss","useParams","useHistory","filter","rw","genderFemale","gender","genderMale","departmentTable","departmentid","religionTable","religion","genderTable","sooTable","soo","dobTable","yrs","Date","dob","getFullYear","yr","Math","round","sm","lg","text","header","color","iconPadding","md","datasets","backgroundColor","values","labels","keys","options","tooltips","enabled","history","cont","row","ind","surname","firstname","middlename","g1_name","g1_rel","textTransform","g1_place","href","g1_phone1","g1_phone2","g1_email","g1_address","g2_name","g2_rel","g2_phone1","g2_phone2","g2_email","g2_address","pht","window","open","top","fontSize","fontWeight","tabl","abbrv","moment","format","diff","lga","fees","feeReducer","accounts","accountReducer","users","staffs","staffReducer","staffall","studentfees","studentfeeReducer","studentfee","studentsinglefees","terms","termid","sessions","sessionid","data1","datepaid","setDatepaid","amount","setAmount","accountid","setAccountid","feeid","setFeeid","staffid","setstaffid","teller","setTeller","setdata","hasOwnProperty","parseInt","is_active","params1","onDelete","Swal","fd","FormData","append","fearray","staffarray","substring","schoolabbrv","acarray","std","acct","subs","adds","studentid","grp","p","parseFloat","classteacher","date_created","setHours","getHours","cursor","feename","nairaformat","parentid","parentname","subzs","addzs","reduce","a","b","setDiff","block","htmlFor","autoComplete","claszparentid","mid","handleSubmitFeeOnly","handleSubmitFee","handleSubmit","handleSubmitStudent","Header","studentdata","SearchDashboard3","placeStudent","loadStudent","setStudentdata","leaves","leavestd","studentattendance","studentattendanceReducer","classstaff","classstaffReducer","staffsubject","staffsubjectReducer","dropdowns","dates","setDates","reason","setreason","leaveid","setleaveid","search","selector","setselector","actions","setactions","itemzs","setitemzs","session","activeterm","getleave","confirm_student_available","d","clients","chk","saveAttendance","itemoptions","staffsubjects","prp","itemid1","itemname1","itemname","dt","registered_attendance_date","studentattendancedailys","check_date","confirm_date","registered_attendance_issue","studentattendances","check_issue","dup","dupli","split","numdup","colors","content","variant","checked","includes","sel","loadSelect","disabled","onRemove","cid","custom","defaultValue","setsearch","changeDates","show","placeStudentSubject","forEach","element","changeSelect","studentscore","studentscoreReducer","studentscoreca","reportid","students","claszname","claszparentname","allsubjects","subjectname","theadm","scores","student_ca_score_array","computeavg","sums","tots","Number","toFixed","compute","sumz","cols","sumfinal","avgfinal","rkfinal","avg_array","cascored","cascored_array","ele","clientid","itemid","contact","pullrank","sumrow","numrow","pr","sort","score","player","rank","stdrank","el","ordinal_suffix_of","numfooter","sub","idx","sumfooter","fontStyle","avgfooter","rk","subjectid","rkfooter","border","borderColor","rowSpan","StudentReportList","rows","studentname","theadm1","caunit_array","ca_array","ca_score","classparent_subject_average","class_subject_average","student_classparent_subject_position_store","student_class_subject_position_store","student_classparent_position_store","student_class_position_store","total_subjects","student_ca_score_store","total_scores","std_position","std_positions","compute100","totz","rank_array_classparent","total_array_classparent","avg_array_classparent","ra","average","rank_array_class","total_array_class","avg_array_class","totrow","pro","inds","sh","shmax","pop","fontFamily","paddingLeft","get_student_total","get_student_average","reports","reportReducer","studentscores","cas","caReducer","studentids","claszparent","repid","setrepid","casss","cass","ca","studentscorearray","srr","caid","subjectabbrv","studentparentaveragearray","frr","avgr","maxscore","studentclassaveragearray","student_classparent_subject_position_array","student_classparent_subject_position_stores","prr","student_class_subject_position_array","student_class_subject_position_stores","student_classparent_position_array","avg","total","nums","student_class_position_array","student_ca_score","reportarray","report_array","title","ranksubjectclassunit","r","ranksubjectclass","rankclass","ro","rankclassunit","ca1_array","ca2_array","typeid","sid","caabbrv","SUBStopic","SUBS","pathname","report","keepca","sc","computes","lockEditing","clearRecord","gradeunits","gradeunitReducer","setActive","grd","gradeid","params2","colSpan","ScoreReportTable","activeTab","onActiveTabChange","parse","join","StudStopic","STUDENTZ","StudentReportTable","subjects","subjectReducer","claszid","setId","setsubjectid","setcontact","setsubjectname","staffname","setstaffname","schoolid","is_delete","groupid","onEdit","subjectarray","subarray","starray","clientname","num","nu","onActivate","studentclasss","studentclassReducer","termz","getStudentsubjects","STUDENTSUBJECT_LOADING","STUDENTSUBJECT_GET_MULTIPLE","STUDENTSUBJECT_LOADING_ERROR","getStudentsubject","STUDENTSUBJECT_GET_ONE","registerStudentsubject","STUDENTSUBJECT_REGISTER_SUCCESS","STUDENTSUBJECT_REGISTER_FAIL","updateStudentsubject","STUDENTSUBJECT_UPDATE_SUCCESS","STUDENTSUBJECT_UPDATE_FAIL","deleteStudentsubject","STUDENTSUBJECT_DELETE_SUCCESS","STUDENTSUBJECT_DELETE_FAIL","getUserdropdowns","getUserTerms","setActiveterm","setTitle","setSession","setclaszname","setclaszparentname","setClaszparent","sides","setSides","setdates","dt0","dt1","dtn0","dtn1","dtn2","caname","did","tid","callError","staff_available","classstaffs","dataq","toLowerCase","action","method","changeTerm","changeClasz","data-target","data-toggle","prev","len","subject","goBack","redirectAttendance","StudentDefault","dateactive","ClassBioAnalysis","StudentList","StudentContactList","StudentGallery","StudentFeeList","StudentClassTeacher","StudentReportList1","StudentScoreList"],"mappings":"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","file":"static/js/9.fa3876dd.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    STAFF_GET_ONE,\r\n    STAFF_GET_MULTIPLE,\r\n    STAFF_GET_ALL,\r\n    STAFF_GET_BIRTHDAY,\r\n    STAFF_GET_SEARCH,\r\n    STAFF_REGISTER_SUCCESS,\r\n    STAFF_REGISTER_FAIL,\r\n    STAFF_LOADING,\r\n    STAFF_LOADING_ERROR,\r\n    STAFF_UPDATE_SUCCESS,\r\n    STAFF_UPDATE_FAIL,\r\n    STAFF_DELETE_SUCCESS,\r\n    STAFF_DELETE_FAIL\r\n} from \"./../../types/staff/staff\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'staffs';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFF \r\nexport const getStaffs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STAFF \r\nexport const getStaffAll = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                      \r\n                dispatch({\r\n                    type: STAFF_GET_ALL,\r\n                    payload: res.data\r\n                 })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                   type : STAFF_LOADING_ERROR,\r\n                   payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const searchStaff = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_SEARCH,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const birthday = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_BIRTHDAY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET SINGLE STAFF \r\nexport const getStaff = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFF_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFF DELETE\r\nexport const deleteStaff = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFF REGISTER\r\nexport const registerStaff = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFF UPDATE\r\nexport const updateStaff = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STUDENT_GET_ONE,\r\n    STUDENT_GET_MULTIPLE,\r\n    STUDENT_GET_SEARCH,\r\n    STUDENT_REGISTER_SUCCESS,\r\n    STUDENT_REGISTER_FAIL,\r\n    STUDENT_LOADING,\r\n    STUDENT_LOADING_ERROR,\r\n    STUDENT_UPDATE_SUCCESS,\r\n    STUDENT_UPDATE_FAIL,\r\n    STUDENT_DELETE_SUCCESS,\r\n    STUDENT_DELETE_FAIL\r\n} from \"./../../types/student/student\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'students';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL STUDENT \r\nexport const getStudents = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : STUDENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENT \r\nexport const searchStudent = params => (dispatch, getState) => {\r\n   \r\n    dispatch({type : STUDENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENT_GET_SEARCH,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STUDENT \r\nexport const getStudent = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STUDENT DELETE\r\nexport const deleteStudent = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENT REGISTER\r\nexport const registerStudent = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STUDENT UPDATE\r\nexport const updateStudent = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    CA_GET_ONE,\r\n    CA_GET_MULTIPLE,\r\n    CA_REGISTER_SUCCESS,\r\n    CA_REGISTER_FAIL,\r\n    CA_LOADING,\r\n    CA_LOADING_ERROR,\r\n    CA_UPDATE_SUCCESS,\r\n    CA_UPDATE_FAIL,\r\n    CA_DELETE_SUCCESS,\r\n    CA_DELETE_FAIL\r\n} from \"../../types/setting/ca\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'cas';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CA \r\nexport const getCas = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : CA_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CA_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CA_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CA \r\nexport const getCa = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CA_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CA DELETE\r\nexport const deleteCa = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CA REGISTER\r\nexport const registerCa = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CA UPDATE\r\nexport const updateCa = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STUDENTSCORE_GET_ONE,\r\n    STUDENTSCORE_GET_MULTIPLE,\r\n    STUDENTSCORE_GET_MULTIPLE_CA,\r\n    STUDENTSCORE_DELETE_CA,\r\n    STUDENTSCORE_GET_SUMMARY,\r\n    STUDENTSCORE_GET_SINGLE,\r\n    STUDENTSCORE_REGISTER_SUCCESS,\r\n    STUDENTSCORE_REGISTER_FAIL,\r\n    STUDENTSCORE_REGISTER_CA,\r\n    STUDENTSCORE_REGISTER_CA_FAIL,\r\n    STUDENTSCORE_LOADING,\r\n    STUDENTSCORE_LOADING_ERROR,\r\n    STUDENTSCORE_UPDATE_SUCCESS,\r\n    STUDENTSCORE_SET_SUCCESS,\r\n    STUDENTSCORE_SET_FAIL,\r\n    STUDENTSCORE_SET_LOAD,\r\n    STUDENTSCORE_UPDATE_FAIL,\r\n    STUDENTSCORE_DELETE_SUCCESS,\r\n    STUDENTSCORE_DELETE_FAIL\r\n} from \"./../../types/student/studentscore\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL STUDENTSCORE \r\nexport const getStudentscores = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTSCORE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTSCORE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTSCORE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENTSCORE \r\nexport const getStudentscorecas = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n        params.token = MAIN_TOKEN;\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTSCORE_GET_MULTIPLE_CA,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTSCORE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENTSCORE \r\nexport const getStudentscoreSummary = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTSCORE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTSCORE_GET_SUMMARY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTSCORE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENTSCORE \r\nexport const getStudentscoresSingle = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTSCORE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTSCORE_GET_SINGLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTSCORE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STUDENTSCORE \r\nexport const getStudentscore = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENTSCORE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STUDENTSCORE DELETE\r\nexport const deleteStudentscore = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSCORE_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSCORE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENTSCORE REGISTER\r\nexport const registerStudentscore = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSCORE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSCORE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n//STUDENTSCORE REGISTER\r\nexport const insertStudentca = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSCORE_REGISTER_CA,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSCORE_REGISTER_CA_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n//STUDENTSCORE REGISTER\r\nexport const deleteStudentca = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSCORE_DELETE_CA,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSCORE_REGISTER_CA_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STUDENTSCORE UPDATE\r\nexport const updateStudentscore = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSCORE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSCORE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n//STUDENTSCORE UPDATE\r\nexport const setStudentscore = (data) => (dispatch, getState) => {\r\n    //body\r\n    dispatch({type : STUDENTSCORE_SET_LOAD});\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSCORE_SET_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSCORE_SET_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};","import axios from 'axios';\r\nimport {\r\n    STAFFSUBJECT_GET_ONE,\r\n    STAFFSUBJECT_GET_MULTIPLE,\r\n    STAFFSUBJECT_GET_SUMMARY,\r\n    STAFFSUBJECT_REGISTER_SUCCESS,\r\n    STAFFSUBJECT_REGISTER_FAIL,\r\n    STAFFSUBJECT_LOADING,\r\n    STAFFSUBJECT_LOADING_ERROR,\r\n    STAFFSUBJECT_UPDATE_SUCCESS,\r\n    STAFFSUBJECT_UPDATE_FAIL,\r\n    STAFFSUBJECT_DELETE_SUCCESS,\r\n    STAFFSUBJECT_DELETE_FAIL\r\n} from \"./../../types/staff/staffsubject\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'staffsubjects';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFFSUBJECT \r\nexport const getStaffsubjects = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFFSUBJECT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFFSUBJECT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFFSUBJECT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\nexport const getStaffsubjectsummary = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFFSUBJECT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFFSUBJECT_GET_SUMMARY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFFSUBJECT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET SINGLE STAFFSUBJECT \r\nexport const getStaffsubject = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFFSUBJECT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFFSUBJECT DELETE\r\nexport const deleteStaffsubject = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFSUBJECT_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFSUBJECT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFFSUBJECT REGISTER\r\nexport const registerStaffsubject = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFSUBJECT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFSUBJECT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFFSUBJECT UPDATE\r\nexport const updateStaffsubject = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFSUBJECT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFSUBJECT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STUDENTCLASS_GET_ONE,\r\n    STUDENTCLASS_GET_MULTIPLE,\r\n    STUDENTCLASS_GET_SUMMARY,\r\n    STUDENTCLASS_REGISTER_SUCCESS,\r\n    STUDENTCLASS_REGISTER_FAIL,\r\n    STUDENTCLASS_LOADING,\r\n    STUDENTCLASS_LOADING_ERROR,\r\n    STUDENTCLASS_UPDATE_SUCCESS,\r\n    STUDENTCLASS_UPDATE_FAIL,\r\n    STUDENTCLASS_DELETE_SUCCESS,\r\n    STUDENTCLASS_DELETE_FAIL\r\n} from \"./../../types/student/studentclass\";\r\n\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL STUDENTCLASS \r\nexport const getStudentclasss = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTCLASS_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTCLASS_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTCLASS_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET ALL STUDENTCLASS \r\nexport const getStudentclassSummary = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTCLASS_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTCLASS_GET_SUMMARY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTCLASS_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STUDENTCLASS \r\nexport const getStudentclass = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENTCLASS_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STUDENTCLASS DELETE\r\nexport const deleteStudentclass = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTCLASS_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTCLASS_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENTCLASS REGISTER\r\nexport const registerStudentclass = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTCLASS_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTCLASS_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STUDENTCLASS UPDATE\r\nexport const updateStudentclass = (data) => (dispatch, getState) => {\r\n    //body\r\n    console.log(data)\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTCLASS_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTCLASS_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    REPORT_GET_ONE,\r\n    REPORT_GET_MULTIPLE,\r\n    REPORT_REGISTER_SUCCESS,\r\n    REPORT_REGISTER_FAIL,\r\n    REPORT_LOADING,\r\n    REPORT_LOADING_ERROR,\r\n    REPORT_UPDATE_SUCCESS,\r\n    REPORT_UPDATE_FAIL,\r\n    REPORT_DELETE_SUCCESS,\r\n    REPORT_DELETE_FAIL\r\n} from \"../../types/setting/report\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'reports';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL REPORT \r\nexport const getReports = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : REPORT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: REPORT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : REPORT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE REPORT \r\nexport const getReport = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : REPORT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//REPORT DELETE\r\nexport const deleteReport = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: REPORT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : REPORT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//REPORT REGISTER\r\nexport const registerReport = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: REPORT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : REPORT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //REPORT UPDATE\r\nexport const updateReport = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: REPORT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : REPORT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STUDENTFEE_GET_ONE,\r\n    STUDENTFEE_GET_MULTIPLE,\r\n    STUDENTFEE_GET_SUMMARY,\r\n    STUDENTFEE_GET_SINGLE,\r\n    STUDENTFEE_REGISTER_SUCCESS,\r\n    STUDENTFEE_REGISTER_FAIL,\r\n    STUDENTFEE_LOADING,\r\n    STUDENTFEE_LOADING_ERROR,\r\n    STUDENTFEE_UPDATE_SUCCESS,\r\n    STUDENTFEE_SET_SUCCESS,\r\n    STUDENTFEE_SET_FAIL,\r\n    STUDENTFEE_SET_LOAD,\r\n    STUDENTFEE_UPDATE_FAIL,\r\n    STUDENTFEE_DELETE_SUCCESS,\r\n    STUDENTFEE_DELETE_FAIL\r\n} from \"./../../types/student/studentfee\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL STUDENTFEE \r\nexport const getStudentfees = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTFEE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTFEE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTFEE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENTFEE \r\nexport const getStudentfeeSummary = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTFEE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTFEE_GET_SUMMARY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTFEE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENTFEE \r\nexport const getStudentfeesSingle = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTFEE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTFEE_GET_SINGLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTFEE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STUDENTFEE \r\nexport const getStudentfee = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENTFEE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STUDENTFEE DELETE\r\nexport const deleteStudentfee = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTFEE_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTFEE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENTFEE REGISTER\r\nexport const registerStudentfee = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTFEE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTFEE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STUDENTFEE UPDATE\r\nexport const updateStudentfee = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTFEE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTFEE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n//STUDENTFEE UPDATE\r\nexport const setStudentfee = (data) => (dispatch, getState) => {\r\n    //body\r\n    dispatch({type : STUDENTFEE_SET_LOAD});\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTFEE_SET_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTFEE_SET_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};","import axios from 'axios';\r\nimport {\r\n    SUBJECT_GET_ONE,\r\n    SUBJECT_GET_MULTIPLE,\r\n    SUBJECT_REGISTER_SUCCESS,\r\n    SUBJECT_REGISTER_FAIL,\r\n    SUBJECT_LOADING,\r\n    SUBJECT_LOADING_ERROR,\r\n    SUBJECT_UPDATE_SUCCESS,\r\n    SUBJECT_UPDATE_FAIL,\r\n    SUBJECT_DELETE_SUCCESS,\r\n    SUBJECT_DELETE_FAIL\r\n} from \"./../../types/setting/subject\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'subjects';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL SUBJECT \r\nexport const getSubjects = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    \r\n\r\n    dispatch({type : SUBJECT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SUBJECT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SUBJECT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE SUBJECT \r\nexport const getSubject = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : SUBJECT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//SUBJECT DELETE\r\nexport const deleteSubject = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SUBJECT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SUBJECT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//SUBJECT REGISTER\r\nexport const registerSubject = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SUBJECT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SUBJECT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //SUBJECT UPDATE\r\nexport const updateSubject = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SUBJECT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SUBJECT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    FEE_GET_ONE,\r\n    FEE_GET_MULTIPLE,\r\n    FEE_REGISTER_SUCCESS,\r\n    FEE_REGISTER_FAIL,\r\n    FEE_LOADING,\r\n    FEE_LOADING_ERROR,\r\n    FEE_UPDATE_SUCCESS,\r\n    FEE_UPDATE_FAIL,\r\n    FEE_DELETE_SUCCESS,\r\n    FEE_DELETE_FAIL\r\n} from \"../../types/setting/fee\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'fees';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL FEE \r\nexport const getFees = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : FEE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: FEE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : FEE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE FEE \r\nexport const getFee = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : FEE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//FEE DELETE\r\nexport const deleteFee = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: FEE_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : FEE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//FEE REGISTER\r\nexport const registerFee = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: FEE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : FEE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //FEE UPDATE\r\nexport const updateFee = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: FEE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : FEE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    ACCOUNT_GET_ONE,\r\n    ACCOUNT_GET_MULTIPLE,\r\n    ACCOUNT_REGISTER_SUCCESS,\r\n    ACCOUNT_REGISTER_FAIL,\r\n    ACCOUNT_LOADING,\r\n    ACCOUNT_LOADING_ERROR,\r\n    ACCOUNT_UPDATE_SUCCESS,\r\n    ACCOUNT_UPDATE_FAIL,\r\n    ACCOUNT_DELETE_SUCCESS,\r\n    ACCOUNT_DELETE_FAIL\r\n} from \"../../types/setting/account\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'accounts';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL ACCOUNT \r\nexport const getAccounts = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : ACCOUNT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: ACCOUNT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : ACCOUNT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE ACCOUNT \r\nexport const getAccount = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : ACCOUNT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//ACCOUNT DELETE\r\nexport const deleteAccount = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ACCOUNT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : ACCOUNT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//ACCOUNT REGISTER\r\nexport const registerAccount = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ACCOUNT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : ACCOUNT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //ACCOUNT UPDATE\r\nexport const updateAccount = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ACCOUNT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : ACCOUNT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    GRADEUNIT_GET_ONE,\r\n    GRADEUNIT_GET_MULTIPLE,\r\n    GRADEUNIT_REGISTER_SUCCESS,\r\n    GRADEUNIT_REGISTER_FAIL,\r\n    GRADEUNIT_LOADING,\r\n    GRADEUNIT_LOADING_ERROR,\r\n    GRADEUNIT_UPDATE_SUCCESS,\r\n    GRADEUNIT_UPDATE_FAIL,\r\n    GRADEUNIT_DELETE_SUCCESS,\r\n    GRADEUNIT_DELETE_FAIL\r\n} from \"../../types/setting/gradeunit\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'gradeunits';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL GRADEUNIT \r\nexport const getGradeunits = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : GRADEUNIT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: GRADEUNIT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : GRADEUNIT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE GRADEUNIT \r\nexport const getGradeunit = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : GRADEUNIT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//GRADEUNIT DELETE\r\nexport const deleteGradeunit = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GRADEUNIT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : GRADEUNIT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//GRADEUNIT REGISTER\r\nexport const registerGradeunit = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GRADEUNIT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : GRADEUNIT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //GRADEUNIT UPDATE\r\nexport const updateGradeunit = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GRADEUNIT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : GRADEUNIT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STUDENTATTENDANCE_GET_ONE,\r\n    STUDENTATTENDANCE_GET_MULTIPLE,\r\n    STUDENTATTENDANCE_GET_DAILY,\r\n    STUDENTATTENDANCE_REGISTER_SUCCESS,\r\n    STUDENTATTENDANCE_REGISTER_DAILY,\r\n    STUDENTATTENDANCE_REGISTER_FAIL,\r\n    STUDENTATTENDANCE_LOADING,\r\n    STUDENTATTENDANCE_LOADING_ERROR,\r\n    STUDENTATTENDANCE_UPDATE_SUCCESS,\r\n    STUDENTATTENDANCE_UPDATE_DAILY,\r\n    STUDENTATTENDANCE_UPDATE_FAIL,\r\n    STUDENTATTENDANCE_DELETE_SUCCESS,\r\n    STUDENTATTENDANCE_DELETE_DAILY,\r\n    STUDENTATTENDANCE_DELETE_FAIL,\r\n    STUDENTATTENDANCE_GET_SUMMARY\r\n} from \"./../../types/student/studentattendance\";\r\nimport { MAIN_TOKEN, API_PATH_STUDENT, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'access';\r\nconst path = API_PATH_STUDENT;\r\n\r\n//GET ALL STUDENTATTENDANCE \r\nexport const getStudentattendances = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTATTENDANCE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTATTENDANCE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTATTENDANCE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENTATTENDANCE \r\nexport const getStudentattendanceSummary = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTATTENDANCE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTATTENDANCE_GET_SUMMARY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTATTENDANCE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENTATTENDANCE \r\nexport const getStudentattendancedailys = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTATTENDANCE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTATTENDANCE_GET_DAILY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTATTENDANCE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STUDENTATTENDANCE \r\nexport const getStudentattendance = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENTATTENDANCE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//GET SINGLE STUDENTATTENDANCE \r\nexport const getStudentattendancedaily = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENTATTENDANCE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STUDENTATTENDANCE DELETE\r\nexport const deleteStudentattendance = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTATTENDANCE_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTATTENDANCE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENTATTENDANCE DELETE\r\nexport const deleteStudentattendancedaily = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTATTENDANCE_DELETE_DAILY,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTATTENDANCE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENTATTENDANCE REGISTER\r\nexport const registerStudentattendance = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTATTENDANCE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTATTENDANCE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n//STUDENTATTENDANCE REGISTER\r\nexport const registerStudentattendancedaily = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTATTENDANCE_REGISTER_DAILY,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTATTENDANCE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STUDENTATTENDANCE UPDATE\r\nexport const updateStudentattendance = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTATTENDANCE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTATTENDANCE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\nexport const updateStudentattendancedaily = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTATTENDANCE_UPDATE_DAILY,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTATTENDANCE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    CLASSSTAFF_GET_ONE,\r\n    CLASSSTAFF_GET_MULTIPLE,\r\n    CLASSSTAFF_REGISTER_SUCCESS,\r\n    CLASSSTAFF_REGISTER_FAIL,\r\n    CLASSSTAFF_LOADING,\r\n    CLASSSTAFF_LOADING_ERROR,\r\n    CLASSSTAFF_UPDATE_SUCCESS,\r\n    CLASSSTAFF_UPDATE_FAIL,\r\n    CLASSSTAFF_DELETE_SUCCESS,\r\n    CLASSSTAFF_DELETE_FAIL\r\n} from \"../../types/setting/classstaff\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from '../common';\r\n\r\nlet TABLE_NAME = 'access';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL CLASSSTAFF \r\nexport const getClassstaffs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : CLASSSTAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CLASSSTAFF_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CLASSSTAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CLASSSTAFF \r\nexport const getClassstaff = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CLASSSTAFF_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CLASSSTAFF DELETE\r\nexport const deleteClassstaff = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASSSTAFF_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASSSTAFF_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CLASSSTAFF REGISTER\r\nexport const registerClassstaff = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASSSTAFF_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASSSTAFF_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CLASSSTAFF UPDATE\r\nexport const updateClassstaff = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASSSTAFF_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASSSTAFF_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","\r\nimport React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { searchStudent } from './../../actions/student/student'\r\nimport {  \r\n    CCol, \r\n    CRow,\r\n    CFormGroup,\r\n    CInput,\r\n    CListGroup,\r\n    CListGroupItem,\r\n    CCard\r\n    \r\n} from '@coreui/react';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n  const [term, setTerm] = useState();\r\n  const [clasz, setClasz] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(props.result !== undefined && Array.isArray(props.result))\r\n    {\r\n      setClasz(props.result)\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [props.result])\r\n\r\n  useEffect(() => {\r\n    if(term !== undefined && term.length > 2)\r\n    {\r\n      let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'search':term,\r\n            'schoolid': props.user.activeschool.id\r\n        }),\r\n        cat:'selected',\r\n        table:'studentsearch',\r\n        narration:`get all schools for access control`\r\n      }\r\n      props.searchStudent(params);\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [term, props.user.activeschool.id])\r\n\r\n\r\n  let dat = clasz.map((prop, index)=>{\r\n    return <CListGroupItem key={index} target='_blank' className=\"m-0\"  onClick={()=>props.studentx(prop)} active>\r\n      <CRow>\r\n        <CCol xs='2' className='m-0'>\r\n            <img\r\n               src={process.env.REACT_APP_SERVER_URL + prop.photo} \r\n               style={{height:'40px', width:'40px'}}\r\n               height=\"30px\"\r\n               alt=\"profile-image\" \r\n               class=\"profile\"\r\n               onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/icons/profile_1.png'} }\r\n               />\r\n        </CCol>\r\n        <CCol>\r\n        <strong>{prop.name}</strong><br/>\r\n        <small>{prop.admission_no}</small>\r\n        </CCol>\r\n      </CRow>\r\n      </CListGroupItem>\r\n  })\r\n  \r\nreturn (\r\n    <>\r\n              <CRow xs={12} >\r\n                <CCol xs={12}>\r\n                <CFormGroup >\r\n                  <CInput\r\n                    size=\"md\"\r\n                    className='w-100'\r\n                    value={term}\r\n                    onChange={(e)=>setTerm(e.target.value)}\r\n                    placeholder=' Search for students... Name or Admission number'\r\n                    \r\n                    />     \r\n                </CFormGroup>\r\n                <CCard className=\"mt-1\" style={{display:'block', position:'absolute', zIndex:'101'}}>\r\n                <CListGroup style={{width:'300px'}} onMouseLeave={()=>setClasz([])}>\r\n                  {dat}\r\n                 </CListGroup>\r\n                </CCard>\r\n                </CCol>\r\n              </CRow>        \r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  result:state.studentReducer.result,\r\n  user : state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {searchStudent})(Dashboard)","import axios from 'axios';\r\nimport {\r\n    STAFFSTUDENT_GET_ONE,\r\n    STAFFSTUDENT_GET_MULTIPLE,\r\n    STAFFSTUDENT_REGISTER_SUCCESS,\r\n    STAFFSTUDENT_REGISTER_FAIL,\r\n    STAFFSTUDENT_LOADING,\r\n    STAFFSTUDENT_LOADING_ERROR,\r\n    STAFFSTUDENT_UPDATE_SUCCESS,\r\n    STAFFSTUDENT_UPDATE_FAIL,\r\n    STAFFSTUDENT_DELETE_SUCCESS,\r\n    STAFFSTUDENT_DELETE_FAIL\r\n} from \"../../types/staff/staffstudent\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from '../common';\r\n\r\nlet TABLE_NAME = 'staffstudents';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFFSTUDENT \r\nexport const getStaffstudents = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFFSTUDENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFFSTUDENT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFFSTUDENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STAFFSTUDENT \r\nexport const getStaffstudent = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFFSTUDENT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFFSTUDENT DELETE\r\nexport const deleteStaffstudent = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFSTUDENT_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFSTUDENT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFFSTUDENT REGISTER\r\nexport const registerStaffstudent = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFSTUDENT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFSTUDENT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFFSTUDENT UPDATE\r\nexport const updateStaffstudent = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFFSTUDENT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFFSTUDENT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STUDENTSUBJECT_GET_ONE,\r\n    STUDENTSUBJECT_GET_MULTIPLE,\r\n    STUDENTSUBJECT_GET_SUMMARY,\r\n    STUDENTSUBJECT_REGISTER_SUCCESS,\r\n    STUDENTSUBJECT_REGISTER_FAIL,\r\n    STUDENTSUBJECT_LOADING,\r\n    STUDENTSUBJECT_LOADING_ERROR,\r\n    STUDENTSUBJECT_UPDATE_SUCCESS,\r\n    STUDENTSUBJECT_UPDATE_FAIL,\r\n    STUDENTSUBJECT_DELETE_SUCCESS,\r\n    STUDENTSUBJECT_DELETE_FAIL\r\n} from \"./../../types/student/studentsubject\";\r\n\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL STUDENTSUBJECT \r\nexport const getStudentsubjects = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTSUBJECT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTSUBJECT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTSUBJECT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET ALL STUDENTSUBJECT \r\nexport const getStudentsubjectSummary = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTSUBJECT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTSUBJECT_GET_SUMMARY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTSUBJECT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STUDENTSUBJECT \r\nexport const getStudentsubject = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENTSUBJECT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STUDENTSUBJECT DELETE\r\nexport const deleteStudentsubject = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSUBJECT_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSUBJECT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENTSUBJECT REGISTER\r\nexport const registerStudentsubject = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSUBJECT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSUBJECT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STUDENTSUBJECT UPDATE\r\nexport const updateStudentsubject = (data) => (dispatch, getState) => {\r\n    //body\r\n    console.log(data)\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTSUBJECT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTSUBJECT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React , { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom'\r\nimport {\r\n    CChartBar,\r\n    CChartLine,\r\n    CChartDoughnut,\r\n    CChartRadar,\r\n    CChartPie,\r\n    CChartPolarArea\r\n  } from '@coreui/react-chartjs'\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CCardHeader,\r\n  CCard,\r\n  CCardBody,\r\n  CWidgetIcon\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst Studentclasss = (props) => {\r\n    const par = useParams()\r\n    const history = useHistory()\r\n   \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw != null || rw != undefined) : []\r\n\r\n  let genderFemale = data.filter(rw =>rw.gender === 'Female');\r\n  let genderMale = data.filter(rw =>rw.gender === 'Male');\r\n\r\n  let departmentTable = {};\r\n  for(var i = 0; i < data.length; i++)\r\n  {\r\n    if(data[i].departmentid in departmentTable)\r\n        departmentTable[data[i].departmentid]++;\r\n    else\r\n        departmentTable[data[i].departmentid] = 1;\r\n  }\r\n  let religionTable = {};\r\n  for(var i = 0; i < data.length; i++)\r\n  {\r\n    if(data[i].religion in religionTable)\r\n        religionTable[data[i].religion]++;\r\n    else\r\n        religionTable[data[i].religion] = 1;\r\n  }\r\n\r\n  let genderTable = {};\r\n  for(var i = 0; i < data.length; i++)\r\n  {\r\n    if(data[i].gender in genderTable)\r\n        genderTable[data[i].gender]++;\r\n    else\r\n        genderTable[data[i].gender] = 1;\r\n  }\r\n\r\n  let sooTable = {};\r\n  for(var i = 0; i < data.length; i++)\r\n  {\r\n    if(data[i].soo in sooTable)\r\n        sooTable[data[i].soo]++;\r\n    else\r\n        sooTable[data[i].soo] = 1;\r\n  }\r\n\r\n  let dobTable = {};\r\n  for(var i = 0; i < data.length; i++)\r\n  {\r\n    let yrs = new Date(data[i].dob).getFullYear();\r\n    let yr = Math.round(new Date().getFullYear() - yrs)\r\n    if(yr in dobTable)\r\n        dobTable[yr]++;\r\n    else\r\n        dobTable[yr] = 1;\r\n  }\r\n  return (\r\n    <>\r\n    <>\r\n        <CRow className='mt-20 py-90'>\r\n                    <CCol xs=\"12\" sm=\"6\" lg=\"4\">\r\n          <CWidgetIcon text=\"Male\" header={genderMale.length} color=\"success\" iconPadding={false}>\r\n            <CIcon width={24} name=\"cil-user\" className=\"mx-5\"/>\r\n          </CWidgetIcon>\r\n        </CCol>\r\n        <CCol xs=\"12\" sm=\"6\" lg=\"4\">\r\n          <CWidgetIcon text=\"Female\" header={genderFemale.length} color=\"danger\" iconPadding={false}>\r\n            <CIcon width={24} name=\"cil-user-female\" className=\"mx-5\"/>\r\n          </CWidgetIcon>\r\n        </CCol>\r\n          \r\n        <CCol xs=\"12\" sm=\"6\" lg=\"4\">\r\n          <CWidgetIcon text=\"Total Studentclass\" header={genderMale.length + genderFemale.length} color=\"info\" iconPadding={false}>\r\n          <i className='fa fa-users fa-2x mx-5'></i>\r\n          </CWidgetIcon>\r\n        </CCol>\r\n          </CRow>\r\n        <CRow>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"6\">\r\n        <CCard >\r\n        <CCardHeader>\r\n          Gender \r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CChartPie\r\n            type=\"pie\"\r\n            datasets={[\r\n              {\r\n                backgroundColor: [\r\n                  '#41B883',\r\n                  '#E46651',\r\n                  '#00D8FF',\r\n                  '#DD1B16'\r\n                ],\r\n                data: Object.values(genderTable)\r\n              }\r\n            ]}\r\n            labels={Object.keys(genderTable)}\r\n            options={{\r\n              tooltips: {\r\n                enabled: true\r\n              }\r\n            }}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCol>\r\n    <CCol xs=\"12\" sm=\"12\" md=\"6\">\r\n        <CCard >\r\n        <CCardHeader>\r\n          Religion\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CChartPie\r\n            type=\"pie\"\r\n            datasets={[\r\n              {\r\n                backgroundColor: [\r\n                  '#41B883',\r\n                  '#E46651',\r\n                  '#00D8FF',\r\n                  '#DD1B16'\r\n                ],\r\n                data: Object.values(religionTable)\r\n              }\r\n            ]}\r\n            labels={Object.keys(religionTable)}\r\n            options={{\r\n              tooltips: {\r\n                enabled: true\r\n              }\r\n            }}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCol>\r\n    </CRow>\r\n        <CRow>\r\n   \r\n    <CCol xs=\"12\" sm=\"12\" md=\"12\">\r\n        <CCard>\r\n        <CCardHeader>\r\n          Age Distrubution\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CChartBar\r\n            type=\"barchart\"\r\n            datasets={[\r\n              {\r\n                backgroundColor: [\r\n                  '#41B883',\r\n                  '#E46651',\r\n                  '#045800',\r\n                  '#4AB883',\r\n                  '#E96651',\r\n                  '#09E0FF',\r\n                  '#DD1116',\r\n                  '#096651',\r\n                  '#19E0FF',\r\n                  '#296651',\r\n                  '#39E0FF',\r\n                  '#41B23',\r\n                  '#E22651',\r\n                  '#045800',\r\n                  '#22B883',\r\n                  '#226651',\r\n                  '#55E0FF',\r\n                  '#551116',\r\n                  '#09aa51',\r\n                  '#19bbFF',\r\n                  '#29CC51',\r\n                  '#39DDFF',\r\n                ],\r\n                data: Object.values(dobTable)\r\n              }\r\n            ]}\r\n            labels={Object.keys(dobTable)}\r\n            options={{\r\n              tooltips: {\r\n                enabled: true\r\n              }\r\n            }}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n      </CCol>\r\n    \r\n    </CRow>\r\n        <CRow>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"12\">\r\n       <CCard>\r\n       <CCardHeader>\r\n         State of Origin\r\n       </CCardHeader>\r\n       <CCardBody>\r\n         <CChartBar\r\n           type=\"barchart\"\r\n           datasets={[\r\n             {\r\n               backgroundColor: [\r\n                 '#41B883',\r\n                 '#E46651',\r\n                 '#045800',\r\n                 '#4AB883',\r\n                 '#E96651',\r\n                 '#09E0FF',\r\n                 '#DD1116',\r\n                 '#096651',\r\n                 '#19E0FF',\r\n                 '#296651',\r\n                 '#39E0FF',\r\n                 '#41B23',\r\n                 '#E22651',\r\n                 '#045800',\r\n                 '#22B883',\r\n                 '#226651',\r\n                 '#55E0FF',\r\n                 '#551116',\r\n                 '#09aa51',\r\n                 '#19bbFF',\r\n                 '#29CC51',\r\n                 '#39DDFF',\r\n               ],\r\n               data: Object.values(sooTable)\r\n             }\r\n           ]}\r\n           labels={Object.keys(sooTable)}\r\n           options={{\r\n             tooltips: {\r\n               enabled: true\r\n             }\r\n           }}\r\n         />\r\n       </CCardBody>\r\n     </CCard>\r\n     </CCol>\r\n   </CRow>\r\n    </>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Studentclasss\r\n  \r\n","import React  from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Studentclasss = (props) => {\r\n   let history = useHistory()\r\n   \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw != null || rw != undefined) : []\r\n  let cont = data.map((row, ind)=>{\r\n    return <tr key={ind}\r\n    onClick={() => history.push(`/studentclasss/${row.id}`)}>\r\n    <td className=\"text-center\">\r\n     {ind + 1}\r\n    </td>\r\n    <td>\r\n        <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n    </td>\r\n    <td>\r\n            {row.g1_name.length > 0 ? <><strong>{row.g1_name} (<i>{row.g1_rel}</i>) <i className=\"text-info\" style={{textTransform:'capitalize'}}>{row.g1_place}</i></strong>{' '}<a href={`mailto:${row.g1_phone1}`}>{row.g1_phone1}</a> <a href={`mailto:${row.g1_phone2}`}>{row.g1_phone2}</a><a href={`mailto:${row.g1_email}`}>{row.g1_email}</a>{' '}{row.g1_address}</>:''}<br/>\r\n            {row.g2_name.length > 0 ? <><strong>{row.g2_name} (<i>{row.g2_rel}</i>) <i className=\"text-info\" style={{textTransform:'capitalize'}}>{row.g1_place}</i></strong>{' '}<a href={`mailto:${row.g2_phone1}`}>{row.g2_phone1}</a> <a href={`mailto:${row.g2_phone2}`}>{row.g2_phone2}</a><a href={`mailto:${row.g2_email}`}>{row.g2_email}</a>{' '}{row.g2_address}</>:''}  \r\n    </td>\r\n  </tr>\r\n})\r\n\r\n  \r\n  return (\r\n   <>\r\n   <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">Studentclass ID</th>\r\n                    <th>Fullname</th>\r\n                    <th className=\"text-center\">Phone</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                    <th>Address</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {cont}\r\n                </tbody>\r\n                </table>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Studentclasss\r\n  \r\n","import React  from 'react'\r\nimport { useHistory} from 'react-router-dom'\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CCardHeader,\r\n    CNav,\r\n    CNavLink,\r\n    CNavItem,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CTabs,\r\n    CButton,\r\n    CWidgetIcon,\r\n    CCardFooter,\r\n    CLink\r\n  } from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst Studentclasss = (props) => {\r\n   \r\n   const lStudent = (id) =>{\r\n    window.open(process.env.PUBLIC_URL+\"#/students/\"+id)\r\n  }\r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw != null || rw != undefined) : []\r\n  let pht = data.map((row, ind)=>{\r\n    return <CCard onClick={()=>lStudent(row.id)} key={ind} className='mx-2 my-2' style={{width:'100px', height:'auto'}}>\r\n        <CCardHeader className='m-0 text-center'>\r\n        <b style={{textTransform:'capitalize'}}>{row.admission_no}</b>  \r\n        </CCardHeader>\r\n        <CCardBody className='m-0 p-0 ' >\r\n        <img \r\n            src={process.env.REACT_APP_SERVER_URL+ row.photo} \r\n            className=\"m-0 p-0\" \r\n            width='100px'\r\n            height='100px'\r\n            alt={row.admission_no} \r\n            onError={(e)=>{e.target.onerror=null; e.target.src= process.env.PUBLIC_URL + '/avatars/1.png'} }\r\n        />\r\n        </CCardBody>\r\n        <div className='m-0 text-center' style={{zIndex:'1001', position:'relative', top:'0px', backgroundColor:'rgba(0,0,0,0)'}}>\r\n          <span style={{textTransform:'capitalize',  fontSize:'10px', color:'black', fontWeight:'bolder'}}> {row.surname}{' '}{row.firstname}{' '}{row.middlename}</span>\r\n        </div>\r\n    </CCard>\r\n})\r\n\r\n  \r\n  return (\r\n   <>\r\n   <CRow className='d-flex flex-wrap justify-content-center'>\r\n        {pht}\r\n    </CRow>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Studentclasss\r\n  \r\n","import React  from 'react'\r\nimport moment from 'moment'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst Studentclasss = (props) => {\r\n   \r\n   const lStudent = (id) =>{\r\n     window.open(process.env.PUBLIC_URL+\"#/students/\"+id)\r\n   }\r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw != null || rw != undefined) : []\r\n  \r\nlet tabl = data.map((row, ind)=>{\r\n    return <tr key={ind} onClick={()=>lStudent(row.id)}>\r\n    <td className=\"text-center\">\r\n      <div className=\"c-avatar\">\r\n        <img \r\n        src={process.env.REACT_APP_SERVER_URL+ row.photo} \r\n        className=\"c-avatar-img\" \r\n        alt={row.admission_no} \r\n        onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/avatars/1.png'} }\r\n        />\r\n        <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n      </div>\r\n    </td>\r\n    <td>\r\n<div><strong>{`${row.surname} ${row.firstname} ${row.middlename}`}</strong></div>\r\n            <div className=\"small text-muted\">\r\n            <span>{row.abbrv}{row.admission_no}</span>\r\n        </div>\r\n    </td>\r\n    \r\n    <td>\r\n        <div className=\"small text-muted\">\r\n            <span>Date of Birth</span>: <strong>{moment(row.dob).format('Do MMM, YYYY')}</strong>\r\n        </div>\r\n        <div className=\"small text-muted\">\r\n            <span>Age (Years)</span>: <strong>{moment().diff(row.dob, 'years')}</strong> \r\n        </div>\r\n    </td>\r\n    <td>\r\n      <div className=\"small text-muted \" style={{textTransform:'capitalize'}}>{row.soo}</div>\r\n      <strong style={{textTransform:'capitalize'}}>{row.lga}</strong>\r\n    </td>\r\n    <td>\r\n      <div className=\"text-muted \" style={{textTransform:'capitalize'}}>{row.gender}</div>\r\n    </td>\r\n  </tr>\r\n});\r\n\r\n  return (\r\n   <>\r\n   <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\"><CIcon name=\"cil-people\" /></th>\r\n                    <th>Studentclass</th>\r\n                    <th className=\"text-center\">Dates</th>\r\n                    <th>Origin</th>\r\n                    <th>Gender</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                </tbody>\r\n                </table>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Studentclasss\r\n  \r\n","import React , { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom'\r\nimport { getStudentfees, registerStudentfee, updateStudentfee,  getStudentfeesSingle, deleteStudentfee, setStudentfee } from './../../actions/student/studentfee';\r\nimport { updateStudentclass } from './../../actions/student/studentclass';\r\nimport { getAccounts } from './../../actions/setting/account';\r\nimport { getStaffAll } from './../../actions/staff/staff';\r\nimport { getFees } from './../../actions/setting/fee';\r\nimport moment from 'moment';\r\nimport { \r\n  CDropdownItem,\r\n  CDropdown,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CDropdownDivider,\r\n  CForm,\r\n  CFormGroup,\r\n  CFormText,\r\n  CInput,\r\n  CInputCheckbox,\r\n  CLabel,\r\n  CButton, \r\n  CSelect,\r\n  CButtonClose,\r\n  CButtonGroup\r\n} from '@coreui/react';\r\nimport { nairaformat } from '../../actions/common';\r\nimport CIcon from '@coreui/icons-react';\r\nimport Swal from'sweetalert'\r\n\r\nconst Studentclasss = (props) => {\r\n   let clasz = props.clasz;\r\n   let terms = props.termid;\r\n   let sessions = props.sessionid;\r\n   let data1 = props.data1;\r\n  \r\n   const [id, setId] = useState(null)\r\n   const [datepaid, setDatepaid] = useState(new Date())\r\n   const [amount, setAmount] = useState(0)\r\n   const [accountid, setAccountid] = useState(null)\r\n   const [feeid, setFeeid] = useState(null)\r\n   const [staffid, setstaffid] = useState(null)\r\n   const [teller, setTeller] = useState(null)\r\n   const [data, setdata] = useState()\r\n\r\n   useEffect(() => {\r\n   \r\n    if(props.users.activeschool !== undefined && props.users.activeschool.hasOwnProperty('id') && parseInt(props.users.activeschool.id) > 0)\r\n    {\r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'sessionid':sessions,\r\n          'termid':terms,\r\n          'ids':data1\r\n      }),\r\n      cat:'studentfeess',\r\n      table:'studentfeess',\r\n      narration:'get student fees'\r\n     }\r\n     props.getStudentfees(params)\r\n\r\n    }\r\n    \r\n  }, [props.users.activeschool, clasz, terms, sessions, data1 ])\r\n\r\n   useEffect(() => {\r\n   \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'is_active':0,\r\n          'is_delete':0\r\n      }),\r\n      cat:'selected',\r\n      table:'allstaffs',\r\n      narration:'get all staff'\r\n     }\r\n     props.getStaffAll(params) \r\n  }, [])\r\n\r\n   useEffect(() => {\r\n   \r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          //'schoolid':props.user.activeschool.id\r\n          is_active:0\r\n      }),\r\n      cat:'selected',\r\n      table:'accounts',\r\n      narration:'get accounts'\r\n     }\r\n     props.getAccounts(params)\r\n\r\n     let params1 = {\r\n        data:JSON.stringify(\r\n        {\r\n            //'schoolid':props.user.activeschool.id\r\n            is_active:0\r\n        }),\r\n        cat:'selected',\r\n        table:'fees',\r\n        narration:'get feess'\r\n       }\r\n       props.getFees(params1)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n  \r\n   useEffect(() => {\r\n      let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw != null || rw != undefined) : []\r\n      setdata(data)\r\n   }, [props.data])\r\n  const handleSubmitStudent = (id) =>{\r\n    let fd = new FormData();\r\n    fd.append('parentid', staffid);\r\n    fd.append('id', id);\r\n    fd.append('cat', 'updatestudentclasss');\r\n    fd.append('table', 'accessstudentclass');\r\n    fd.append('sessionid', sessions);\r\n    props.updateStudentclass(fd)\r\n\r\n}\r\n   const handleSubmitFee = (studentid, termid, sessionid) =>{\r\n\r\n        let fd = new FormData();\r\n        \r\n        fd.append('studentid', studentid);\r\n        fd.append('termid', termid);\r\n        fd.append('claszid', props.claszparentid);\r\n        fd.append('sessionid', sessionid);\r\n        fd.append('staffid', props.user.mid);\r\n        fd.append('cat', 'insertsetfee');\r\n        fd.append('table', 'studentfeez');\r\n\r\n        props.setStudentfee(fd);\r\n\r\n   }\r\n   const handleSubmitFeeOnly = (studentid, termid, sessionid) =>{\r\n\r\n    let fd = new FormData();\r\n    \r\n    fd.append('studentid', studentid);\r\n    fd.append('amount', amount);\r\n    fd.append('feeid', feeid);\r\n    fd.append('termid', termid);\r\n    fd.append('claszid', props.claszparentid);\r\n    fd.append('sessionid', sessionid);\r\n    fd.append('staffid', props.user.mid);\r\n    fd.append('cat', 'insertsetfees');\r\n    fd.append('table', 'studentfeez');\r\n\r\n    props.setStudentfee(fd);\r\n\r\n   }\r\n   const handleSubmit = (studentid, termid, sessionid) =>{\r\n\r\n    let fd = new FormData();\r\n    fd.append('studentid', studentid);\r\n    fd.append('amount', amount);\r\n    fd.append('termid', termid);\r\n    fd.append('teller', teller);\r\n    fd.append('datepaid', moment(datepaid).format(\"YYYY-MM-DD\"));\r\n    fd.append('sessionid', sessionid);\r\n    fd.append('schoolid', props.user.activeschool.id)\r\n    fd.append('staffid', props.user.mid);\r\n    fd.append('accountid', accountid);\r\n    fd.append('feeid', feeid);\r\n    fd.append('table', 'studentfees');\r\n\r\n    if(id && parseInt(id) > 0)\r\n    {\r\n        fd.append('id', id);\r\n        fd.append('cat', 'updatefee');\r\n        fd.append('narration', 'Fees Payment Update');\r\n        props.updateStudentfee(fd)\r\n    }else\r\n    {\r\n        fd.append('cat', 'insertfee');\r\n        fd.append('narration', 'Fees Payment');\r\n        fd.append('staffid', props.user.mid);\r\n        props.registerStudentfee(fd)  \r\n    }\r\n\r\n\r\n   }\r\n  const lStudent = (id) =>{\r\n    window.open(process.env.PUBLIC_URL+\"#/students/\"+id)\r\n  }\r\n\r\nconst onDelete = (id) =>{\r\n  Swal(\"Are you sure you want to delete you will not be able to restore the data.\")\r\n  .then((value) => {\r\n    if(value == true && parseInt(id) > 0){\r\n      let fd = new FormData();\r\n      fd.append('id', id)\r\n      fd.append('sessionid', sessions)\r\n      fd.append('cat', 'deletefee')\r\n      fd.append('table', 'fees')\r\n      fd.append('narration', 'delete students fees slready recorded')\r\n      props.deleteStudentfee(fd, id);\r\n    }else{\r\n      Swal(`Not deleted`);\r\n    }\r\n  })\r\n\r\n}\r\n\r\nconst setDiff=(subzs, addzs)=>\r\n{\r\n  let subz = subzs.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0)\r\n  let addz = addzs.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0)\r\n  let diff = subz - addz;\r\n  if(diff > 0)\r\n  {\r\n    return <><span className='text-danger'><strong>{nairaformat(diff)}</strong></span></>\r\n  }else{\r\n    return <span className='text-info'><strong>{nairaformat(diff * -1)}</strong></span>\r\n  }\r\n\r\n}\r\n//console.log(new Date(new Date().setHours(new Date().getHours() + 1)))\r\nlet fearray = props.fees && props.fees!== undefined && Array.isArray( props.fees)? props.fees.filter(rw=>rw !== null && rw !== undefined).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.id}>{rw.name}</option>\r\n}): ''\r\n\r\nlet staffarray = props.staffs && props.staffs!== undefined && Array.isArray( props.staffs)? props.staffs.filter(rw=>rw !== null && rw !== undefined).map((rw, ind) =>{\r\n  return <option key={ind} value={rw.id}>{rw.surname}{\" \"}{rw.firstname !== undefined && rw.firstname.length > 0  ? rw.firstname.substring(0, 1):''}{\". \"}({rw.schoolabbrv})</option>\r\n}): ''\r\nlet acarray = props.accounts && props.accounts !== undefined && Array.isArray( props.accounts)  ? props.accounts.filter(rw=>rw !== null && rw !== undefined).map((rw, ind) =>{\r\nreturn <option key={ind} value={rw.id}>{rw.name}</option>\r\n}): ''\r\n  let std = props.studentfees && Array.isArray(props.studentfees) ? props.studentfees.filter(rw =>rw != null || rw != undefined) : []\r\n  \r\n  let acct = Array.isArray(data) && data.length > 0 ? data.map((row, ind)=>{\r\n    let subs= [];\r\n    let adds = [];\r\n    return <tr key={ind}>\r\n    <td className=\"text-center\">\r\n     {ind + 1}\r\n     <div className=\"c-avatar\">\r\n        <img \r\n        src={process.env.REACT_APP_SERVER_URL+ row.photo} \r\n        className=\"c-avatar-img\" \r\n        alt={row.admission_no} \r\n        onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/avatars/1.png'} }\r\n        />\r\n        <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n      </div>\r\n    </td>\r\n    <td>\r\n    <div><strong>{`${row.surname} ${row.firstname} ${row.middlename}`}</strong></div>\r\n            <div className=\"small text-muted\">\r\n            <span>{row.schoolabbrv}{row.admission_no}</span>\r\n        </div>\r\n    </td>\r\n    <td>\r\n      { \r\n        std.filter(rw=>parseInt(rw.studentid) === parseInt(row.id) && parseInt(rw.grp) === 1).map((p, i)=>{\r\n        subs.push(parseFloat(p.amount))\r\n        return <div key={i} className=\"small text-muted\">\r\n                  {props.classteacher ?  new Date() < new Date(new Date(p.date_created).setHours(new Date(p.date_created).getHours() + 4000)) ? <span  style={{cursor:'pointer'}}><CIcon name=\"cil-trash\" onClick={()=>onDelete(p.id)} className=\"text-danger\"/>{' '}</span>:'':''}\r\n                  <span >{p.feename}</span>: <strong >{nairaformat(p.amount)}</strong>\r\n              </div>\r\n      })\r\n      }\r\n    </td>\r\n    <td>\r\n    {parseInt(row.parentid) === 0 ? \"\": <b><i>{'Recover from source'}<br/>{row.parentname}</i></b>}\r\n    { \r\n      std.filter(rw=>parseInt(rw.studentid) === parseInt(row.id) && parseInt(rw.grp) === 0).map((p, i)=>{\r\n        adds.push(parseFloat(p.amount))\r\n        return <div key={i} className=\"small text-muted\">\r\n         {props.classteacher ? new Date() < new Date(new Date(p.date_created).setHours(new Date(p.date_created).getHours() + 4000)) && parseInt(row.parentid) === 0 ?  <span style={{cursor:'pointer'}}><CIcon name=\"cil-trash\" onClick={()=>onDelete(p.id)} className=\"text-danger\"/>{' '}</span>:'':''}\r\n                  <span>{moment().format(p.datepaid, 'DD MM YYYY')}</span> : <i>{p.teller}</i>: <strong>{nairaformat(p.amount)}</strong> \r\n              </div>\r\n      })\r\n    }\r\n    </td>\r\n    <td>\r\n      {setDiff(subs, adds)}\r\n    </td>\r\n    {props.classteacher ? \r\n    <td className=\"text-center\">\r\n          <CButtonGroup>          \r\n          <CDropdown className=\"m-0\">\r\n              <CDropdownToggle color=\"secondary\" size='sm' block>\r\n                Set Fees\r\n              </CDropdownToggle>\r\n              <CDropdownMenu className='bg-info'>\r\n                <CForm className=\"px-4 py-3\" >\r\n                 \r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"amount\">Amount</CLabel>\r\n                    <CInput \r\n                      className=\"form-control\" \r\n                      style={{color:'blue', fontWeight:'bolder'}}\r\n                      id=\"amount\" \r\n                      type=\"text\"\r\n                      value={amount}\r\n                      autoComplete=\"amount\"\r\n                      onChange={(e)=>setAmount(e.target.value)}\r\n                      />\r\n                  </CFormGroup>\r\n                  \r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"feeid\">Select Fee</CLabel>\r\n                    <CSelect \r\n                      className=\"form-control\" \r\n                      id=\"feeid\" \r\n                      type=\"date\"\r\n                      value={feeid}\r\n                      autoComplete=\"feeid\"\r\n                      onChange={(e)=>setFeeid(e.target.value)}\r\n                      >\r\n                        <option></option>\r\n                        {fearray}\r\n                      </CSelect>\r\n                  </CFormGroup>\r\n                                    \r\n                  <CFormGroup className=\"mt-2\">\r\n                    <CButton \r\n                    className='mb-2'\r\n                    size='sm'\r\n                    block\r\n                    color=\"primary\" \r\n                    type=\"button\"\r\n                    onClick={()=>handleSubmitFeeOnly(row.id, props.termid, props.sessionid)}\r\n                    >Set Fee</CButton>\r\n                    <CButton \r\n                    block\r\n                      size='sm' \r\n                      color=\"secondary\" \r\n                      onClick={()=>handleSubmitFee(row.id, props.termid, props.sessionid)}\r\n                      >Use Default Fee</CButton>\r\n                  </CFormGroup>\r\n                </CForm>\r\n              </CDropdownMenu>\r\n          </CDropdown>\r\n          {parseInt(row.parentid) === 0 ?\r\n          <CDropdown className=\"m-0\">\r\n              <CDropdownToggle color=\"info\" size='sm'>\r\n                Pay Fees\r\n              </CDropdownToggle>\r\n              <CDropdownMenu className='bg-info'>\r\n                <CForm className=\"px-4 py-3\" >\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"datepaid\">Date Paid</CLabel>\r\n                    <CInput \r\n                      className=\"form-control\" \r\n                      id=\"datepaid\" \r\n                      type=\"date\"\r\n                      value={datepaid}\r\n                      autoComplete=\"email\"\r\n                      onChange={(e)=>setDatepaid(e.target.value)}\r\n                      />\r\n                  </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"amount\">Amount</CLabel>\r\n                    <CInput \r\n                      className=\"form-control\" \r\n                      style={{color:'blue', fontWeight:'bolder'}}\r\n                      id=\"amount\" \r\n                      type=\"text\"\r\n                      value={amount}\r\n                      autoComplete=\"amount\"\r\n                      onChange={(e)=>setAmount(e.target.value)}\r\n                      />\r\n                  </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"accountid\">Account</CLabel>\r\n                    <CSelect \r\n                      className=\"form-control\" \r\n                      id=\"accountid\" \r\n                      type=\"date\"\r\n                      value={accountid}\r\n                      autoComplete=\"accountid\"\r\n                      onChange={(e)=>setAccountid(e.target.value)}\r\n                      >\r\n                        <option></option>\r\n                        {acarray}\r\n                      </CSelect>\r\n                  </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"teller\">Teller</CLabel>\r\n                    <CInput \r\n                      className=\"form-control\" \r\n                      id=\"teller\" \r\n                      type=\"text\"\r\n                      value={teller}\r\n                      autoComplete=\"teller\"\r\n                      onChange={(e)=>setTeller(e.target.value)}\r\n                      />\r\n                      </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"feeid\">fee</CLabel>\r\n                    <CSelect \r\n                      className=\"form-control\" \r\n                      id=\"feeid\" \r\n                      type=\"date\"\r\n                      value={feeid}\r\n                      autoComplete=\"feeid\"\r\n                      onChange={(e)=>setFeeid(e.target.value)}\r\n                      >\r\n                        <option></option>\r\n                        {fearray}\r\n                      </CSelect>\r\n                  </CFormGroup>\r\n                  \r\n                  \r\n                  <CFormGroup className=\"mt-2\">\r\n                    <CButton \r\n                    color=\"primary\" \r\n                    type=\"button\"\r\n                    onClick={()=>handleSubmit(row.id, props.termid, props.sessionid)}\r\n                    >Pay</CButton>\r\n                  </CFormGroup>\r\n                </CForm>\r\n              </CDropdownMenu>\r\n          </CDropdown>:''} </CButtonGroup>\r\n          \r\n          <CDropdown className=\"m-0\">\r\n              <CDropdownToggle color=\"dark\" size='sm' block>\r\n                Deduct from Source\r\n              </CDropdownToggle>\r\n              <CDropdownMenu className='bg-dark'>\r\n                <CForm className=\"px-4 py-3\" >\r\n                 \r\n                  \r\n                  \r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"staffid\">Select Staff Name & School</CLabel>\r\n                    <CSelect \r\n                      className=\"form-control\" \r\n                      id=\"staffid\" \r\n                      type=\"date\"\r\n                      value={staffid}\r\n                      autoComplete=\"staffid\"\r\n                      onChange={(e)=>setstaffid(e.target.value)}\r\n                      >\r\n                        <option></option>\r\n                        {staffarray}\r\n                      </CSelect>\r\n                  </CFormGroup>\r\n                  \r\n              \r\n                  <CFormGroup className=\"mt-2\">\r\n                    <CButton \r\n                    className='mb-2'\r\n                    size='sm'\r\n                    block\r\n                    color=\"primary\" \r\n                    type=\"button\"\r\n                    onClick={()=>handleSubmitStudent(row.id)}\r\n                    >Deduct From Source</CButton>\r\n                    \r\n                  </CFormGroup>\r\n                </CForm>\r\n              </CDropdownMenu>\r\n          </CDropdown>\r\n    </td>\r\n    :''}\r\n  </tr>\r\n})\r\n              :'';\r\n  return (\r\n   <>\r\n   \r\n   <table className=\"table  table-outline mb-0 \">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">Student ID</th>\r\n                    <th>Studentclass</th>\r\n                    <th className=\"text-center\">FEES</th>\r\n                    <th className=\"text-center\">PAYMENTS</th>\r\n                    <th className=\"text-center\">BALANCE</th>\r\n                    {props.classteacher ? <th className=\"text-center\">Pay</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {acct}\r\n                </tbody>\r\n                </table>\r\n   </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n  user : state.userReducer,\r\n  fees : state.feeReducer.fees,\r\n  accounts : state.accountReducer.accounts,\r\n  users : state.userReducer,\r\n  staffs : state.staffReducer.staffall,\r\n  studentfees : state.studentfeeReducer.studentfees,\r\n  studentfee : state.studentfeeReducer.studentsinglefees\r\n})\r\nexport default connect(mapStateToProps, {\r\n  registerStudentfee,\r\n  updateStudentfee,\r\n  getAccounts,\r\n  getFees,\r\n  getStudentfeesSingle,\r\n  setStudentfee,\r\n  getStudentfees,\r\n  deleteStudentfee,\r\n  getStaffAll,\r\n  updateStudentclass\r\n  \r\n})(Studentclasss)\r\n","import React, { useEffect }  from 'react'\r\nimport SearchDashboard3 from '../SearchDashboard3'\r\nimport { \r\n    CCol, \r\n    CContainer, \r\n    CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Header = (props) => {\r\n \r\n let {studentdata} = props || '';\r\n\r\n return(\r\n    <CContainer>\r\n        \r\n        <CRow>\r\n        <CCol sm={6}>\r\n            <SearchDashboard3 \r\n                studentx={props.placeStudent}  \r\n            />\r\n            </CCol>\r\n            <CCol sm={6}>\r\n            { studentdata && Object.keys(studentdata).length > 0 ?\r\n            <>\r\n            <CRow>\r\n            <img\r\n            src={process.env.REACT_APP_SERVER_URL + studentdata.photo} \r\n            style={{height:'30px', width:'30px'}}\r\n            height=\"30px\"\r\n            alt=\"profile-image\" \r\n            class=\"profile\"\r\n            onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/icons/profile_1.png'} }\r\n            />\r\n            <CCol>\r\n            <strong>{studentdata.name}</strong><br/>\r\n            <small>{studentdata.admission_no}</small>\r\n            </CCol>\r\n            <CCol xs={3}>\r\n            <button className='btn btn-sm btn-success' onClick={props.loadStudent}><i className=\"fa fa-plus\"></i></button>\r\n            <button className='btn btn-sm btn-danger' onClick={()=>props.setStudentdata({})}><i className=\"fa fa-trash\"></i></button></CCol>\r\n            </CRow>\r\n            </>\r\n            :\"\"}\r\n            </CCol>\r\n        </CRow>\r\n        </CContainer>\r\n        )\r\n\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport { connect } from 'react-redux'\r\nimport Swal from 'sweetalert'\r\nimport {\r\n  CRow,\r\n  CDropdown,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CInputCheckbox,\r\n  CLabel,\r\n  CButton, \r\n  CSelect,\r\n  CButtonClose,\r\n  CInputRadio,\r\n  CButtonGroup,\r\n  CTooltip,\r\n  CCol,\r\n  CTextarea,\r\n  CBadge,\r\n  CSwitch,\r\n  CCollapse\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { \r\n    getStudentattendances, \r\n    getStudentattendancedailys,\r\n    getStudentattendance, \r\n    registerStudentattendance, \r\n    registerStudentattendancedaily,\r\n    updateStudentattendance, \r\n    updateStudentattendancedaily, \r\n    deleteStudentattendance,\r\n    deleteStudentattendancedaily\r\n  } from './../../actions/student/studentattendance';\r\nimport {getStaffsubjects} from './../../actions/staff/staffsubject';\r\n  \r\nimport { leavestd } from '../../actions/common'\r\nlet leaves = leavestd;\r\nconst Students = (props) => {\r\n   const history = useHistory()\r\n   \r\n   \r\n   const [dates, setDates] = useState(new Date())\r\n   const [reason, setreason] = useState('')\r\n   const [leaveid, setleaveid] = useState(0)\r\n   const [search, setsearch] = useState('')\r\n   const [selector, setselector] = useState({})\r\n   const [actions, setactions] = useState(0)\r\n   const [itemzs, setitemzs] = useState(0)\r\n\r\n   useEffect(() => {\r\n    //date changes get\r\n    let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.user.activeschool.id,\r\n          'grp':2,\r\n          'dates':moment(dates).format('YYYY-MM-DD')\r\n\r\n      }),\r\n      cat:'selected',\r\n      table:'attendances',\r\n      narration:'get all students'\r\n     }\r\n    props.getStudentattendances(params)\r\n\r\n    let params1 = {\r\n      data:JSON.stringify(\r\n      {\r\n          'clients':props.clasz,\r\n          'schoolid':props.user.activeschool.id,\r\n          'grp':4,\r\n          'dates':moment(dates).format('YYYY-MM-DD')\r\n      }),\r\n      cat:'selected',\r\n      table:'attendances',\r\n      narration:'get all attendance'\r\n  }\r\n    props.getStudentattendancedailys(params1)\r\n    \r\n   \r\n  }, [dates, props.clasz, props.session, props.term])\r\n   \r\n   useEffect(() => {\r\n\r\n    if(props.user.activeterm !== undefined)\r\n    {\r\n      let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'termid':props.user.activeterm.termid,\r\n            'sessionid':props.user.activeterm.sessionid,\r\n            'clientid':props.user.user.id,\r\n            'clasz':props.clasz,\r\n            'grp':2\r\n        }),\r\n        cat:'staffclass',\r\n        table:'accessstaffsubjectnum1',\r\n        narration:'get staffsubjects'\r\n  \r\n      }\r\n      props.getStaffsubjects(params)\r\n    } \r\n    \r\n  }, [props.user.activeterm, props.clasz])\r\n\r\n    let getleave=(id)=>{\r\n      let d = leaves.filter(rw=>parseInt(rw.id) === parseInt(id));\r\n      return d[0]\r\n    }\r\n    const handleSubmit = (id)=>{\r\n        let fd = new FormData();\r\n        fd.append('grp', 2);\r\n        fd.append('dates', moment(dates).format('YYYY-MM-DD'));\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('clients', id);\r\n        fd.append('leaveid', leaveid);\r\n        fd.append('reason', reason);\r\n        fd.append('cat', 'insert');\r\n        fd.append('table', 'attendances');\r\n\r\n        props.registerStudentattendance(fd);\r\n\r\n    }\r\n    const changeSelect = (e) =>{\r\n     let sel = {};\r\n     let d = props.data.filter(rw=> rw !== null && rw !== undefined);\r\n     d.forEach(element => {\r\n         sel[element.id] = e\r\n     });\r\n     setselector(sel)\r\n    }\r\n    const loadSelect = (e, d) =>{\r\n     let sel = {...selector};\r\n     sel[d] = e\r\n     setselector(sel)\r\n    }\r\n    const confirm_student_available =(data, id)=>{\r\n        \r\n        if(Array.isArray(data) && data.length){\r\n        let d = data.filter(rw=>parseInt(rw.clients) === parseInt(id));\r\n        let chk = Array.isArray(d) && d.length > 0 ? d[0].leaveid : 0;\r\n        return parseInt(chk);\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n    let acarray = leaves.map((p, i)=>{\r\n    return <option value={p.id}>{p.name}</option>\r\n    })\r\n    const changeDates = (e) =>{\r\n        setDates(e)\r\n        props.setDates(e)\r\n    }\r\n    const saveAttendance=()=>{\r\n        let fd = new FormData();\r\n        fd.append('grp', 4);\r\n        fd.append('dates', moment(dates).format('YYYY-MM-DD'));\r\n        fd.append('schoolid', props.user.activeschool.id);\r\n        fd.append('clients', props.clasz);\r\n        fd.append('reason', props.data1);\r\n        fd.append('leaveid', 0);\r\n        fd.append('cat', 'insert');\r\n        fd.append('table', 'attendances');\r\n\r\n        props.registerStudentattendancedaily(fd);\r\n\r\n    }\r\n    const submitChoice =()=>{\r\n      if(parseInt(actions) === 1 && parseInt(actions) > 0 )\r\n      {\r\n        props.placeStudentSubject(actions)\r\n      }\r\n      if(parseInt(actions) === 2 && parseInt(actions) > 0 )\r\n      {\r\n        props.placeStudentSubject(actions)\r\n      }\r\n    }\r\n    let redirectStudent = (id, sessionid) =>{\r\n        window.open(process.env.PUBLIC_URL+\"#/studentcl/\"+id+\"/\"+sessionid)\r\n    }\r\n\r\n    let itemoptions = '';\r\n    if(parseInt(actions) === 1)\r\n    {\r\n      // get staff subjects\r\n      itemoptions = Array.isArray(props.staffsubject.staffsubjects) ? props.staffsubject.staffsubjects.filter(rw=>rw !== null & rw !== undefined).map((prp, ind)=>{\r\n          return <option key={ind} value={prp.itemid1}>{`${prp.itemname1} ${prp.itemname} `}</option>\r\n      }):'';\r\n    }else if(parseInt(actions) === 2)\r\n    {\r\n      //setitemzs(0)\r\n      //get all subjects\r\n      let dt = props.dropdowns && Array.isArray(props.dropdowns) && props.dropdowns.length > 0 ? props.dropdowns : [[], [], [], []];\r\n      let dt0 ='';\r\n      let dt1 ='';\r\n      let dt2 ='';\r\n      let dt3 ='';\r\n      if(dt.length > 0)\r\n      {\r\n         dt0 = dt[0].map((prop, ind)=>{\r\n        return <option key={ind}  value={prop.termid}>{prop.name}</option>;\r\n        });\r\n        itemoptions = dt[1].map((prop, ind)=>{\r\n        return <option key={ind}  value={prop.id}>{prop.name}</option>;\r\n        });\r\n        dt2 = dt[2].map((prop, ind)=>{\r\n        return <option key={ind}  value={prop.id}>{prop.name}</option>;\r\n        });\r\n        dt3 = dt[0].map((prop, ind)=>{\r\n        return <option key={ind} value={JSON.stringify(prop)}>{prop.name}</option>;\r\n        });\r\n      }\r\n\r\n    }\r\n     \r\n      let registered_attendance_date = Array.isArray(props.studentattendance.studentattendancedailys)  && props.studentattendance.studentattendancedailys !== undefined? props.studentattendance.studentattendancedailys : [];\r\n      let check_date = Array.isArray(registered_attendance_date) ? registered_attendance_date.filter(rw=>rw !== undefined && rw !== null && rw.dates === moment(dates).format(\"YYYY-MM-DD\")) :[];\r\n      let confirm_date = Array.isArray(check_date) && check_date.length > 0 ? true : false;\r\n\r\n      let registered_attendance_issue = Array.isArray(props.studentattendance.studentattendances)  && props.studentattendance.studentattendances !== undefined? props.studentattendance.studentattendances : [];\r\n      let check_issue = Array.isArray(registered_attendance_issue) ? registered_attendance_issue.filter(rw=>rw !== undefined && rw !== null && rw.dates === moment(dates).format(\"YYYY-MM-DD\")) :[];\r\n     \r\n      //CONFIRM IF CLASS TEACHER\r\n      let classteacher = props.classteacher;\r\n\r\n        let tabl = props.data.filter(rw=> rw !== null && rw !== undefined).map((row, ind)=>{\r\n        let dup = row.dupli !== undefined && row.dupli !== null && row.dupli.length > 0 ? row.dupli.split(\",\"): null;\r\n        let numdup = dup !== null ? dup.length : 1;\r\n        return <tr key={ind}>\r\n        <td className=\"text-center\">\r\n          <div className=\"c-avatar\">\r\n            <img \r\n              src={process.env.REACT_APP_SERVER_URL + row.photo}\r\n              style={{width:'40px', height:'40px'}}\r\n              height=\"50px\" \r\n              width=\"50px\" \r\n              className=\"c-avatar-img\" \r\n              alt={row.admission_no} \r\n              onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL +'/avatars/1.png' }}\r\n            />\r\n            <span className={`c-avatar-status ${row.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n          </div>\r\n        </td>\r\n        \r\n        <td>\r\n        <div>{`${row.surname} ${row.firstname} ${row.middlename}`}</div>\r\n                <div className=\"small text-muted\">\r\n                <span>{`${row.abbrv}/${row.admission_no}`}</span>\r\n            </div>\r\n        </td>\r\n        <td className=\"text-center\">\r\n        { numdup > 1 ? <><strong><small style={{color:'red'}}> Error Duplicated {row.dupli}</small></strong><br/></>: \"\"}\r\n        { confirm_student_available(check_issue, row.id) > 0 ? <>\r\n        <CBadge className=\"mr-0\" color={getleave(confirm_student_available(check_issue, row.id)).colors}>{getleave(confirm_student_available(check_issue, row.id)).name}</CBadge>\r\n        <CBadge className=\"mr-1\" color=\"dark\">{moment(dates).format(\"Do MMMM, YYYY\")}</CBadge></>\r\n        :<>\r\n        <CBadge className=\"mr-0\" color={confirm_date ? \"success\" :\"secondary\"}>{confirm_date ? \"Present\" :\"Present not saved\"}</CBadge>\r\n        <CBadge className=\"mr-1\" color=\"dark\">{moment(dates).format(\"Do MMMM, YYYY\")}</CBadge></>\r\n        }\r\n        </td>\r\n        <td className='text-right'>\r\n        <CButtonGroup>\r\n        <CTooltip content=\"Select\">\r\n          <CSwitch \r\n            className={'my-auto mx-3'} \r\n            variant={'3d'} \r\n            color={'primary'}  \r\n            checked={Object.keys(selector).includes(row.id) && selector[row.id] === true ? true : false}\r\n            onChange={(e)=>loadSelect(e.target.checked, row.id)}/>\r\n        </CTooltip>\r\n        <CTooltip content=\"Student profile\">\r\n        <CButton \r\n              size='sm' \r\n              color=\"dark\" \r\n              onClick={()=>redirectStudent(row.id, props.session)}\r\n              > <CIcon name='cil-user'  /> <span className=\"d-xs-none\">Profile</span></CButton></CTooltip>\r\n           <CButton \r\n              size='sm' \r\n              color=\"secondary\" \r\n              > <CIcon name='cil-envelope-open'  />  <span className=\"d-xs-none\">Message</span></CButton>\r\n          {classteacher ?<>\r\n          <CDropdown className=\"m-0\">\r\n              <CDropdownToggle \r\n              color=\"info\" \r\n              size='sm' \r\n              disabled={ props.activeterm ? false:true }>\r\n              <CIcon name='cil-user-follow'  />  <span className=\"d-xs-none\">Attendance</span> \r\n              </CDropdownToggle>\r\n              <CDropdownMenu className='bg-info'>\r\n                <CForm className=\"px-4 py-3\" >\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"leaveid\"></CLabel>\r\n                    <CSelect \r\n                      className=\"form-control\" \r\n                      id=\"leaveid\" \r\n                      type=\"date\"\r\n                      value={leaveid}\r\n                      autoComplete=\"leaveid\"\r\n                      onChange={(e)=>setleaveid(e.target.value)}\r\n                      >\r\n                        {acarray}\r\n                      </CSelect>\r\n                  </CFormGroup>\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"reason\">Reason</CLabel>\r\n                    <CTextarea\r\n                      className=\"form-control\" \r\n                      style={{color:'blue', fontWeight:'bolder'}}\r\n                      id=\"reason\" \r\n                      type=\"text\"\r\n                      value={reason}\r\n                      autoComplete=\"reason\"\r\n                      onChange={(e)=>setreason(e.target.value)}\r\n                      \r\n                      ></CTextarea>\r\n                  </CFormGroup>\r\n                  \r\n                  <CFormGroup className=\"mt-2\">\r\n                    <CButton \r\n                    color=\"primary\" \r\n                    type=\"button\"\r\n                    block\r\n                    onClick={()=>handleSubmit(row.id)}\r\n                    >Log</CButton>\r\n                  </CFormGroup>\r\n                </CForm>\r\n              </CDropdownMenu>\r\n            </CDropdown>\r\n            <CTooltip content=\"Remove Student\">\r\n            <button  \r\n              disabled={ props.activeterm ? false:true }\r\n          \r\n              onClick={()=>props.onRemove(row.cid)} \r\n              className='btn btn-sm btn-round btn-danger '><CIcon  size='md' name=\"cil-x\"/></button>\r\n            </CTooltip></>:''}\r\n            </CButtonGroup>\r\n\r\n        </td>\r\n      </tr>\r\n    });\r\n\r\n  return (\r\n    <>\r\n    <CRow className='table-responsive'>\r\n        <CRow className=' mt-2'>\r\n        <CCol xs={12} md={4}>\r\n            <CFormGroup>\r\n                  <CCol xs=\"12\" md=\"12\">\r\n                  <CInput\r\n                    className=\"my-auto\"\r\n                   custom\r\n                   defaultValue={search}\r\n                   type='search'\r\n                   onChange={(e)=>props.setsearch(e.target.value)}\r\n                   placeholder=\"Search for student....\"\r\n                />\r\n                  </CCol>\r\n            </CFormGroup>\r\n            </CCol>\r\n            <CCol xs={12} md={4}>\r\n            <CFormGroup>\r\n                <CCol xs={12}>\r\n                \r\n                <CInput\r\n                   custom\r\n                   defaultValue={dates}\r\n                   type='date'\r\n                   onChange={(e)=>changeDates(e.target.value)}\r\n                />\r\n                \r\n                </CCol>\r\n                </CFormGroup>\r\n            </CCol>\r\n           \r\n            <CCol xs={12} md={4}>\r\n            <CCol xs={12}>{ classteacher ?\r\n                confirm_date ?\r\n                <CButton \r\n                    color=\"dark\" \r\n                    disabled\r\n                    block\r\n                    onClick={saveAttendance}\r\n                >Attendance saved ({moment(dates).format('DD MMM, YYYY')})</CButton>:\r\n                <CButton \r\n                    disabled={ props.activeterm ? false:true }\r\n                    color=\"info\" \r\n                    block\r\n                    onClick={saveAttendance}\r\n                >Save Attendance</CButton>:<CButton>No Permission to Edit</CButton>}\r\n            </CCol>\r\n            </CCol>\r\n        </CRow>\r\n        <CCollapse show={Object.values(selector).filter(rw=>rw === true).length > 0 ? true : false}>\r\n        <CRow className=' mt-2'>\r\n        <CCol xs={12} md={4}>\r\n            <CFormGroup>\r\n                  <CCol xs=\"12\" md=\"12\">\r\n                  <CSelect\r\n                    className=\"my-auto\"\r\n                   custom\r\n                   value={actions}\r\n                   type='search'\r\n                   onChange={(e)=>setactions(e.target.value)}\r\n                   placeholder=\"Search for student....\"\r\n                >\r\n                  <option value=\"0\">Select an action</option>\r\n                  <option value=\"1\">Send selected student to my subject</option>\r\n                  <option value=\"2\">Send selected student to a subject</option>\r\n                  <option value=\"3\">Move selected students to another class</option>\r\n                  <option value=\"4\">Remove selected students from class</option>\r\n                  <option value=\"5\">Send an email message to selected students</option>\r\n                  <option value=\"6\">Send an sms message to selected students</option>\r\n                  <option value=\"7\">Send a Whatsapp message to selected students</option>\r\n                  <option value=\"8\"></option>\r\n                  </CSelect>\r\n                  </CCol>\r\n            </CFormGroup>\r\n            </CCol>\r\n        <CCol xs={12} md={4}>\r\n            <CFormGroup>\r\n            { parseInt(actions) > 0?\r\n                  <CCol xs=\"12\" md=\"12\">\r\n                  <CSelect\r\n                    className=\"my-auto\"\r\n                    custom\r\n                    value={itemzs}\r\n                    type='search'\r\n                    onChange={(e)=>setitemzs(e.target.value)}\r\n                    placeholder=\"Search for student....\"\r\n                  >\r\n                    <option></option>\r\n                  {itemoptions}\r\n                  </CSelect>\r\n                  </CCol>:\"\"}\r\n            </CFormGroup>\r\n           </CCol>\r\n        <CCol xs={12} md={4}>\r\n            <CCol xs={12}>{ parseInt(itemzs) > 0 &&  parseInt(actions) > 0?\r\n                <CButton \r\n                    disabled={ props.activeterm ? false:true }\r\n                    color=\"info\" \r\n                    block\r\n                    onClick={submitChoice}\r\n                >Submit </CButton>:<CButton></CButton>}\r\n            </CCol>\r\n            </CCol>\r\n        </CRow>\r\n        </CCollapse>\r\n      <table className=\"table table-hover table-outline mb-0 d-sm-table\">\r\n          <thead className=\"thead-light\">\r\n              <tr>\r\n                <th className=\"text-center\"><CIcon name=\"cil-people\" /></th>\r\n                <th>Student</th>\r\n                <th>Attendance</th>\r\n                <th>{\" .     . \"}\r\n                <CTooltip content=\"Select All\">\r\n                  <CSwitch \r\n                  className={'my-auto mx-3'} \r\n                  variant={'3d'} \r\n                  color={'primary'}  \r\n                  onChange={(e)=>changeSelect(e.target.checked)}/>\r\n                </CTooltip>\r\n                Actions\r\n                </th>\r\n              </tr>\r\n           </thead>\r\n            <tbody>\r\n                  {tabl}\r\n            </tbody>\r\n      </table>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n    studentattendance : state.studentattendanceReducer,\r\n    user:state.userReducer,\r\n    classstaff:state.classstaffReducer,\r\n    staffsubject : state.staffsubjectReducer,\r\n    dropdowns : state.userReducer.dropdowns,\r\n  })\r\n  export default connect(mapStateToProps, {\r\n    getStudentattendances,\r\n    getStudentattendancedailys,\r\n    getStudentattendance,\r\n    registerStudentattendance,\r\n    registerStudentattendancedaily,\r\n    updateStudentattendance,\r\n    updateStudentattendancedaily,\r\n    deleteStudentattendance,\r\n    deleteStudentattendancedaily,\r\n    getStaffsubjects\r\n  })(Students)\r\n  \r\n","import React, { useState, useEffect }  from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory} from 'react-router-dom'\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CTabPane,\r\n    CButton\r\n  } from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { Button, Col } from 'reactstrap'\r\nimport { insertStudentca , deleteStudentca , getStudentscorecas} from './../../actions/student/studentscore'\r\nimport { updateStaffsubject} from './../../actions/staff/staffsubject';\r\nimport { ordinal_suffix_of } from '../../actions/common';\r\n\r\nconst StudentReportList = (props) => {\r\n    \r\n    let reportid = props.reportid;\r\n    let sessionid = props.sessionid;\r\n    let students = props.students;\r\n    let claszname = props.claszname;\r\n    let claszparentname = props.claszparentname;\r\n    let classteacher = props.classteacher;\r\n    let allsubjects = props.subjectname;\r\n    let theadm = props.theadm;\r\n   \r\n    let scores = props.student_ca_score_array\r\n\r\n   \r\n\r\n    const computeavg = (sums, tots)=>{\r\n        let res = sums > 0 && tots > 0 ? (sums/tots)  : 0;\r\n        return Number(res).toFixed(1)\r\n    }\r\n    const compute = (sumz)=>{\r\n     \r\n      let sums = sumz !== undefined ? sumz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0):'';\r\n      return Number(sums).toFixed(1)\r\n      \r\n  }\r\n    const compute100 = (sumz, totz)=>{\r\n        let sums = sumz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n        let tots = totz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n        \r\n        let res = sums > 0 && tots > 0 ? (sums/tots) * 100 : 0;\r\n        return Number(res).toFixed(1)\r\n    }\r\n\r\n    /**\r\n     * sort position by student\r\n     * sort maxscore\r\n     */\r\n    \r\n    let cols = {}\r\n    let sumfinal = []\r\n    let avgfinal = []\r\n    let rkfinal = []\r\n    let avg_array = {}\r\n\r\n    let cascored = props.studentscore && Array.isArray(props.studentscore) ? props.studentscore.filter(rw =>rw != null || rw != undefined) : []\r\n    let cascored_array = {}\r\n    cascored.forEach(ele=>{\r\n      if(Object.keys(cascored_array).includes(ele.clientid))\r\n      {\r\n        if(Object.keys(cascored_array[ele.clientid]).includes(ele.itemid))\r\n        {\r\n          if(Object.keys(cascored_array[ele.clientid][ele.itemid]).includes(ele.itemid1))\r\n          {\r\n\r\n          }else{\r\n            cascored_array[ele.clientid][ele.itemid][ele.itemid1] = ele.contact\r\n          }\r\n\r\n        }else{\r\n          cascored_array[ele.clientid][ele.itemid] = {}\r\n          cascored_array[ele.clientid][ele.itemid][ele.itemid1] = ele.contact\r\n        }\r\n\r\n      }else\r\n      {\r\n          cascored_array[ele.clientid] = {};\r\n          cascored_array[ele.clientid][ele.itemid] ={}\r\n          cascored_array[ele.clientid][ele.itemid][ele.itemid1] = ele.contact\r\n      }\r\n    })\r\n    \r\n    let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw != null || rw != undefined) : []\r\n    let pullrank = [];\r\n    data.forEach(row=>{\r\n        let sumrow = [];\r\n        let numrow = [];\r\n           Object.keys(allsubjects).forEach(prop=>{\r\n              if(scores !== undefined && scores.hasOwnProperty(row.id) && scores[row.id].hasOwnProperty(prop))\r\n              {\r\n                  sumrow.push(compute(scores[row.id][prop]));\r\n                  numrow.push(prop);\r\n              }    \r\n           })\r\n           let pr = {};\r\n           pr['studentid'] = row.id;\r\n           pr['score']= computeavg(compute(sumrow), numrow.length);\r\n           pullrank.push(pr)\r\n    })\r\n    \r\n    //RANK STUDENTS\r\n    pullrank.sort(function(a,b){ return b.score - a.score; });\r\n    pullrank.forEach(function(player, i, arr)\r\n    {\r\n    player.rank = i === 0 || player.score != arr[i-1].score\r\n            ? i + 1\r\n            : arr[i-1].rank;\r\n    });\r\n\r\n    let stdrank = {}\r\n    pullrank.forEach(el => {\r\n        stdrank[el.studentid] = el.rank;\r\n    });\r\n  \r\n\r\n    let acct = data.map((row, ind)=>{\r\n      let sumrow = [];\r\n      let numrow = [];\r\n      \r\n      return <tr key={ind}>\r\n      <td className=\"text-center\">\r\n       {ind + 1}\r\n      </td>\r\n      <td className=\"text-center\">\r\n       {row.admission_no}\r\n      </td>\r\n      <td>\r\n      <div><strong>{`${row.surname} ${row.firstname} ${row.middlename}`}</strong></div>\r\n      </td>\r\n      {\r\n          \r\n          Object.keys(allsubjects).map((prop, ind)=>{\r\n            \r\n            if(cols.hasOwnProperty(prop)){}else{cols[prop] = []}\r\n            if(scores !== undefined && scores.hasOwnProperty(row.id) && scores[row.id].hasOwnProperty(prop))\r\n            {\r\n                sumrow.push(compute(scores[row.id][prop]));\r\n                numrow.push(prop);\r\n                cols[prop].push(compute(scores[row.id][prop]))\r\n            }\r\n            return <><td className='text-center' key={ind}>\r\n               {\r\n                scores !== undefined && scores.hasOwnProperty(row.id) && scores[row.id].hasOwnProperty(prop)  ? compute(scores[row.id][prop]) : '-'\r\n               }\r\n             </td>     \r\n             </>\r\n         })\r\n      }\r\n      <th className='text-center' >{numrow.length}</th>\r\n      <th className='text-center' >{compute(sumrow)}</th>\r\n      <th className='text-center' >{computeavg(compute(sumrow), numrow.length)}</th>\r\n      <th className='text-center' >{ordinal_suffix_of(stdrank[row.id])}</th>\r\n    </tr>\r\n  })\r\n\r\n   \r\n    let numfooter = Object.keys(allsubjects).filter(rw=>allsubjects[rw] !== null && allsubjects[rw] !== undefined && allsubjects[rw].length > 0).map((sub, idx)=>{\r\n        return <td key={idx} className='text-center'>{cols.hasOwnProperty(sub) ? cols[sub].length : '-'} </td>\r\n    })\r\n\r\n    let sumfooter = Object.keys(allsubjects).filter(rw=>allsubjects[rw] !== null && allsubjects[rw] !== undefined && allsubjects[rw].length > 0).map((sub, idx)=>{\r\n        if(cols[sub] !== undefined && Array.isArray(cols[sub]) && compute(cols[sub]) > 0 ){ sumfinal.push(compute(cols[sub]))}\r\n        return<> <td key={idx} className='text-center' style={{fontSize:'11px', fontStyle:'italic', fontWeight:'bolder'}}>{ cols[sub] !== undefined && Array.isArray(cols[sub]) && compute(cols[sub]) > 0? compute(cols[sub]) :''} </td>\r\n        </>\r\n    })\r\n\r\n    let avgfooter = Object.keys(allsubjects).filter(rw=>allsubjects[rw] !== null && allsubjects[rw] !== undefined && allsubjects[rw].length > 0).map((sub, idx)=>{\r\n        if( cols[sub] !== undefined && Array.isArray(cols[sub]) && computeavg(compute(cols[sub]), cols[sub].length) > 0 ){ avgfinal.push(computeavg(compute(cols[sub]), cols[sub].length)); \r\n        let rk = {}; \r\n        rk['subjectid'] = sub;\r\n        rk['score'] = computeavg(compute(cols[sub]), cols[sub].length);\r\n        rkfinal.push(rk);\r\n        avg_array[sub] = computeavg(compute(cols[sub]), cols[sub].length);\r\n     }\r\n        return <td key={idx} className='text-center'>{ cols[sub] !== undefined && Array.isArray(cols[sub]) && computeavg(compute(cols[sub]), cols[sub].length) > 0  ? computeavg(compute(cols[sub]), cols[sub].length): '0'} </td>\r\n    })\r\n\r\n    //RANK AVERAGE\r\n    rkfinal.sort(function(a,b){ return b.score - a.score; });\r\n    rkfinal.forEach(function(player, i, arr) {\r\n    player.rank = i === 0 || player.score != arr[i-1].score\r\n            ? i + 1\r\n            : arr[i-1].rank;\r\n    });\r\n\r\n    let rank = {}\r\n    rkfinal.forEach(el => {\r\n        rank[el.subjectid] = el.rank;\r\n    });\r\n        \r\n    let rkfooter = Object.keys(allsubjects).filter(rw=>allsubjects[rw] !== null && allsubjects[rw] !== undefined && allsubjects[rw].length > 0).map((sub, idx)=>{\r\n        return <td key={idx} className='text-center'>{rank.hasOwnProperty(sub) ? rank[sub] : '-'} </td>\r\n    })\r\n\r\n  return (\r\n   <>\r\n    \r\n    <div className=\"A4\" >\r\n        <div className=\"sheet padding-5mm\" >\r\n        <CRow className='mb-5'>    \r\n           <CCol>\r\n                <table width=\"100%\" border=\"solid 3px teal \" style={{borderColor:'teal'}}>\r\n                    <thead className=\"text-center\">\r\n                        <tr>\r\n                            <th rowSpan={2}>SN</th>\r\n                            <th rowSpan={2}>MATRIC</th>\r\n                            <th rowSpan={2}>FULLNAME</th>\r\n                            {theadm}\r\n                            <th rowSpan={2}>NUM</th>\r\n                            <th rowSpan={2}>SUM</th>\r\n                            <th rowSpan={2}>AVG</th>\r\n                            <th rowSpan={2}>POS.</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {\r\n                        acct\r\n                    }\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td>NUMBER</td>\r\n                            {numfooter}\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td>TOTAL</td>\r\n                            {sumfooter}\r\n                            <td></td>\r\n                            <td className='text-center'>{compute(sumfinal)}</td>\r\n                            <td className='text-center'>{computeavg(compute(sumfinal), sumfinal.length)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td>AVERAGE</td>\r\n                            {avgfooter}\r\n                            <td></td>\r\n                            <td className='text-center'>{compute(avgfinal)}</td>\r\n                            <td className='text-center'><strong>{computeavg(compute(avgfinal), avgfinal.length)}</strong></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td>RANK</td>\r\n                            {rkfooter}\r\n                            <td></td>\r\n                            <td className='text-center'></td>\r\n                            <td className='text-center'><strong></strong></td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n                \r\n            </CCol>\r\n            \r\n        </CRow>\r\n        <CRow>\r\n            <CCol>\r\n                <h4>CLASS AVERAGE {computeavg(compute(avgfinal), avgfinal.length)}</h4>\r\n            </CCol>\r\n        </CRow>\r\n        </div>\r\n    </div>\r\n   \r\n   </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  studentscore : state.studentscoreReducer.studentscoreca,\r\n  staffsubjects : state.staffsubjectReducer.staffsubjects\r\n})\r\nexport default connect(mapStateToProps, {\r\n  insertStudentca,\r\n  deleteStudentca, \r\n  getStudentscorecas,\r\n  updateStaffsubject\r\n})(StudentReportList)\r\n  \r\n","import React, { useState, useEffect }  from 'react'\r\nimport { useHistory} from 'react-router-dom'\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CCardHeader,\r\n    CNav,\r\n    CNavLink,\r\n    CNavItem,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CTabs,\r\n    CButton,\r\n    CWidgetIcon,\r\n    CCardFooter,\r\n    CLink\r\n  } from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst StudentReportList = (props) => {\r\n    let studentid = props.studentid;\r\n    let rows = props.studentname;\r\n    let claszname = props.claszname;\r\n    let claszparentname = props.claszparentname;\r\n    let classteacher = props.classteacher;\r\n    let theadm = props.theadm;\r\n    let theadm1 = props.theadm1;\r\n    let caunit_array = props.caunit_array;\r\n    let ca_array = props.ca_array;\r\n    let ca_score = props.ca_score;\r\n    let arr = props.arr\r\n    let classparent_subject_average = props.classparent_subject_average\r\n    let class_subject_average = props.class_subject_average\r\n    let student_classparent_subject_position_store = props.student_classparent_subject_position_store\r\n    let student_class_subject_position_store = props.student_class_subject_position_store\r\n    let student_classparent_position_store = props.student_classparent_position_store\r\n    let student_class_position_store = props.student_class_position_store\r\n    let student_ca_score_store = props.student_ca_score_store\r\n\r\n    let total_subjects = 0;\r\n    let total_scores = [];\r\n    \r\n    let std_position = student_classparent_position_store !== undefined && \r\n                      Array.isArray(student_classparent_position_store) && \r\n                      student_classparent_position_store.length > 0 ? student_classparent_position_store[0] : {'rank':'-'}\r\n    let std_positions = student_class_position_store !== undefined && \r\n                      Array.isArray(student_class_position_store) && \r\n                      student_class_position_store.length > 0 ? student_class_position_store[0] : {'rank':'-'}\r\n    \r\n                      const compute = (sumz, totz, id)=>{\r\n        let sums = sumz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n        let tots = totz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n        let res = sums > 0 && tots > 0 ? (sums/tots) * ca_score[id] : 0;\r\n        return Number(res).toFixed(1)\r\n    }\r\n    const compute100 = (sumz, totz)=>{\r\n        let sums = sumz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n        let tots = totz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n        let res = sums > 0 && tots > 0 ? (sums/tots) * 100 : 0;\r\n        return Number(res).toFixed(1)\r\n    }\r\n    const get_student_total = (sumz)=>{\r\n      let sums = sumz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n      return Number(sums).toFixed(1)\r\n    }\r\n    const get_student_average = (sumz, tots)=>{\r\n      let sums = sumz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n      let res = sums > 0 && tots > 0 ? (sums/tots) : 0;\r\n      return Number(res).toFixed(1)\r\n    }\r\n    \r\n    /**\r\n     * sort position by student\r\n     * sort maxscore\r\n     */\r\n    let rank_array_classparent ={}\r\n    let total_array_classparent = {}\r\n    let avg_array_classparent = {}\r\n\r\n    Object.keys(student_classparent_subject_position_store).forEach(el => {\r\n      let ra = student_classparent_subject_position_store[el].filter(rw=>parseInt(rw.studentid) === parseInt(studentid))[0]\r\n      if(ra !== undefined)\r\n      {\r\n        rank_array_classparent[el] = ra.rank;\r\n        total_array_classparent[el] = ra.score;\r\n        avg_array_classparent[el] = ra.average;\r\n      }\r\n    });\r\n\r\n    let rank_array_class ={}\r\n    let total_array_class = {}\r\n    let avg_array_class = {}\r\n    Object.keys(student_class_subject_position_store).forEach(el => {\r\n      let ra = student_class_subject_position_store[el].filter(rw=>parseInt(rw.studentid) === parseInt(studentid))[0]\r\n      if(ra !== undefined)\r\n      {\r\n        rank_array_class[el] = ra.rank;\r\n        total_array_class[el] = ra.score;\r\n        avg_array_class[el] = ra.average;\r\n      }\r\n  });\r\n    let data = props.data && Array.isArray(Object.keys(props.data)) ? props.data : []\r\n  \r\n    let acct = Object.keys(data).map((row, ind)=>{\r\n      if(arr && Array.isArray(Object.keys(arr)) && Object.keys(arr).includes(row)  && arr[row] !== undefined )\r\n      {\r\n      let subs= [];\r\n      let adds = [];\r\n      total_subjects = total_subjects + 1;\r\n      return <tr key={ind}>\r\n      <td className=\"text-center\">\r\n       {ind + 1}\r\n      </td>\r\n      <td>\r\n      <div><strong style={{textTransform:'capitalize'}}>{data[row]}</strong></div>\r\n      </td>\r\n      {\r\n          \r\n          Object.keys(ca_array).map((prop, ind)=>{\r\n            let sumrow = [];\r\n            let totrow = [];\r\n            return <>{Object.keys(caunit_array[prop]).map((pro, inds)=>{\r\n            if(arr && Array.isArray(Object.keys(arr)) && Object.keys(arr).includes(row) && Object.keys(arr[row]).includes(caunit_array[prop][pro].id) )\r\n            {\r\n              let sh = arr[row][caunit_array[prop][pro].id];\r\n              let shmax = caunit_array[prop][pro].score;\r\n              sumrow.push(sh)\r\n              totrow.push(shmax)\r\n              subs.push(sh)\r\n              adds.push(shmax)\r\n              return <td className='text-center' key={inds}>{Number(sh).toFixed(1)}</td>\r\n            }else\r\n            {\r\n              return <td className='text-danger text-center'><CIcon name=\"cil-x\"/></td>\r\n            }\r\n             })}\r\n             <th className='text-center' >{compute(sumrow, totrow, prop)}</th>\r\n             </>\r\n         })\r\n         \r\n      }\r\n      \r\n      <th className='text-center' >{compute100(subs, adds)}{total_scores.push(compute100(subs, adds))}</th>\r\n      <th className='text-center' >{class_subject_average.hasOwnProperty(row) && props.class_subject_average[row].hasOwnProperty('average') ? Number(props.class_subject_average[row].average).toFixed(1):'0'}</th>\r\n      <th className='text-center' >{classparent_subject_average.hasOwnProperty(row) && props.classparent_subject_average[row].hasOwnProperty('average') ? Number(props.classparent_subject_average[row].average).toFixed(1) :'0'}</th>\r\n      <th className='text-center' >{rank_array_class[row]} of {class_subject_average.hasOwnProperty(row) && class_subject_average[row].hasOwnProperty('pop') ? class_subject_average[row].pop:'-'}</th>\r\n      <th className='text-center' >{rank_array_classparent[row]} of {classparent_subject_average.hasOwnProperty(row) && classparent_subject_average[row].hasOwnProperty('pop') ? classparent_subject_average[row].pop :\"\"} </th>\r\n    \r\n    </tr>}\r\n  })\r\n    \r\n\r\n  return (\r\n   <>\r\n   <CTabPane>\r\n   <CRow className='mb-5'>\r\n   <CCol xs={9}>\r\n       <h3 style={{textTransform:'capitalize'}}>{`${rows.surname} ${rows.firstname} ${rows.middlename}`}</h3>\r\n       <h5>{rows.abbrv}{rows.admission_no}</h5>\r\n       <h6>{`${std_position.rank} of ${claszname} `}</h6>\r\n       <h6>{`${std_positions.rank} of  ${claszparentname} `}</h6>\r\n    </CCol>\r\n    <CCol xs={3}>\r\n    <div className=\"c-avata\">\r\n        <img \r\n        src={process.env.REACT_APP_SERVER_URL+ rows.photo} \r\n        className=\"c-\" \r\n        style={{width:'120px'}}\r\n        alt={rows.admission_no} \r\n        onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/avatars/1.png'} }\r\n        />\r\n        <span className={`c-avatar-status ${rows.gender === 'Male' ? 'bg-success' : 'bg-danger'}`}></span>\r\n      </div>\r\n    </CCol>\r\n\r\n            <CCol  xs=\"12\"className=\"printpages\" >\r\n                <table width=\"100%\" border=\"solid 3px teal \" style={{borderColor:'teal'}}>\r\n                    <thead className=\"text-center\">\r\n                    <tr>\r\n                            <th rowSpan={2}>SN</th><th rowSpan={2}>FULLNAME</th>{theadm}\r\n                            <th rowSpan={2}>TOTAL<br/> (100%)</th>\r\n                            <th rowSpan={2}>AVG<br/> ARM</th>\r\n                            <th rowSpan={2}>AVG<br/> CLASS</th>\r\n                            <th rowSpan={2}>RANK<br/> ARM</th>\r\n                            <th rowSpan={2}>RANK<br/> CLASS</th>\r\n                        </tr>\r\n                        <tr>\r\n                            {theadm1}\r\n                        </tr>\r\n                    </thead>\r\n                    {\r\n                        acct\r\n                    }\r\n                </table>\r\n            </CCol>\r\n            <CCol xs=\"12\">\r\n            <table width=\"100%\" >\r\n              <tr>\r\n                <th className=\"text-right\" width=\"15%\"><strong>{`TOTAL SCORE`}</strong></th>\r\n                <td width=\"15%\" style={{fontFamily:'tahoma', fontStyle:\"italic\", paddingLeft:'9px'}}>{get_student_total(total_scores)}</td>\r\n                <th className=\"text-right\" width=\"15%\"><strong>{`${claszname} AVERAGE`}</strong></th>\r\n                <td width=\"15%\" style={{fontFamily:'tahoma', fontStyle:\"italic\", paddingLeft:'9px'}}>{Number(std_position.average).toFixed(1)}</td>\r\n                <th className=\"text-right\" width=\"15%\"><strong>{`TOTAL FEES`}</strong></th>\r\n                <td width=\"15%\" style={{fontFamily:'tahoma', fontStyle:\"italic\", paddingLeft:'9px'}}></td>\r\n              </tr>\r\n              <tr>\r\n                <th className=\"text-right\"><strong>{`SUBJECTS RECORDED`}</strong></th>\r\n                <td style={{fontFamily:'tahoma', fontStyle:\"italic\", paddingLeft:'9px'}}>{total_subjects}</td>\r\n                <th className=\"text-right\" width=\"15%\"><strong>{`${claszparentname} AVERAGE`}</strong></th>\r\n                <td width=\"15%\" style={{fontFamily:'tahoma', fontStyle:\"italic\", paddingLeft:'9px'}}>{Number(std_positions.average).toFixed(1)}</td>\r\n                <th className=\"text-right\"><strong>{`TOTAL PAIDS`}</strong></th>\r\n                <td style={{fontFamily:'tahoma', fontStyle:\"italic\", paddingLeft:'9px'}}></td>\r\n              </tr>\r\n              <tr>\r\n                <th className=\"text-right\"><strong>{`STUDENT AVERAGE `}</strong></th>\r\n                <td style={{fontFamily:'tahoma', fontStyle:\"italic\", paddingLeft:'9px'}}>{get_student_average(total_scores, total_subjects)}</td>\r\n                <th className=\"text-right\" width=\"15%\"><strong>{`CLASS AVERAGE`}</strong></th>\r\n                <td width=\"15%\" style={{fontFamily:'tahoma', fontStyle:\"italic\", paddingLeft:'9px'}}>12</td>\r\n                <th className=\"text-right\"><strong>{'BALANCE'}</strong></th>\r\n                <td style={{fontFamily:'tahoma', fontStyle:\"italic\", paddingLeft:'9px'}}></td>\r\n              </tr>\r\n            </table>\r\n            </CCol>\r\n        </CRow></CTabPane>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default StudentReportList\r\n  \r\n","import React, { useEffect, useState }  from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory} from 'react-router-dom'\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CCardHeader,\r\n    CFormGroup,\r\n    CSelect,\r\n    CNav,\r\n    CNavLink,\r\n    CNavItem,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CTabs,\r\n    CButton,\r\n    CWidgetIcon,\r\n    CCardFooter,\r\n    CLink\r\n  } from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport ScoreReportTable from './ScoreReportTable1';\r\nimport StudentReportTable from './StudentReportTable';\r\nimport {getReports} from './../../actions/setting/report';\r\nimport {getCas} from './../../actions/setting/ca';\r\nimport {getStudentscores} from './../../actions/student/studentscore';\r\n\r\nconst StudentReportList = (props) => {\r\n    let history = useHistory();\r\n\r\n    //PASS DATA FROM PARENT PAGE\r\n    let studentids = props.data1;\r\n    let students = props.data;\r\n    let termid = props.term;\r\n    let sessionid = props.session;\r\n    let classteacher = props.classteacher;\r\n    let clasz = props.clasz;\r\n    let claszname = props.claszname;\r\n    let claszparent = props.claszparent;\r\n    let claszparentname = props.claszparentname;\r\n    let activeterm = props.activeterm;\r\n    let staffid = props.user.mid;\r\n    \r\n\r\n    //STORE DATA IN STATES\r\n    const [repid, setrepid] = useState(0)\r\n    const [active, setActive] = useState(0)\r\n\r\n    \r\n    //GET DATA NEED FOR THIS PAGE\r\n    //ALL REPORTS FOR THE SESSION\r\n    //DEPENDS ON SESSION\r\n    useEffect(() => {\r\n        //GET ALL REPORT FOR THIS SESSION\r\n        //SO AS TO GENERATE DROPDOWNLIST\r\n        let params = {\r\n            data:JSON.stringify(\r\n            {\r\n                  'sessionid':sessionid\r\n              }),\r\n              cat:'selected',\r\n              table:'reports',\r\n              narration:'get reports'\r\n            }\r\n          props.getReports(params);\r\n\r\n          \r\n           let params1 = {\r\n                data:JSON.stringify(\r\n                {\r\n                'termid':termid,\r\n                'schoolid':sessionid\r\n                }),\r\n                cat:'dropdownca',\r\n                table:'dropdownca',\r\n                narration:'get ca'\r\n        \r\n            }\r\n            props.getCas(params1)\r\n            \r\n\r\n\r\n    }, [sessionid])\r\n\r\n    useEffect(() => {\r\n        //GET ALL REPORT FOR THE STUDENTS\r\n        let reportarrays = props.reports && Array.isArray(props.reports) ? props.reports : [];\r\n        let casss = reportarrays.filter(rw=>rw !== null && parseInt(rw.id) === parseInt(repid));\r\n        let cass = Array.isArray(casss) && casss.length > 0 ? casss[0].ca : '';\r\n        let cas = cass.length > 0 ? cass: '';\r\n        \r\n        if(parseInt(repid) > 0){\r\n        let params = {\r\n            data:JSON.stringify(\r\n            {\r\n                  'sessionid':sessionid,\r\n                  'termid':termid,\r\n                  'ids':studentids,\r\n                  'clasz':clasz,\r\n                  'claszparent':claszparent,\r\n                  'cas' : cas,\r\n\r\n              }),\r\n              cat:'selectreport',\r\n              table:'studentscore',\r\n              narration:'get reports'\r\n            }\r\n          props.getStudentscores(params);\r\n        }\r\n\r\n        let params = {\r\n            data:JSON.stringify(\r\n            {\r\n                  'cas' : cas,\r\n                  'schoolid' : 1\r\n            }),\r\n              cat:'dropdownca1',\r\n              table:'dropdownca',\r\n              narration:'get cas'\r\n            }\r\n          props.getCas(params);\r\n        \r\n    }, [repid, studentids, claszparent, clasz])\r\n\r\n    \r\n    let studentscorearray = props.studentscores && Array.isArray(props.studentscores[0]) ? props.studentscores[0] : [];\r\n    let arr = {};\r\n    let srr = {};\r\n    let allsubjects = {};\r\n    studentscorearray.forEach(ele => {\r\n        //by subjects\r\n        if(Object.keys(arr).includes(ele.subjectid))\r\n        {\r\n            if(Object.keys(arr[ele.subjectid]).includes(ele.studentid))\r\n            {\r\n                if(Object.keys(arr[ele.subjectid][ele.studentid]).includes(ele.caid))\r\n                {\r\n\r\n                }else{\r\n                    arr[ele.subjectid][ele.studentid][ele.caid] = ele.score\r\n                }\r\n\r\n            }\r\n            else{\r\n                arr[ele.subjectid][ele.studentid] = {}\r\n                arr[ele.subjectid][ele.studentid][ele.caid] = ele.score\r\n            }\r\n        }else\r\n        {\r\n            arr[ele.subjectid] = {};\r\n            arr[ele.subjectid][ele.studentid] = {}\r\n            arr[ele.subjectid][ele.studentid][ele.caid] = ele.score\r\n        }\r\n        //by students\r\n        if(Object.keys(srr).includes(ele.studentid))\r\n        {\r\n            if(Object.keys(srr[ele.studentid]).includes(ele.subjectid))\r\n            {\r\n                if(Object.keys(srr[ele.studentid][ele.subjectid]).includes(ele.caid))\r\n                {\r\n\r\n                }else{\r\n                    srr[ele.studentid][ele.subjectid][ele.caid] = ele.score\r\n                }\r\n\r\n            }\r\n            else{\r\n                srr[ele.studentid][ele.subjectid] = {}\r\n                srr[ele.studentid][ele.subjectid][ele.caid] = ele.score\r\n            }\r\n        }else\r\n        {\r\n            srr[ele.studentid] = {};\r\n            srr[ele.studentid][ele.subjectid] = {}\r\n            srr[ele.studentid][ele.subjectid][ele.caid] = ele.score\r\n        }\r\n        allsubjects[ele.subjectid] = ele.subjectabbrv \r\n    });\r\n \r\n     //ARRANGE\r\n     let studentparentaveragearray = props.studentscores && Array.isArray(props.studentscores[1]) ? props.studentscores[1] : [];\r\n     let classparent_subject_average = {}\r\n     studentparentaveragearray.forEach(ele=>{\r\n         let frr = {};\r\n         frr['pop'] = ele.students;\r\n         frr['average'] = ele.avgr;\r\n         frr['maxscore'] = ele.maxscore;\r\n         frr['score'] = ele.score;\r\n         classparent_subject_average[ele.subjectid] = frr;\r\n     })\r\n     //ARRANGE\r\n     let studentclassaveragearray = props.studentscores && Array.isArray(props.studentscores[2]) ? props.studentscores[2] : [];\r\n     let class_subject_average = {}\r\n     studentclassaveragearray.forEach(ele=>{\r\n         let frr = {};\r\n         frr['pop'] = ele.students;\r\n         frr['average'] = ele.avgr;\r\n         frr['maxscore'] = ele.maxscore;\r\n         frr['score'] = ele.score;\r\n         class_subject_average[ele.subjectid] = frr;\r\n     })\r\n \r\n     //ARRANGE SUBJECT CLASS PARENT POSITION\r\n\r\n     let student_classparent_subject_position_array = props.studentscores && Array.isArray(props.studentscores[4]) ? props.studentscores[4] : [];\r\n     let student_classparent_subject_position_store = {}\r\n     let student_classparent_subject_position_stores = []\r\n     \r\n     student_classparent_subject_position_array.forEach(ele=>{\r\n         \r\n         if(Object.keys(student_classparent_subject_position_store).includes(ele.studentid))\r\n         {\r\n             if(Object.keys(student_classparent_subject_position_store[ele.studentid]).includes(ele.subjectid))\r\n             {\r\n \r\n             }else\r\n             {\r\n                 let frr = {};\r\n                 frr['score'] = parseFloat(ele.avgr);\r\n                 student_classparent_subject_position_store[ele.studentid][ele.subjectid] = frr;\r\n                 let prr = {};\r\n                 prr['score'] = parseFloat(ele.avgr);\r\n                 prr['studentid'] = ele.studentid;\r\n                 prr['subjectid'] = ele.subjectid;\r\n                 student_classparent_subject_position_stores.push(prr)\r\n             }\r\n \r\n         }else\r\n         {\r\n             let frr = {};\r\n             frr['score'] = ele.avgr;\r\n             //frr['position'] = ele.position;\r\n             student_classparent_subject_position_store[ele.studentid] = {};\r\n             student_classparent_subject_position_store[ele.studentid][ele.subjectid] = frr;\r\n             let prr = {};\r\n             prr['score'] = ele.avgr;\r\n             //prr['position'] = ele.position;\r\n             prr['studentid'] = ele.studentid;\r\n             prr['subjectid'] = ele.subjectid;\r\n             student_classparent_subject_position_stores.push(prr)\r\n         }\r\n         \r\n     })\r\n     \r\n     //ARRANGE SUBJECT CLASS PARENT POSITION\r\n     let student_class_subject_position_array = props.studentscores && Array.isArray(props.studentscores[5]) ? props.studentscores[5] : [];\r\n     let student_class_subject_position_store = {}\r\n     let student_class_subject_position_stores = []\r\n     student_class_subject_position_array.forEach(ele=>{\r\n         \r\n         if(Object.keys(student_class_subject_position_store).includes(ele.studentid))\r\n         {\r\n             if(Object.keys(student_class_subject_position_store[ele.studentid]).includes(ele.subjectid))\r\n             {\r\n \r\n             }else\r\n             {\r\n                 let frr = {};\r\n                 frr['score'] = parseFloat(ele.avgr);\r\n                 student_class_subject_position_store[ele.studentid][ele.subjectid] = frr;\r\n                 let prr = {};\r\n                 prr['score'] = parseFloat(ele.avgr);\r\n                 prr['studentid'] = ele.studentid;\r\n                 prr['subjectid'] = ele.subjectid;\r\n                student_class_subject_position_stores.push(prr)\r\n             }\r\n \r\n         }else\r\n         {\r\n             let frr = {};\r\n             frr['score'] = parseFloat(ele.avgr);\r\n             student_class_subject_position_store[ele.studentid] = {};\r\n             student_class_subject_position_store[ele.studentid][ele.subjectid] = frr;\r\n             let prr = {};\r\n             prr['score'] = parseFloat(ele.avgr);\r\n             prr['studentid'] = ele.studentid;\r\n             prr['subjectid'] = ele.subjectid;\r\n             student_class_subject_position_stores.push(prr)\r\n         }\r\n         \r\n     })\r\n \r\n     //ARRANGE CLASS PARENT POSITION\r\n     let student_classparent_position_array = props.studentscores && Array.isArray(props.studentscores[6]) ? props.studentscores[6] : [];\r\n     let student_classparent_position_store = []\r\n     student_classparent_position_array.forEach(ele=>{\r\n       \r\n             let frr = {};\r\n             frr['average'] = parseFloat(ele.avg);\r\n             frr['score'] = ele.total;\r\n             frr['subjectid'] = ele.nums;\r\n             frr['studentid'] = ele.studentid;\r\n             student_classparent_position_store.push(frr);        \r\n         \r\n     })\r\n \r\n     //ARRANGE CLASS POSITION\r\n     let student_class_position_array = props.studentscores && Array.isArray(props.studentscores[7]) ? props.studentscores[7] : [];\r\n     let student_class_position_store = []\r\n     student_class_position_array.forEach(ele=>{\r\n       \r\n             let frr = {};\r\n             frr['average'] = parseFloat(ele.avgr);\r\n             frr['score'] = ele.total;\r\n             frr['subjectid'] = ele.nums;\r\n             frr['studentid'] = ele.studentid;\r\n             student_class_position_store.push(frr);       \r\n         \r\n     })\r\n \r\n     //ARRANGE CLASS POSITION\r\n     let student_ca_score = props.studentscores && Array.isArray(props.studentscores[8]) ? props.studentscores[8] : [];\r\n     let student_ca_score_store = {}\r\n     let student_ca_score_array = []\r\n     student_ca_score.forEach(ele=>{\r\n       \r\n        if(Object.keys(student_ca_score_store).includes(ele.studentid))\r\n        {\r\n            if(Object.keys(student_ca_score_store[ele.studentid]).includes(ele.subjectid))\r\n            {\r\n                if(Object.keys(student_ca_score_store[ele.studentid][ele.subjectid]).includes(ele.caid))\r\n                {\r\n\r\n                }else\r\n                {\r\n                    student_ca_score_store[ele.studentid][ele.subjectid][ele.caid] = ele.score;\r\n                    student_ca_score_array[ele.studentid][ele.subjectid].push(ele.score);\r\n                }\r\n\r\n            }else\r\n            {\r\n                student_ca_score_store[ele.studentid][ele.subjectid] = {};\r\n                student_ca_score_store[ele.studentid][ele.subjectid][ele.caid] = ele.score;\r\n\r\n                student_ca_score_array[ele.studentid][ele.subjectid] = [];\r\n                student_ca_score_array[ele.studentid][ele.subjectid].push(ele.score);\r\n            }\r\n\r\n        }else\r\n        {\r\n            student_ca_score_store[ele.studentid] = {};\r\n            student_ca_score_store[ele.studentid][ele.subjectid] = {};\r\n            student_ca_score_store[ele.studentid][ele.subjectid][ele.caid] = ele.score;\r\n\r\n            student_ca_score_array[ele.studentid] = {};\r\n            student_ca_score_array[ele.studentid][ele.subjectid] = [];\r\n            student_ca_score_array[ele.studentid][ele.subjectid].push(ele.score);\r\n        }        \r\n         \r\n     })\r\n \r\n    let reportarray = props.reports && Array.isArray(props.reports) ? props.reports : [];\r\n        let report_array = reportarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n            return <option key={ind} value={rw.id}>{rw.title}</option>\r\n    })\r\n\r\n    var ranksubjectclassunit = {};\r\n    Object.keys(allsubjects).forEach(rw=>{\r\n         let data = student_class_subject_position_stores.filter(r=>parseInt(r.subjectid) === parseInt(rw));\r\n         data.sort(function(a,b){ return b.score - a.score; });\r\n\r\n         data.forEach(function(player, i, arr) {\r\n         player.rank = i === 0 || player.score != arr[i-1].score\r\n                    ? i + 1\r\n                    : arr[i-1].rank;\r\n         });\r\n         ranksubjectclassunit[rw] = data\r\n    })\r\n\r\n    var ranksubjectclass = {};\r\n    Object.keys(allsubjects).forEach(rw=>{\r\n         let data = student_classparent_subject_position_stores.filter(r=>parseInt(r.subjectid) === parseInt(rw));\r\n         data.sort(function(a,b){ return b.score - a.score; });\r\n\r\n         data.forEach(function(player, i, arr) {\r\n         player.rank = i === 0 || player.score != arr[i-1].score\r\n                    ? i + 1\r\n                    : arr[i-1].rank;\r\n         });\r\n         ranksubjectclass[rw] = data\r\n    })\r\n    \r\n    var rankclass = {};\r\n    students.forEach(ro=>{\r\n         let rw = ro.id\r\n         let data = student_classparent_position_store.filter(r=>parseInt(r.studentid) === parseInt(rw));\r\n         data.sort(function(a,b){ return b.score - a.score; });\r\n\r\n         data.forEach(function(player, i, arr) {\r\n         player.rank = i === 0 || player.score != arr[i-1].score\r\n                    ? i + 1\r\n                    : arr[i-1].rank;\r\n         });\r\n         rankclass[rw] = data\r\n    })\r\n    \r\n    var rankclassunit = {};\r\n    students.forEach(ro=>{\r\n         let rw = ro.id\r\n         let data = student_class_position_store.filter(r=>parseInt(r.studentid) === parseInt(rw));\r\n         data.sort(function(a,b){ return b.score - a.score; });\r\n\r\n         data.forEach(function(player, i, arr) {\r\n         player.rank = i === 0 || player.score != arr[i-1].score\r\n                    ? i + 1\r\n                    : arr[i-1].rank;\r\n         });\r\n         rankclassunit[rw] = data\r\n    })\r\n    \r\n    //SET ASSESSMENT\r\n        let cas = Array.isArray(props.cas) ? props.cas : [];\r\n        let ca_array = {};\r\n        let ca_score = {};\r\n        let ca1_array = {};\r\n        let ca2_array = {};\r\n        let caunit_array = {};\r\n        cas.forEach(ele => {\r\n          if(parseInt(ele.typeid) === 1){\r\n            if(Object.keys(ca_array).includes(ele.sid))\r\n            {\r\n               //ca_array[ele.sid] = ele.cname;\r\n            }else{\r\n               ca_array[ele.sid] = ele.caabbrv;\r\n               ca_score[ele.sid] = ele.score;\r\n            }\r\n          }else if(parseInt(ele.typeid) === 2){\r\n           if(Object.keys(ca_array).includes(ele.sid))\r\n           {\r\n              //ca_array[ele.sid] = ele.cname;\r\n           }else{\r\n              ca1_array[ele.sid] = ele.caabbrv;\r\n           }\r\n          }\r\n          else if(parseInt(ele.typeid) === 3){\r\n           if(Object.keys(ca_array).includes(ele.sid))\r\n           {\r\n              //ca_array[ele.sid] = ele.cname;\r\n           }else{\r\n              ca2_array[ele.sid] = ele.caabbrv;\r\n           }\r\n          }\r\n       \r\n          if(Object.keys(caunit_array).includes(ele.sid))\r\n            {\r\n                let arr = {}\r\n                arr['id'] = ele.id;\r\n                arr['typeid'] = ele.typeid;\r\n                arr['name'] = ele.abbrv;\r\n                arr['score'] = ele.maxscore;\r\n                caunit_array[ele.sid].push(arr);\r\n            }else\r\n            {\r\n               caunit_array[ele.sid] = [];\r\n               let arr = {}\r\n               arr['id'] = ele.id;\r\n               arr['typeid'] = ele.typeid;\r\n               arr['name'] = ele.abbrv;\r\n               arr['score'] = ele.maxscore;\r\n               caunit_array[ele.sid].push(arr);\r\n            }\r\n        });\r\n\r\n\r\n        let SUBStopic = Object.keys(allsubjects).filter(rw=>allsubjects[rw] !== null && allsubjects[rw] !== undefined && allsubjects[rw].length > 0).map((sub, idx)=>{\r\n                return <td key={idx}>{allsubjects[sub]} { active === idx }</td>\r\n        })\r\n\r\n        let SUBS = <ScoreReportTable \r\n                students={studentids}\r\n                reportid={repid}\r\n                sessionid={sessionid}\r\n                classteacher={classteacher}\r\n                claszname={claszname}\r\n                claszparent={claszparent}\r\n                claszparentname={claszparentname}\r\n                subjectname={allsubjects}\r\n                theadm={SUBStopic}\r\n                data={students}\r\n                ca_array={ca_array}\r\n                ca_score={ca_score}\r\n                caunit_array={caunit_array}\r\n                arr={arr}\r\n                classparent_subject_average={classparent_subject_average}\r\n                class_subject_average={class_subject_average}\r\n                student_classparent_subject_position_store={ranksubjectclass}\r\n                student_class_subject_position_store={ranksubjectclassunit}\r\n                student_classparent_position_store={rankclass}\r\n                student_class_position_store={rankclassunit}\r\n                student_ca_score_store={student_ca_score_store}\r\n                student_ca_score_array={student_ca_score_array}\r\n           />\r\n      \r\n\r\n\r\n  \r\n return (\r\n   <>\r\n   \r\n   <CRow  xs={12}  className=\"d-print-none\">\r\n        <CCol xs={12} md={4}>\r\n            <CFormGroup>\r\n                  <CCol xs=\"12\" md=\"12\">\r\n                  <CSelect\r\n                    className=\"my-auto\"\r\n                   custom\r\n                   value={repid}\r\n                   type='search'\r\n                   onChange={(e)=>setrepid(e.target.value)}\r\n                   placeholder=\"Select a Report\"\r\n                >\r\n                  <option>Select an action</option>\r\n                  {report_array}\r\n                  </CSelect>\r\n                  </CCol>\r\n            </CFormGroup>\r\n            </CCol>       \r\n        <CCol xs={12} md={4}>\r\n            <CCol xs={12}>\r\n                <CButton \r\n                    color=\"info\" \r\n                    block\r\n                >Submit </CButton>\r\n            </CCol>\r\n            </CCol>\r\n        <CCol xs={12} md={4}>\r\n            <CButton \r\n                onClick={()=>history.push({\r\n                pathname:`/results/${repid}/1`,\r\n                state:{\r\n                    report: parseInt(repid) > 0 ? reportarray.filter(rw=>parseInt(rw.id) === parseInt(repid))[0] : {},\r\n                    studentids : props.data1,\r\n                    students : props.data,\r\n                    sessionid : sessionid,\r\n                    termid : props.term,\r\n                    sessionid : props.session,\r\n                    classteacher : props.classteacher,\r\n                    clasz : props.clasz,\r\n                    claszparent : props.claszparent,\r\n                    activeterm : props.activeterm,\r\n                    staffid : props.user.mid,\r\n                    cas:props.cas\r\n                }\r\n            })}\r\n                color=\"success\" \r\n                block\r\n                >Report Card </CButton>\r\n        </CCol>\r\n  </CRow>\r\n       \r\n            {SUBS}\r\n        \r\n        \r\n   </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n    user:state.userReducer,\r\n    reports : state.reportReducer.reports,\r\n    studentscores : state.studentscoreReducer.studentscores,\r\n    cas:state.caReducer.cas,\r\n  })\r\n  export default connect(mapStateToProps, {\r\n    getReports,\r\n    getStudentscores,\r\n    getCas\r\n  })(StudentReportList)\r\n  \r\n","import React, { useState, useEffect }  from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory} from 'react-router-dom'\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CTabPane,\r\n    CButton\r\n  } from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { Button, Col } from 'reactstrap'\r\nimport { insertStudentca , deleteStudentca , getStudentscorecas} from './../../actions/student/studentscore'\r\nimport { updateStaffsubject} from './../../actions/staff/staffsubject';\r\n\r\nconst StudentReportList = (props) => {\r\n    let subjectid = props.subjectid;\r\n    let reportid = props.reportid;\r\n    let sessionid = props.sessionid;\r\n    let students = props.students;\r\n    let claszname = props.claszname;\r\n    let claszparentname = props.claszparentname;\r\n    let classteacher = props.classteacher;\r\n    let subjectname = props.subjectname;\r\n    let theadm = props.theadm;\r\n    let theadm1 = props.theadm1;\r\n    let caunit_array = props.caunit_array;\r\n    let ca_array = props.ca_array;\r\n    let ca_score = props.ca_score;\r\n    let arr = props.arr\r\n    let classparent_subject_average = props.classparent_subject_average\r\n    let class_subject_average = props.class_subject_average\r\n    let student_classparent_subject_position_store = props.student_classparent_subject_position_store\r\n    let student_class_subject_position_store = props.student_class_subject_position_store\r\n    let student_classparent_position_store = props.student_classparent_position_store\r\n    let student_class_position_store = props.student_class_position_store\r\n    let student_ca_score_store = props.student_ca_score_store\r\n\r\n    let keepca = {}\r\n\r\n    useEffect(() => {\r\n      let params = {\r\n        data:JSON.stringify(\r\n        {\r\n              'sessionid':sessionid,\r\n              'reportid':reportid,\r\n              'itemid':subjectid,\r\n              'idx':students,\r\n              'grp': 11\r\n        }),\r\n          cat:'studentca',\r\n          table:'accessstudentcas',\r\n          narration:'get ca scores'\r\n      }\r\n      props.getStudentscorecas(params);\r\n    }, [sessionid, reportid, subjectid, students])\r\n\r\n    const compute = (sumz, totz, id, cas, sid, cid)=>{\r\n        let sc = Array.isArray(Object.keys(cas)) &&\r\n        Object.keys(cas).includes(sid) &&  Array.isArray(Object.keys(cas[sid])) && \r\n        Object.keys(cas[sid]).includes(subjectid) && Array.isArray(Object.keys(cas[sid][subjectid])) && \r\n        Object.keys(cas[sid][subjectid]).includes(cid) ? cas[sid][subjectid][cid] : '0';\r\n        \r\n        let sums = sumz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n        let tots = totz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n        \r\n        let res = sums > 0 && tots > 0 ? (sums/tots) * ca_score[id] : 0;\r\n        if( Number(res).toFixed(1) == parseFloat(sc))\r\n        {\r\n          return <font style={{color:\"blue\"}}>{Number(res).toFixed(1)}</font>;\r\n        }else{\r\n          return <font style={{color:\"red\"}}>{Number(res).toFixed(1)}</font>;\r\n        }\r\n        \r\n        \r\n    }\r\n    const computes = (sumz, totz, id)=>{\r\n     \r\n      let sums = sumz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n      let tots = totz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n      \r\n      let res = sums > 0 && tots > 0 ? (sums/tots) * ca_score[id] : 0;\r\n      return Number(res).toFixed(1)\r\n      \r\n  }\r\n    const compute100 = (sumz, totz)=>{\r\n        let sums = sumz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n        let tots = totz.reduce((a, b)=>parseFloat(a) + parseFloat(b), 0);\r\n        \r\n        let res = sums > 0 && tots > 0 ? (sums/tots) * 100 : 0;\r\n        return Number(res).toFixed(1)\r\n    }\r\n\r\n    const openEditing = () =>{\r\n    }\r\n    const clearRecord = (data) =>{\r\n        let fd = new FormData();\r\n        fd.append('subjectid', subjectid);\r\n        fd.append('reportid', reportid);\r\n        fd.append('sessionid', sessionid);\r\n        fd.append('data', JSON.stringify(data));\r\n        fd.append('cat', 'savecadelete');\r\n        fd.append('table', 'savecadelete');\r\n        props.deleteStudentca(fd);\r\n    }\r\n    const lockEditing = (data) =>{\r\n\r\n        let fd = new FormData();\r\n        fd.append('subjectid', subjectid);\r\n        fd.append('reportid', reportid);\r\n        fd.append('sessionid', sessionid);\r\n        fd.append('data', JSON.stringify(data));\r\n        fd.append('cat', 'saveca');\r\n        fd.append('table', 'saveca');\r\n        props.insertStudentca(fd);\r\n      \r\n    }\r\n\r\n    const onActivate = (id) =>{\r\n   \r\n      let fd = new FormData();\r\n      fd.append('id', id);\r\n      fd.append('is_active', 0);\r\n      fd.append('cat', 'updates');\r\n      fd.append('sessionid', sessionid);\r\n      fd.append('table', 'accessstaffclass');\r\n      fd.append('narration', `activate or disable class ${id}`);\r\n      props.updateStaffsubject(fd);\r\n  \r\n    }\r\n\r\n    const onDeactivate = (id) =>{\r\n   \r\n      let fd = new FormData();\r\n      fd.append('id', id);\r\n      fd.append('is_active', 1);\r\n      fd.append('cat', 'updates');\r\n      fd.append('sessionid', sessionid);\r\n      fd.append('table', 'accessstaffclass');\r\n      fd.append('narration', `activate or disable class ${id}`);\r\n      props.updateStaffsubject(fd);\r\n  \r\n    }\r\n\r\n    /**\r\n     * sort position by student\r\n     * sort maxscore\r\n     */\r\n    let rank_array_classparent ={}\r\n    let total_array_classparent = {}\r\n    let avg_array_classparent = {}\r\n    student_classparent_subject_position_store.forEach(el => {\r\n        rank_array_classparent[el.studentid] = el.rank;\r\n        total_array_classparent[el.studentid] = el.score;\r\n        avg_array_classparent[el.studentid] = el.average;\r\n    });\r\n\r\n    let rank_array_class ={}\r\n    let total_array_class = {}\r\n    let avg_array_class = {}\r\n    student_class_subject_position_store.forEach(el => {\r\n        rank_array_class[el.studentid] = el.rank;\r\n        total_array_class[el.studentid] = el.score;\r\n        avg_array_class[el.studentid] = el.average;\r\n    });\r\n   \r\n\r\n    let cascored = props.studentscore && Array.isArray(props.studentscore) ? props.studentscore.filter(rw =>rw != null || rw != undefined) : []\r\n    let cascored_array = {}\r\n    cascored.forEach(ele=>{\r\n      if(Object.keys(cascored_array).includes(ele.clientid))\r\n      {\r\n        if(Object.keys(cascored_array[ele.clientid]).includes(ele.itemid))\r\n        {\r\n          if(Object.keys(cascored_array[ele.clientid][ele.itemid]).includes(ele.itemid1))\r\n          {\r\n\r\n          }else{\r\n            cascored_array[ele.clientid][ele.itemid][ele.itemid1] = ele.contact\r\n          }\r\n\r\n        }else{\r\n          cascored_array[ele.clientid][ele.itemid] = {}\r\n          cascored_array[ele.clientid][ele.itemid][ele.itemid1] = ele.contact\r\n        }\r\n\r\n      }else\r\n      {\r\n          cascored_array[ele.clientid] = {};\r\n          cascored_array[ele.clientid][ele.itemid] ={}\r\n          cascored_array[ele.clientid][ele.itemid][ele.itemid1] = ele.contact\r\n      }\r\n    })\r\n    \r\n    let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw != null || rw != undefined) : []\r\n    \r\n    let acct = data.map((row, ind)=>{\r\n      let subs= [];\r\n      let adds = [];\r\n      return <tr key={ind}>\r\n      <td className=\"text-center\">\r\n       {ind + 1}\r\n      </td>\r\n      <td>\r\n        <div><strong>{`${row.surname} ${row.firstname} ${row.middlename}`}</strong></div>\r\n      </td>\r\n      {\r\n          \r\n          Object.keys(ca_array).map((prop, ind)=>{\r\n            let sumrow = [];\r\n            let totrow = [];\r\n            return <>{Object.keys(caunit_array[prop]).map((pro, inds)=>{\r\n            if(Object.keys(arr).includes(row.id) && Object.keys(arr[row.id]).includes(caunit_array[prop][pro].id) )\r\n            {\r\n              let sh = arr[row.id][caunit_array[prop][pro].id];\r\n              let shmax = caunit_array[prop][pro].score;\r\n              sumrow.push(sh)\r\n              totrow.push(shmax)\r\n              subs.push(sh)\r\n              adds.push(shmax)\r\n              return <td className='text-center' key={inds}>{Number(sh).toFixed(1)}</td>\r\n            }else\r\n            {\r\n              return <td className='text-danger text-center'><CIcon name=\"cil-x\"/></td>\r\n            }\r\n             })}\r\n             <th className='text-center' >\r\n               {\r\n                  compute(sumrow, totrow, prop, cascored_array, row.id, prop)\r\n               }\r\n             </th>\r\n             </>\r\n         })\r\n         \r\n      }\r\n      <th className='text-center' >{compute100(subs, adds)}</th>\r\n      <th className='text-center' >{rank_array_class[row.id]} of {Object.keys(student_class_subject_position_store).length} </th>\r\n      <th className='text-center' >{rank_array_classparent[row.id]} of {Object.keys(student_classparent_subject_position_store).length}</th>\r\n      \r\n    </tr>\r\n  })\r\n\r\n    data.forEach(row=>{\r\n        if(Object.keys(arr).includes(row.id) && Object.keys(arr[row.id]).length > 0 )\r\n        {\r\n          keepca[row.id] = {};\r\n          Object.keys(ca_array).map((prop, ind)=>{\r\n            let sumrow = [];\r\n            let totrow = [];\r\n            Object.keys(caunit_array[prop]).map((pro, inds)=>{\r\n              if(Object.keys(arr).includes(row.id) && Object.keys(arr[row.id]).includes(caunit_array[prop][pro].id) )\r\n              {\r\n                let sh = arr[row.id][caunit_array[prop][pro].id];\r\n                let shmax = caunit_array[prop][pro].score;\r\n                sumrow.push(sh)\r\n                totrow.push(shmax)\r\n              }\r\n            })\r\n            keepca[row.id][prop] = computes(sumrow, totrow, prop)\r\n        })\r\n        }\r\n  })\r\n\r\n  return (\r\n   <>\r\n    <CTabPane>\r\n    <div className=\"A4\" >\r\n        <div className=\"sheet padding-5mm\" >\r\n         <CRow className='mb-5'>\r\n      \r\n   <CCol xs={12}>\r\n       <h3>{subjectname}</h3>\r\n       <h5>{claszname} Subject Average : {class_subject_average !== undefined && class_subject_average.hasOwnProperty('average') ? Number(class_subject_average.average).toFixed(1) :''}</h5>\r\n       <h5>{claszname} Population : {class_subject_average !== undefined && class_subject_average.hasOwnProperty('average') ? Number(class_subject_average.pop).toFixed(0): ''}</h5>\r\n       <h5>{claszparentname} Subject Average : {classparent_subject_average !== undefined &&  classparent_subject_average.hasOwnProperty('average') ? Number(classparent_subject_average.average).toFixed(1):''}</h5>\r\n       <h5>{claszparentname} Population : {classparent_subject_average !== undefined &&  classparent_subject_average.hasOwnProperty('average') ? Number(classparent_subject_average.pop).toFixed(0):''}</h5>\r\n  </CCol>      \r\n  <CCol>\r\n                <table width=\"100%\" border=\"solid 3px teal \" style={{borderColor:'teal'}}>\r\n                    <thead className=\"text-center\">\r\n                        <tr>\r\n                            <th rowSpan={2}>SN</th><th rowSpan={2}>FULLNAME</th>{theadm}\r\n                            <th rowSpan={2}>TOTAL<br/> (100%)</th>\r\n                            <th rowSpan={2}>RANK<br/> ARM</th>\r\n                            <th rowSpan={2}>RANK<br/> CLASS</th>\r\n                        </tr>\r\n                        <tr>\r\n                            {theadm1}\r\n                        </tr>\r\n                    </thead>\r\n                    {\r\n                        acct\r\n                    }\r\n                </table>\r\n                </CCol>\r\n                {classteacher ?\r\n                <CCol xs=\"12\" className=\"mt-5 pt-10 d-print-none\">\r\n                    <CRow>\r\n                    <CCol xs=\"4\">\r\n                      <CButton \r\n                      block\r\n                        color=\"info\" \r\n                        onClick={()=>lockEditing(keepca)}\r\n                        ><i className=\"fa fa-lock\"></i>{\" \"} Save and Lock</CButton>\r\n                    </CCol>\r\n                    <CCol xs=\"4\">\r\n                      <CButton \r\n                        block\r\n                        color=\"secondary\"\r\n                        onClick={()=>openEditing()}\r\n                        ><i className=\"fa fa-unlock\"></i>{\" \"}Open for Editing</CButton>\r\n                    </CCol>\r\n                    <CCol xs=\"4\">\r\n                      <CButton \r\n                        block\r\n                        color=\"danger\"\r\n                        onClick={()=>clearRecord(keepca)}\r\n                        >Clear All Record</CButton>\r\n                    </CCol>\r\n                    </CRow>\r\n                </CCol>:\"\"}\r\n            \r\n        </CRow>\r\n        </div>\r\n            </div>\r\n    </CTabPane>\r\n   </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  studentscore : state.studentscoreReducer.studentscoreca,\r\n  staffsubjects : state.staffsubjectReducer.staffsubjects\r\n})\r\nexport default connect(mapStateToProps, {\r\n  insertStudentca,\r\n  deleteStudentca, \r\n  getStudentscorecas,\r\n  updateStaffsubject\r\n})(StudentReportList)\r\n  \r\n","import React, { useEffect, useState }  from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory} from 'react-router-dom'\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CCardHeader,\r\n    CFormGroup,\r\n    CSelect,\r\n    CNav,\r\n    CNavLink,\r\n    CNavItem,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CTabs,\r\n    CButton,\r\n    CWidgetIcon,\r\n    CCardFooter,\r\n    CLink\r\n  } from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport ScoreReportTable from './ScoreReportTable';\r\nimport StudentReportTable from './StudentReportTable';\r\nimport {getReports} from './../../actions/setting/report';\r\nimport {getCas} from './../../actions/setting/ca';\r\nimport {getGradeunits} from './../../actions/setting/gradeunit';\r\nimport {getStudentscores} from './../../actions/student/studentscore';\r\n\r\nconst StudentReportList = (props) => {\r\n    let history = useHistory();\r\n\r\n    //PASS DATA FROM PARENT PAGE\r\n    let studentids = props.data1;\r\n    let students = props.data;\r\n    let termid = props.term;\r\n    let sessionid = props.session;\r\n    let classteacher = props.classteacher;\r\n    let clasz = props.clasz;\r\n    let claszname = props.claszname;\r\n    let claszparent = props.claszparent;\r\n    let claszparentname = props.claszparentname;\r\n    let activeterm = props.activeterm;\r\n    let staffid = props.user.mid;\r\n    \r\n\r\n    //STORE DATA IN STATES\r\n    const [repid, setrepid] = useState(0)\r\n    const [active, setActive] = useState(0)\r\n\r\n    \r\n    //GET DATA NEED FOR THIS PAGE\r\n    //ALL REPORTS FOR THE SESSION\r\n    //DEPENDS ON SESSION\r\n    useEffect(() => {\r\n        //GET ALL REPORT FOR THIS SESSION\r\n        //SO AS TO GENERATE DROPDOWNLIST\r\n        let params = {\r\n            data:JSON.stringify(\r\n            {\r\n                  'sessionid':sessionid\r\n              }),\r\n              cat:'selected',\r\n              table:'reports',\r\n              narration:'get reports'\r\n            }\r\n          props.getReports(params);\r\n\r\n          \r\n           let params1 = {\r\n                data:JSON.stringify(\r\n                {\r\n                'termid':termid,\r\n                'schoolid':sessionid\r\n                }),\r\n                cat:'dropdownca',\r\n                table:'dropdownca',\r\n                narration:'get ca'\r\n        \r\n            }\r\n            props.getCas(params1)\r\n            \r\n\r\n\r\n    }, [sessionid])\r\n\r\n    useEffect(() => {\r\n        //GET ALL REPORT FOR THE STUDENTS\r\n        let reportarrays = props.reports && Array.isArray(props.reports) ? props.reports : [];\r\n        let casss = reportarrays.filter(rw=>rw !== null && parseInt(rw.id) === parseInt(repid));\r\n        let cass = Array.isArray(casss) && casss.length > 0 ? casss[0].ca : '';\r\n        let cas = cass.length > 0 ? cass: '';\r\n        let grd = Array.isArray(casss) && casss.length > 0 ? casss[0].gradeid : '';\r\n        \r\n        if(parseInt(repid) > 0){\r\n        let params = {\r\n            data:JSON.stringify(\r\n            {\r\n                  'sessionid':sessionid,\r\n                  'reportid':repid,\r\n                  'termid':termid,\r\n                  'ids':studentids,\r\n                  'clasz':clasz,\r\n                  'claszparent':claszparent,\r\n                  'cas' : cas,\r\n\r\n              }),\r\n              cat:'selectreport',\r\n              table:'studentscore',\r\n              narration:'get reports'\r\n            }\r\n          props.getStudentscores(params);\r\n        }\r\n\r\n         let params1 = {\r\n            data:JSON.stringify(\r\n            {\r\n                  'cas' : cas,\r\n                  'schoolid' : 1\r\n            }),\r\n              cat:'dropdownca1',\r\n              table:'dropdownca',\r\n              narration:'get cas'\r\n            }\r\n          props.getCas(params1);\r\n\r\n          let params2 = {\r\n            data:JSON.stringify(\r\n            {\r\n                  'gradeid' : grd,\r\n                  'is_active':0\r\n            }),\r\n              cat:'selected',\r\n              table:'gradeunits',\r\n              narration:'get cas'\r\n            }\r\n          props.getGradeunits(params2);\r\n\r\n        \r\n        \r\n    }, [repid, studentids, claszparent, clasz])\r\n \r\n    let studentscorearray = props.studentscores && Array.isArray(props.studentscores[0]) ? props.studentscores[0] : [];\r\n    let arr = {};\r\n    let srr = {};\r\n    let allsubjects = {};\r\n    studentscorearray.forEach(ele => {\r\n        //by subjects\r\n        if(parseInt(ele.subjectid) > -1){\r\n        if(Object.keys(arr).includes(ele.subjectid))\r\n        {\r\n            if(Object.keys(arr[ele.subjectid]).includes(ele.studentid))\r\n            {\r\n                if(Object.keys(arr[ele.subjectid][ele.studentid]).includes(ele.caid))\r\n                {\r\n\r\n                }else{\r\n                    arr[ele.subjectid][ele.studentid][ele.caid] = ele.score\r\n                }\r\n\r\n            }\r\n            else{\r\n                arr[ele.subjectid][ele.studentid] = {}\r\n                arr[ele.subjectid][ele.studentid][ele.caid] = ele.score\r\n            }\r\n        }else\r\n        {\r\n            arr[ele.subjectid] = {};\r\n            arr[ele.subjectid][ele.studentid] = {}\r\n            arr[ele.subjectid][ele.studentid][ele.caid] = ele.score\r\n        }\r\n        //by students\r\n        if(Object.keys(srr).includes(ele.studentid))\r\n        {\r\n            if(Object.keys(srr[ele.studentid]).includes(ele.subjectid))\r\n            {\r\n                if(Object.keys(srr[ele.studentid][ele.subjectid]).includes(ele.caid))\r\n                {\r\n\r\n                }else{\r\n                    srr[ele.studentid][ele.subjectid][ele.caid] = ele.score\r\n                }\r\n\r\n            }\r\n            else{\r\n                srr[ele.studentid][ele.subjectid] = {}\r\n                srr[ele.studentid][ele.subjectid][ele.caid] = ele.score\r\n            }\r\n        }else\r\n        {\r\n            srr[ele.studentid] = {};\r\n            srr[ele.studentid][ele.subjectid] = {}\r\n            srr[ele.studentid][ele.subjectid][ele.caid] = ele.score\r\n        }\r\n        allsubjects[ele.subjectid] = ele.subjectname \r\n        }\r\n    });\r\n \r\n     //ARRANGE\r\n     let studentparentaveragearray = props.studentscores && Array.isArray(props.studentscores[1]) ? props.studentscores[1] : [];\r\n     let classparent_subject_average = {}\r\n     studentparentaveragearray.forEach(ele=>{\r\n         let frr = {};\r\n         frr['pop'] = ele.students;\r\n         frr['average'] = ele.avgr;\r\n         frr['maxscore'] = ele.maxscore;\r\n         frr['score'] = ele.score;\r\n         classparent_subject_average[ele.subjectid] = frr;\r\n     })\r\n     //ARRANGE\r\n     let studentclassaveragearray = props.studentscores && Array.isArray(props.studentscores[2]) ? props.studentscores[2] : [];\r\n     let class_subject_average = {}\r\n     studentclassaveragearray.forEach(ele=>{\r\n         let frr = {};\r\n         frr['pop'] = ele.students;\r\n         frr['average'] = ele.avgr;\r\n         frr['maxscore'] = ele.maxscore;\r\n         frr['score'] = ele.score;\r\n         class_subject_average[ele.subjectid] = frr;\r\n     })\r\n \r\n     //ARRANGE SUBJECT CLASS PARENT POSITION\r\n\r\n     let student_classparent_subject_position_array = props.studentscores && Array.isArray(props.studentscores[4]) ? props.studentscores[4] : [];\r\n     let student_classparent_subject_position_store = {}\r\n     let student_classparent_subject_position_stores = []\r\n     \r\n     student_classparent_subject_position_array.forEach(ele=>{\r\n         \r\n         if(Object.keys(student_classparent_subject_position_store).includes(ele.studentid))\r\n         {\r\n             if(Object.keys(student_classparent_subject_position_store[ele.studentid]).includes(ele.subjectid))\r\n             {\r\n \r\n             }else\r\n             {\r\n                 let frr = {};\r\n                 frr['score'] = parseFloat(ele.avgr);\r\n                 student_classparent_subject_position_store[ele.studentid][ele.subjectid] = frr;\r\n                 let prr = {};\r\n                 prr['score'] = parseFloat(ele.avgr);\r\n                 prr['studentid'] = ele.studentid;\r\n                 prr['subjectid'] = ele.subjectid;\r\n                 student_classparent_subject_position_stores.push(prr)\r\n             }\r\n \r\n         }else\r\n         {\r\n             let frr = {};\r\n             frr['score'] = ele.avgr;\r\n             //frr['position'] = ele.position;\r\n             student_classparent_subject_position_store[ele.studentid] = {};\r\n             student_classparent_subject_position_store[ele.studentid][ele.subjectid] = frr;\r\n             let prr = {};\r\n             prr['score'] = ele.avgr;\r\n             //prr['position'] = ele.position;\r\n             prr['studentid'] = ele.studentid;\r\n             prr['subjectid'] = ele.subjectid;\r\n             student_classparent_subject_position_stores.push(prr)\r\n         }\r\n         \r\n     })\r\n     \r\n     //ARRANGE SUBJECT CLASS PARENT POSITION\r\n     let student_class_subject_position_array = props.studentscores && Array.isArray(props.studentscores[5]) ? props.studentscores[5] : [];\r\n     let student_class_subject_position_store = {}\r\n     let student_class_subject_position_stores = []\r\n     student_class_subject_position_array.forEach(ele=>{\r\n         \r\n         if(Object.keys(student_class_subject_position_store).includes(ele.studentid))\r\n         {\r\n             if(Object.keys(student_class_subject_position_store[ele.studentid]).includes(ele.subjectid))\r\n             {\r\n \r\n             }else\r\n             {\r\n                 let frr = {};\r\n                 frr['score'] = parseFloat(ele.avgr);\r\n                 student_class_subject_position_store[ele.studentid][ele.subjectid] = frr;\r\n                 let prr = {};\r\n                 prr['score'] = parseFloat(ele.avgr);\r\n                 prr['studentid'] = ele.studentid;\r\n                 prr['subjectid'] = ele.subjectid;\r\n                student_class_subject_position_stores.push(prr)\r\n             }\r\n \r\n         }else\r\n         {\r\n             let frr = {};\r\n             frr['score'] = parseFloat(ele.avgr);\r\n             student_class_subject_position_store[ele.studentid] = {};\r\n             student_class_subject_position_store[ele.studentid][ele.subjectid] = frr;\r\n             let prr = {};\r\n             prr['score'] = parseFloat(ele.avgr);\r\n             prr['studentid'] = ele.studentid;\r\n             prr['subjectid'] = ele.subjectid;\r\n             student_class_subject_position_stores.push(prr)\r\n         }\r\n         \r\n     })\r\n \r\n     //ARRANGE CLASS PARENT POSITION\r\n     let student_classparent_position_array = props.studentscores && Array.isArray(props.studentscores[6]) ? props.studentscores[6] : [];\r\n     let student_classparent_position_store = []\r\n     student_classparent_position_array.forEach(ele=>{\r\n       \r\n             let frr = {};\r\n             frr['average'] = parseFloat(ele.avg);\r\n             frr['score'] = ele.total;\r\n             frr['subjectid'] = ele.nums;\r\n             frr['studentid'] = ele.studentid;\r\n             student_classparent_position_store.push(frr);        \r\n         \r\n     })\r\n \r\n     //ARRANGE CLASS POSITION\r\n     let student_class_position_array = props.studentscores && Array.isArray(props.studentscores[7]) ? props.studentscores[7] : [];\r\n     let student_class_position_store = []\r\n     student_class_position_array.forEach(ele=>{\r\n       \r\n             let frr = {};\r\n             frr['average'] = parseFloat(ele.avgr);\r\n             frr['score'] = ele.total;\r\n             frr['subjectid'] = ele.nums;\r\n             frr['studentid'] = ele.studentid;\r\n             student_class_position_store.push(frr);       \r\n         \r\n     })\r\n \r\n     //ARRANGE CLASS POSITION\r\n     let student_ca_score = props.studentscores && Array.isArray(props.studentscores[8]) ? props.studentscores[8] : [];\r\n     let student_ca_score_store = {}\r\n     student_ca_score.forEach(ele=>{\r\n       \r\n        if(Object.keys(student_ca_score_store).includes(ele.studentid))\r\n        {\r\n            if(Object.keys(student_ca_score_store[ele.studentid]).includes(ele.subjectid))\r\n            {\r\n                if(Object.keys(student_ca_score_store[ele.studentid][ele.subjectid]).includes(ele.caid))\r\n                {\r\n\r\n                }else\r\n                {\r\n                    student_ca_score_store[ele.studentid][ele.subjectid][ele.caid] = ele.score;\r\n                }\r\n\r\n            }else\r\n            {\r\n                student_ca_score_store[ele.studentid][ele.subjectid] = {};\r\n                student_ca_score_store[ele.studentid][ele.subjectid][ele.caid] = ele.score;\r\n            }\r\n\r\n        }else\r\n        {\r\n            student_ca_score_store[ele.studentid] = {};\r\n            student_ca_score_store[ele.studentid][ele.subjectid] = {};\r\n            student_ca_score_store[ele.studentid][ele.subjectid][ele.caid] = ele.score;\r\n        }        \r\n         \r\n     })\r\n \r\n    let reportarray = props.reports && Array.isArray(props.reports) ? props.reports : [];\r\n        let report_array = reportarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n            return <option key={ind} value={rw.id}>{rw.title}</option>\r\n    })\r\n\r\n    var ranksubjectclassunit = {};\r\n    Object.keys(allsubjects).forEach(rw=>{\r\n         let data = student_class_subject_position_stores.filter(r=>parseInt(r.subjectid) === parseInt(rw));\r\n         data.sort(function(a,b){ return b.score - a.score; });\r\n\r\n         data.forEach(function(player, i, arr) {\r\n         player.rank = i === 0 || player.score != arr[i-1].score\r\n                    ? i + 1\r\n                    : arr[i-1].rank;\r\n         });\r\n         ranksubjectclassunit[rw] = data\r\n    })\r\n\r\n    var ranksubjectclass = {};\r\n    Object.keys(allsubjects).forEach(rw=>{\r\n         let data = student_classparent_subject_position_stores.filter(r=>parseInt(r.subjectid) === parseInt(rw));\r\n         data.sort(function(a,b){ return b.score - a.score; });\r\n\r\n         data.forEach(function(player, i, arr) {\r\n         player.rank = i === 0 || player.score != arr[i-1].score\r\n                    ? i + 1\r\n                    : arr[i-1].rank;\r\n         });\r\n         ranksubjectclass[rw] = data\r\n    })\r\n    \r\n    var rankclass = {};\r\n    students.forEach(ro=>{\r\n         let rw = ro.id\r\n         let data = student_classparent_position_store.filter(r=>parseInt(r.studentid) === parseInt(rw));\r\n         data.sort(function(a,b){ return b.score - a.score; });\r\n\r\n         data.forEach(function(player, i, arr) {\r\n         player.rank = i === 0 || player.score != arr[i-1].score\r\n                    ? i + 1\r\n                    : arr[i-1].rank;\r\n         });\r\n         rankclass[rw] = data\r\n    })\r\n    \r\n    var rankclassunit = {};\r\n    students.forEach(ro=>{\r\n         let rw = ro.id\r\n         let data = student_class_position_store.filter(r=>parseInt(r.studentid) === parseInt(rw));\r\n         data.sort(function(a,b){ return b.score - a.score; });\r\n\r\n         data.forEach(function(player, i, arr) {\r\n         player.rank = i === 0 || player.score != arr[i-1].score\r\n                    ? i + 1\r\n                    : arr[i-1].rank;\r\n         });\r\n         rankclassunit[rw] = data\r\n    })\r\n    \r\n    //SET ASSESSMENT\r\n        let cas = Array.isArray(props.cas) ? props.cas : [];\r\n        let ca_array = {};\r\n        let ca_score = {};\r\n        let ca1_array = {};\r\n        let ca2_array = {};\r\n        let caunit_array = {};\r\n        cas.forEach(ele => {\r\n          if(parseInt(ele.typeid) === 1){\r\n            if(Object.keys(ca_array).includes(ele.sid))\r\n            {\r\n               //ca_array[ele.sid] = ele.cname;\r\n            }else{\r\n               ca_array[ele.sid] = ele.caabbrv;\r\n               ca_score[ele.sid] = ele.score;\r\n            }\r\n          }else if(parseInt(ele.typeid) === 2){\r\n           if(Object.keys(ca_array).includes(ele.sid))\r\n           {\r\n              //ca_array[ele.sid] = ele.cname;\r\n           }else{\r\n              ca1_array[ele.sid] = ele.caabbrv;\r\n           }\r\n          }\r\n          else if(parseInt(ele.typeid) === 3){\r\n           if(Object.keys(ca_array).includes(ele.sid))\r\n           {\r\n              //ca_array[ele.sid] = ele.cname;\r\n           }else{\r\n              ca2_array[ele.sid] = ele.caabbrv;\r\n           }\r\n          }\r\n       \r\n          if(Object.keys(caunit_array).includes(ele.sid))\r\n            {\r\n                let arr = {}\r\n                arr['id'] = ele.id;\r\n                arr['typeid'] = ele.typeid;\r\n                arr['name'] = ele.abbrv;\r\n                arr['score'] = ele.maxscore;\r\n                caunit_array[ele.sid].push(arr);\r\n            }else\r\n            {\r\n               caunit_array[ele.sid] = [];\r\n               let arr = {}\r\n               arr['id'] = ele.id;\r\n               arr['typeid'] = ele.typeid;\r\n               arr['name'] = ele.abbrv;\r\n               arr['score'] = ele.maxscore;\r\n               caunit_array[ele.sid].push(arr);\r\n            }\r\n        });\r\n\r\n\r\n        let theadm = Object.keys(ca_array).map((prop, ind)=>{\r\n                    return <th key={ind} colSpan={caunit_array[prop].length + 1}>{ca_array[prop]}</th>\r\n        })\r\n        let theadm1 = Object.keys(ca_array).map((prop, ind)=>{\r\n            return <>{Object.keys(caunit_array[prop]).map((pro, inds)=>{\r\n                return <th key={inds}>{caunit_array[prop][pro].name}<br/>{caunit_array[prop][pro].score}</th>\r\n                })}\r\n                <th >{ca_score[prop]}</th></>\r\n            })\r\n        \r\n        let SUBStopic = Object.keys(allsubjects).filter(rw=>allsubjects[rw] !== null && allsubjects[rw] !== undefined && allsubjects[rw].length > 0).map((sub, idx)=>{\r\n                return <CNavItem key={idx}>\r\n                <CNavLink>\r\n                {allsubjects[sub]}\r\n                { active === idx }\r\n                </CNavLink>\r\n            </CNavItem>\r\n        })\r\n\r\n        let SUBS = Object.keys(allsubjects).map((sub, idx)=>{\r\n           return <ScoreReportTable \r\n                key={idx}\r\n                students={studentids}\r\n                reportid={repid}\r\n                sessionid={sessionid}\r\n                classteacher={classteacher}\r\n                claszname={claszname}\r\n                claszparent={claszparent}\r\n                claszparentname={claszparentname}\r\n                subjectid={sub}\r\n                subjectname={allsubjects[sub]}\r\n                theadm={theadm}\r\n                theadm1={theadm1}\r\n                data={students}\r\n                ca_array={ca_array}\r\n                ca_score={ca_score}\r\n                caunit_array={caunit_array}\r\n                arr={arr[sub]}\r\n                classparent_subject_average={classparent_subject_average[sub]}\r\n                class_subject_average={class_subject_average[sub]}\r\n                student_classparent_subject_position_store={ranksubjectclass[sub]}\r\n                student_class_subject_position_store={ranksubjectclassunit[sub]}\r\n                student_classparent_position_store={rankclass}\r\n                student_class_position_store={rankclassunit}\r\n                student_ca_score_store={student_ca_score_store}\r\n           />\r\n       })\r\n\r\n\r\n  \r\n return (\r\n   <>\r\n   \r\n   <CRow  xs={12}  className=\"d-print-none\">\r\n        <CCol xs={12} md={4}>\r\n            <CFormGroup>\r\n                  <CCol xs=\"12\" md=\"12\">\r\n                  <CSelect\r\n                    className=\"my-auto\"\r\n                   custom\r\n                   value={repid}\r\n                   type='search'\r\n                   onChange={(e)=>setrepid(e.target.value)}\r\n                   placeholder=\"Select a Report\"\r\n                >\r\n                  <option>Select an action</option>\r\n                  {report_array}\r\n                  </CSelect>\r\n                  </CCol>\r\n            </CFormGroup>\r\n            </CCol>       \r\n        <CCol xs={12} md={4}>\r\n            <CCol xs={12}>\r\n                <CButton \r\n                    color=\"info\" \r\n                    block\r\n                >Submit </CButton>\r\n            </CCol>\r\n            </CCol>\r\n        <CCol xs={12} md={4}>\r\n            <CButton \r\n                onClick={()=>history.push({\r\n                pathname:`/results/${repid}/1`,\r\n                state:{\r\n                    report: parseInt(repid) > 0 ? reportarray.filter(rw=>parseInt(rw.id) === parseInt(repid))[0] : {},\r\n                    studentids : props.data1,\r\n                    students : props.data,\r\n                    sessionid : sessionid,\r\n                    termid : props.term,\r\n                    sessionid : props.session,\r\n                    classteacher : props.classteacher,\r\n                    clasz : props.clasz,\r\n                    claszparent : props.claszparent,\r\n                    claszname : props.claszname,\r\n                    claszparentname : props.claszparentname,\r\n                    activeterm : props.activeterm,\r\n                    staffid : props.user.mid,\r\n                    cas:props.cas\r\n                }\r\n            })}\r\n                color=\"success\" \r\n                block\r\n                >Report Card </CButton>\r\n        </CCol>\r\n  </CRow>\r\n        <CTabs activeTab={active} onActiveTabChange={idx => setActive(idx)}>\r\n        <CNav variant=\"tabs\" className=\"d-print-none\">\r\n            {SUBStopic}\r\n        </CNav>\r\n        <CTabContent>\r\n            {SUBS} \r\n        </CTabContent>\r\n        </CTabs>\r\n        \r\n   </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n    user:state.userReducer,\r\n    reports : state.reportReducer.reports,\r\n    studentscores : state.studentscoreReducer.studentscores,\r\n    cas:state.caReducer.cas,\r\n    gradeunits:state.gradeunitReducer\r\n  })\r\n  export default connect(mapStateToProps, {\r\n    getReports,\r\n    getStudentscores,\r\n    getCas,\r\n    getGradeunits,\r\n  })(StudentReportList)\r\n  \r\n","import React, { useEffect, useState }  from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory} from 'react-router-dom'\r\nimport {\r\n    CRow,\r\n    CCol,\r\n    CCardHeader,\r\n    CFormGroup,\r\n    CSelect,\r\n    CNav,\r\n    CNavLink,\r\n    CNavItem,\r\n    CTabContent,\r\n    CTabPane,\r\n    CCard,\r\n    CCardBody,\r\n    CTabs,\r\n    CButton,\r\n    CWidgetIcon,\r\n    CCardFooter,\r\n    CLink\r\n  } from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport ScoreReportTable from './ScoreReportTable';\r\nimport StudentReportTable from './StudentReportTable';\r\nimport {getReports} from './../../actions/setting/report';\r\nimport {getCas} from './../../actions/setting/ca';\r\nimport {getStudentscores} from './../../actions/student/studentscore';\r\n\r\nconst StudentReportList = (props) => {\r\n\r\n    //PASS DATA FROM PARENT PAGE\r\n    let studentids = props.data1;\r\n    let students = props.data;\r\n    let termid = props.term;\r\n    let sessionid = props.session;\r\n    let classteacher = props.classteacher;\r\n    let clasz = props.clasz;\r\n    let claszparent = props.claszparent;\r\n    let claszname = props.claszname;\r\n    let claszparentname = props.claszparentname;\r\n    let activeterm = props.activeterm;\r\n    let staffid = props.user.mid;\r\n    \r\n\r\n    //STORE DATA IN STATES\r\n    const [repid, setrepid] = useState(0)\r\n    const [active, setActive] = useState(0)\r\n\r\n    \r\n    //GET DATA NEED FOR THIS PAGE\r\n    //ALL REPORTS FOR THE SESSION\r\n    //DEPENDS ON SESSION\r\n    useEffect(() => {\r\n        //GET ALL REPORT FOR THIS SESSION\r\n        //SO AS TO GENERATE DROPDOWNLIST\r\n        let params = {\r\n            data:JSON.stringify(\r\n            {\r\n                  'sessionid':sessionid\r\n              }),\r\n              cat:'selected',\r\n              table:'reports',\r\n              narration:'get reports'\r\n            }\r\n          props.getReports(params);\r\n\r\n          \r\n           let params1 = {\r\n                data:JSON.stringify(\r\n                {\r\n                'termid':termid,\r\n                'schoolid':sessionid\r\n                }),\r\n                cat:'dropdownca',\r\n                table:'dropdownca',\r\n                narration:'get ca'\r\n        \r\n            }\r\n            props.getCas(params1)\r\n            \r\n\r\n\r\n    }, [sessionid])\r\n\r\n    useEffect(() => {\r\n        //GET ALL REPORT FOR THE STUDENTS\r\n        let reportarrays = props.reports && Array.isArray(props.reports) ? props.reports : [];\r\n        let casss = reportarrays.filter(rw=>rw !== null && parseInt(rw.id) === parseInt(repid));\r\n        let cass = Array.isArray(casss) && casss.length > 0 ? casss[0].ca : '';\r\n        let cas = cass.length > 0 ? JSON.parse(cass).join(\",\") : '';\r\n        if(parseInt(repid) > 0)\r\n        {\r\n           let params = {\r\n            data:JSON.stringify(\r\n            {\r\n                  'sessionid':sessionid,\r\n                  'reportid':repid,\r\n                  'termid':termid,\r\n                  'ids':studentids,\r\n                  'clasz':clasz,\r\n                  'claszparent':claszparent,\r\n                  'cas' : cas,\r\n\r\n              }),\r\n              cat:'selectreport',\r\n              table:'studentscore',\r\n              narration:'get reports'\r\n            }\r\n           props.getStudentscores(params);\r\n        }\r\n    }, [repid, studentids, claszparent, clasz])\r\n\r\n    //ARRANGE STUDENTS SCORES\r\n    let studentscorearray = props.studentscores && Array.isArray(props.studentscores[0]) ? props.studentscores[0] : [];\r\n    let arr = {};\r\n    let srr = {};\r\n    let allsubjects = {};\r\n    studentscorearray.forEach(ele => {\r\n        //by subjects\r\n        if(parseInt(ele.subjectid) > -1){\r\n        if(Object.keys(arr).includes(ele.subjectid))\r\n        {\r\n            if(Object.keys(arr[ele.subjectid]).includes(ele.studentid))\r\n            {\r\n                if(Object.keys(arr[ele.subjectid][ele.studentid]).includes(ele.caid))\r\n                {\r\n\r\n                }else{\r\n                    arr[ele.subjectid][ele.studentid][ele.caid] = ele.score\r\n                }\r\n\r\n            }\r\n            else{\r\n                arr[ele.subjectid][ele.studentid] = {}\r\n                arr[ele.subjectid][ele.studentid][ele.caid] = ele.score\r\n            }\r\n        }else\r\n        {\r\n            arr[ele.subjectid] = {};\r\n            arr[ele.subjectid][ele.studentid] = {}\r\n            arr[ele.subjectid][ele.studentid][ele.caid] = ele.score\r\n        }\r\n        //by students\r\n        if(Object.keys(srr).includes(ele.studentid))\r\n        {\r\n            if(Object.keys(srr[ele.studentid]).includes(ele.subjectid))\r\n            {\r\n                if(Object.keys(srr[ele.studentid][ele.subjectid]).includes(ele.caid))\r\n                {\r\n\r\n                }else{\r\n                    srr[ele.studentid][ele.subjectid][ele.caid] = ele.score\r\n                }\r\n\r\n            }\r\n            else{\r\n                srr[ele.studentid][ele.subjectid] = {}\r\n                srr[ele.studentid][ele.subjectid][ele.caid] = ele.score\r\n            }\r\n        }else\r\n        {\r\n            srr[ele.studentid] = {};\r\n            srr[ele.studentid][ele.subjectid] = {}\r\n            srr[ele.studentid][ele.subjectid][ele.caid] = ele.score\r\n        }\r\n        allsubjects[ele.subjectid] = ele.subjectname \r\n       }\r\n    });\r\n\r\n    //ARRANGE\r\n    let studentparentaveragearray = props.studentscores && Array.isArray(props.studentscores[1]) ? props.studentscores[1] : [];\r\n    let classparent_subject_average = {}\r\n    studentparentaveragearray.forEach(ele=>{\r\n        let frr = {};\r\n        frr['pop'] = ele.students;\r\n        frr['average'] = ele.avgr;\r\n        frr['maxscore'] = ele.maxscore;\r\n        frr['score'] = ele.score;\r\n        classparent_subject_average[ele.subjectid] = frr;\r\n    })\r\n    //ARRANGE\r\n    let studentclassaveragearray = props.studentscores && Array.isArray(props.studentscores[2]) ? props.studentscores[2] : [];\r\n    let class_subject_average = {}\r\n    studentclassaveragearray.forEach(ele=>{\r\n        let frr = {};\r\n        frr['pop'] = ele.students;\r\n        frr['average'] = ele.avgr;\r\n        frr['maxscore'] = ele.maxscore;\r\n        frr['score'] = ele.score;\r\n        class_subject_average[ele.subjectid] = frr;\r\n    })\r\n    //ARRANGE SUBJECT CLASS PARENT POSITION\r\n    let student_classparent_subject_position_array = props.studentscores && Array.isArray(props.studentscores[4]) ? props.studentscores[4] : [];\r\n    let student_classparent_subject_position_store = {}\r\n    let student_classparent_subject_position_stores = []\r\n    \r\n    student_classparent_subject_position_array.forEach(ele=>{\r\n        \r\n        if(Object.keys(student_classparent_subject_position_store).includes(ele.studentid))\r\n        {\r\n            if(Object.keys(student_classparent_subject_position_store[ele.studentid]).includes(ele.subjectid))\r\n            {\r\n\r\n            }else\r\n            {\r\n                let frr = {};\r\n                frr['score'] = ele.avgr;\r\n                student_classparent_subject_position_store[ele.studentid][ele.subjectid] = frr;\r\n                let prr = {};\r\n                prr['score'] = ele.avgr;\r\n                prr['studentid'] = ele.studentid;\r\n                prr['subjectid'] = ele.subjectid;\r\n                student_classparent_subject_position_stores.push(prr)\r\n            }\r\n\r\n        }else\r\n        {\r\n            let frr = {};\r\n            frr['score'] = ele.avgr;\r\n            student_classparent_subject_position_store[ele.studentid] = {};\r\n            student_classparent_subject_position_store[ele.studentid][ele.subjectid] = frr;\r\n            let prr = {};\r\n            prr['score'] = ele.avgr;\r\n            prr['studentid'] = ele.studentid;\r\n            prr['subjectid'] = ele.subjectid;\r\n            student_classparent_subject_position_stores.push(prr)\r\n        }\r\n        \r\n    })\r\n    \r\n    //ARRANGE SUBJECT CLASS PARENT POSITION\r\n    let student_class_subject_position_array = props.studentscores && Array.isArray(props.studentscores[5]) ? props.studentscores[5] : [];\r\n    let student_class_subject_position_store = {}\r\n    let student_class_subject_position_stores = []\r\n    student_class_subject_position_array.forEach(ele=>{\r\n        \r\n        if(Object.keys(student_class_subject_position_store).includes(ele.studentid))\r\n        {\r\n            if(Object.keys(student_class_subject_position_store[ele.studentid]).includes(ele.subjectid))\r\n            {\r\n\r\n            }else\r\n            {\r\n                let frr = {};\r\n                frr['score'] = ele.avgr;\r\n                student_class_subject_position_store[ele.studentid][ele.subjectid] = frr;\r\n                let prr = {};\r\n                prr['score'] = ele.avgr;\r\n                prr['studentid'] = ele.studentid;\r\n                prr['subjectid'] = ele.subjectid;\r\n               student_class_subject_position_stores.push(prr)\r\n            }\r\n\r\n        }else\r\n        {\r\n            let frr = {};\r\n            frr['score'] = ele.avgr;\r\n            student_class_subject_position_store[ele.studentid] = {};\r\n            student_class_subject_position_store[ele.studentid][ele.subjectid] = frr;\r\n            let prr = {};\r\n            prr['score'] = ele.avgr;\r\n            prr['studentid'] = ele.studentid;\r\n            prr['subjectid'] = ele.subjectid;\r\n            student_class_subject_position_stores.push(prr)\r\n        }\r\n        \r\n    })\r\n\r\n    //ARRANGE CLASS PARENT POSITION\r\n    let student_classparent_position_array = props.studentscores && Array.isArray(props.studentscores[6]) ? props.studentscores[6] : [];\r\n    let student_classparent_position_store = []\r\n    student_classparent_position_array.forEach(ele=>{\r\n      \r\n            let frr = {};\r\n            frr['average'] = ele.avg;\r\n            frr['score'] = ele.total;\r\n            frr['subjectid'] = ele.nums;\r\n            frr['studentid'] = ele.studentid;\r\n            student_classparent_position_store.push(frr);        \r\n        \r\n    })\r\n\r\n    //ARRANGE CLASS POSITION\r\n    let student_class_position_array = props.studentscores && Array.isArray(props.studentscores[7]) ? props.studentscores[7] : [];\r\n    let student_class_position_store = []\r\n    student_class_position_array.forEach(ele=>{\r\n      \r\n            let frr = {};\r\n            frr['average'] = ele.avg;\r\n            frr['score'] = ele.total;\r\n            frr['subjectid'] = ele.nums;\r\n            frr['studentid'] = ele.studentid;\r\n            student_class_position_store.push(frr);       \r\n        \r\n    })\r\n\r\n    //ARRANGE CLASS POSITION\r\n    let student_ca_score = props.studentscores && Array.isArray(props.studentscores[8]) ? props.studentscores[8] : [];\r\n    let student_ca_score_store = {}\r\n    student_ca_score.forEach(ele=>{\r\n      \r\n       if(Object.keys(student_ca_score_store).includes(ele.studentid))\r\n       {\r\n           if(Object.keys(student_ca_score_store[ele.studentid]).includes(ele.subjectid))\r\n           {\r\n               if(Object.keys(student_ca_score_store[ele.studentid][ele.subjectid]).includes(ele.caid))\r\n               {\r\n\r\n               }else\r\n               {\r\n                   student_ca_score_store[ele.studentid][ele.subjectid][ele.caid] = ele.score;\r\n               }\r\n\r\n           }else\r\n           {\r\n               student_ca_score_store[ele.studentid][ele.subjectid] = {};\r\n               student_ca_score_store[ele.studentid][ele.subjectid][ele.caid] = ele.score;\r\n           }\r\n\r\n       }else\r\n       {\r\n           student_ca_score_store[ele.studentid] = {};\r\n           student_ca_score_store[ele.studentid][ele.subjectid] = {};\r\n           student_ca_score_store[ele.studentid][ele.subjectid][ele.caid] = ele.score;\r\n       }        \r\n        \r\n    })\r\n\r\n   let reportarray = props.reports && Array.isArray(props.reports) ? props.reports : [];\r\n       let report_array = reportarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n           return <option key={ind} value={rw.id}>{rw.title}</option>\r\n   })\r\n\r\n   var ranksubjectclassunit = {};\r\n   Object.keys(allsubjects).forEach(rw=>{\r\n        let data = student_class_subject_position_stores.filter(r=>parseInt(r.subjectid) === parseInt(rw));\r\n        data.sort(function(a,b){ return b.score - a.score; });\r\n\r\n        data.forEach(function(player, i, arr) {\r\n        player.rank = i === 0 || player.score != arr[i-1].score\r\n                   ? i + 1\r\n                   : arr[i-1].rank;\r\n        });\r\n        ranksubjectclassunit[rw] = data\r\n   })\r\n\r\n   var ranksubjectclass = {};\r\n   Object.keys(allsubjects).forEach(rw=>{\r\n        let data = student_classparent_subject_position_stores.filter(r=>parseInt(r.subjectid) === parseInt(rw));\r\n        data.sort(function(a,b){ return b.score - a.score; });\r\n\r\n        data.forEach(function(player, i, arr) {\r\n        player.rank = i === 0 || player.score != arr[i-1].score\r\n                   ? i + 1\r\n                   : arr[i-1].rank;\r\n        });\r\n        ranksubjectclass[rw] = data\r\n   })\r\n   \r\n   var rankclass = {};\r\n   students.forEach(ro=>{\r\n        let rw = ro.id\r\n        let data = student_classparent_position_store.filter(r=>parseInt(r.studentid) === parseInt(rw));\r\n        data.sort(function(a,b){ return b.score - a.score; });\r\n\r\n        data.forEach(function(player, i, arr) {\r\n        player.rank = i === 0 || player.score != arr[i-1].score\r\n                   ? i + 1\r\n                   : arr[i-1].rank;\r\n        });\r\n        rankclass[rw] = data\r\n   })\r\n   \r\n   var rankclassunit = {};\r\n  \r\n   students.forEach(ro=>{\r\n        let rw = ro.id\r\n        let data = student_class_position_store.filter(r=>parseInt(r.studentid) === parseInt(rw));\r\n        data.sort(function(a,b){ return b.score - a.score; });\r\n\r\n        data.forEach(function(player, i, arr) {\r\n        player.rank = i === 0 || player.score != arr[i-1].score\r\n                   ? i + 1\r\n                   : arr[i-1].rank;\r\n        });\r\n        rankclassunit[rw] = data\r\n   })\r\n        \r\n   //SET ASSESSMENT\r\n        let cas = Array.isArray(props.cas) ? props.cas : [];\r\n        let ca_array = {};\r\n        let ca_score = {};\r\n        let ca1_array = {};\r\n        let ca2_array = {};\r\n        let caunit_array = {};\r\n        cas.forEach(ele => {\r\n          if(parseInt(ele.typeid) === 1){\r\n            if(Object.keys(ca_array).includes(ele.sid))\r\n            {\r\n               //ca_array[ele.sid] = ele.cname;\r\n            }else{\r\n               ca_array[ele.sid] = ele.caabbrv;\r\n               ca_score[ele.sid] = ele.score;\r\n            }\r\n          }else if(parseInt(ele.typeid) === 2){\r\n           if(Object.keys(ca_array).includes(ele.sid))\r\n           {\r\n              //ca_array[ele.sid] = ele.cname;\r\n           }else{\r\n              ca1_array[ele.sid] = ele.caabbrv;\r\n           }\r\n          }\r\n          else if(parseInt(ele.typeid) === 3){\r\n           if(Object.keys(ca_array).includes(ele.sid))\r\n           {\r\n              //ca_array[ele.sid] = ele.cname;\r\n           }else{\r\n              ca2_array[ele.sid] = ele.caabbrv;\r\n           }\r\n          }\r\n       \r\n          if(Object.keys(caunit_array).includes(ele.sid))\r\n            {\r\n                let arr = {}\r\n                arr['id'] = ele.id;\r\n                arr['typeid'] = ele.typeid;\r\n                arr['name'] = ele.abbrv;\r\n                arr['score'] = ele.maxscore;\r\n                caunit_array[ele.sid].push(arr);\r\n            }else\r\n            {\r\n               caunit_array[ele.sid] = [];\r\n               let arr = {}\r\n               arr['id'] = ele.id;\r\n               arr['typeid'] = ele.typeid;\r\n               arr['name'] = ele.abbrv;\r\n               arr['score'] = ele.maxscore;\r\n               caunit_array[ele.sid].push(arr);\r\n            }\r\n        });\r\n\r\n        let theadm = Object.keys(ca_array).map((prop, ind)=>{\r\n                    return <th key={ind} colSpan={caunit_array[prop].length + 1}>{ca_array[prop]}</th>\r\n        })\r\n        let theadm1 = Object.keys(ca_array).map((prop, ind)=>{\r\n            return <>{Object.keys(caunit_array[prop]).map((pro, inds)=>{\r\n                return <th key={inds}>{caunit_array[prop][pro].name}<br/>{caunit_array[prop][pro].score}</th>\r\n                })}\r\n                <th >{ca_score[prop]}</th></>\r\n            })        \r\n        let StudStopic = students.filter(rw=>rw!==null && rw!==\"null\").map((row, idx)=>{\r\n                return <CNavItem key={idx}>\r\n                <CNavLink>\r\n                {`${row.surname} ${row.firstname} ${row.middlename}`}\r\n                  { active === idx }\r\n                </CNavLink>\r\n              </CNavItem>\r\n          })   \r\n        \r\n      \r\n        let STUDENTZ = students.filter(rw=>rw!==null && rw!==\"null\").map((sub, idx)=>{\r\n        return <StudentReportTable \r\n             key={idx}\r\n             studentid={sub.id}\r\n             studentname={sub}\r\n             claszname={claszname}\r\n             claszparentname={claszparentname}\r\n             theadm={theadm}\r\n             theadm1={theadm1}\r\n             data={allsubjects}\r\n             ca_array={ca_array}\r\n             ca_score={ca_score}\r\n             caunit_array={caunit_array}\r\n             arr={srr[sub.id]}\r\n             classparent_subject_average={classparent_subject_average}\r\n             class_subject_average={class_subject_average}\r\n             student_classparent_subject_position_store={ranksubjectclass}\r\n             student_class_subject_position_store={ranksubjectclassunit}\r\n             student_classparent_position_store={rankclass[sub.id]}\r\n             student_class_position_store={rankclassunit[sub.id]}\r\n             student_ca_score_store={student_ca_score_store[sub.id]}\r\n        />\r\n    })\r\n  \r\n return (\r\n   <>\r\n   <CRow xs={12} className=\"d-print-none\" >\r\n        <CCol xs={12} md={4}  className=\"d-print-none\">\r\n            <CFormGroup>\r\n                  <CCol xs=\"12\" md=\"12\">\r\n                  <CSelect\r\n                    className=\"my-auto\"\r\n                    custom\r\n                    value={repid}\r\n                    type='search'\r\n                    onChange={(e)=>setrepid(e.target.value)}\r\n                    placeholder=\"Select a Report\"\r\n                >\r\n                  <option>Select an action</option>\r\n                  {report_array}\r\n                  </CSelect>\r\n                  </CCol>\r\n            </CFormGroup>\r\n            </CCol>\r\n        <CCol xs={12} md={4}>\r\n            <CCol xs={12}>\r\n                <CButton \r\n                    color=\"info\" \r\n                    block\r\n                >Submit </CButton>\r\n            </CCol>\r\n            </CCol>\r\n        <CCol xs={12} md={4}>\r\n        </CCol>\r\n  </CRow>\r\n        <CTabs activeTab={active} onActiveTabChange={idx => setActive(idx)}>\r\n        <CNav variant=\"tabs\" className=\"d-print-none\">\r\n            {StudStopic}\r\n        </CNav>\r\n        <CTabContent>\r\n           {STUDENTZ} \r\n        </CTabContent>\r\n        </CTabs>\r\n\r\n        \r\n   </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n    user:state.userReducer,\r\n    reports : state.reportReducer.reports,\r\n    studentscores : state.studentscoreReducer.studentscores,\r\n    cas:state.caReducer.cas,\r\n  })\r\n  export default connect(mapStateToProps, {\r\n    getReports,\r\n    getStudentscores,\r\n    getCas\r\n  })(StudentReportList)\r\n  \r\n","import React , { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getStaffsubjects, registerStaffsubject, updateStaffsubject,  deleteStaffsubject } from './../../actions/staff/staffsubject';\r\nimport { getStaffs } from './../../actions/staff/staff';\r\nimport { getSubjects } from './../../actions/setting/subject';\r\nimport moment from 'moment';\r\nimport { \r\n    CInput,\r\n    CSelect,\r\n    CFormGroup,\r\n    CLabel,\r\n    CFormText,\r\n    CAlert\r\n } from '@coreui/react';\r\nimport CIcon from '@coreui/icons-react';\r\nimport Swal from'sweetalert'\r\n\r\nconst Studentclasss = (props) => {\r\n   let claszid = props.clasz;\r\n   let termid = props.term;\r\n   let sessionid = props.session;\r\n   let groupid = 2;\r\n   let classteacher = props.classteacher;\r\n  \r\n   const [id, setId] = useState(null)\r\n   const [staffid, setstaffid] = useState(null)\r\n   const [subjectid, setsubjectid] = useState(0)\r\n   const [contact, setcontact] = useState(0)\r\n   const [subjectname, setsubjectname] = useState(\"\")\r\n   const [staffname, setstaffname] = useState(\"\")\r\n\r\n   useEffect(() => {\r\n    let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'termid':termid,\r\n            'itemid':claszid,\r\n            'sessionid':sessionid,\r\n            'grp':2\r\n        }),\r\n        cat:'staffclass',\r\n        table:'accessstaffsubject',\r\n        narration:'get staffsubjects'\r\n        }\r\n    props.getStaffsubjects(params)\r\n    \r\n  }, [termid, sessionid, claszid])\r\n\r\n   useEffect(() => {\r\n    if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n    {\r\n      \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          typeid:props.user.activeschool.typeid,\r\n          is_active:0\r\n      }),\r\n      cat:'selected',\r\n      table:'subjects',\r\n      narration:'get Subjects'\r\n     }\r\n     props.getSubjects(params);\r\n       \r\n     let params1 = {\r\n        data:JSON.stringify(\r\n        {\r\n            schoolid:props.user.activeschool.id,\r\n            is_active:0,\r\n            is_delete:0\r\n        }),\r\n        cat:'selected',\r\n        table:'allstaffs',\r\n        narration:'get staffs summary'\r\n     }\r\n     props.getStaffs(params1)\r\n    }\r\n    \r\n  }, [props.user.activeschool])\r\n\r\n  const handleSubmit = () =>{\r\n    if(parseInt(staffid) > 0)\r\n    {\r\n      let fd = new FormData();\r\n      fd.append('itemid', claszid);\r\n      fd.append('itemid1', subjectid);\r\n      fd.append('clientid', staffid);\r\n      fd.append('contact', contact);\r\n      fd.append('checker', groupid+'_'+termid+'_'+staffid+'_'+claszid+'_'+subjectid);\r\n      fd.append('table', 'accessstaffsubject');\r\n      fd.append('sessionid', sessionid);\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'updates');\r\n        props.updateStaffsubject(fd)\r\n        \r\n      }else if(termid && parseInt(termid) > 0)\r\n      {\r\n        //INSERT\r\n        fd.append('grp', groupid);\r\n        fd.append('termid', termid);\r\n        fd.append('cat', 'inserts');\r\n        props.registerStaffsubject(fd)\r\n      }\r\n      onEdit(undefined)\r\n    }\r\n  }\r\n  \r\n\r\n  let subjectarray = props.subjects && Array.isArray(props.subjects) ? props.subjects : [];\r\n  let subarray = Array.isArray(subjectarray) ? subjectarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.name}</option>\r\n  }):<option></option>\r\n \r\n  let stafarray = props.staffs && Array.isArray(props.staffs) ? props.staffs : [];\r\n  let starray = stafarray.filter(rw=>rw !== null).map((rw, ind) =>{\r\n      return <option key={ind} value={rw.id}>{rw.surname}{\" \"}{rw.firstname}{\" \"}{rw.middlename}</option>\r\n  })\r\n\r\n  const onActivate = (rw, num) =>{\r\n   \r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    fd.append('cat', 'updates');\r\n    fd.append('sessionid', sessionid);\r\n    fd.append('table', 'accessstaffclass');\r\n    fd.append('narration', `activate or disable class ${nu}`);\r\n    props.updateStaffsubject(fd);\r\n\r\n  }\r\n  const onEdit = (data) =>{\r\n    if(data !== undefined && parseInt(data.id) > 0)\r\n    {\r\n      let dt = data;\r\n      \r\n      setId(dt.id);\r\n      setstaffid(dt.clientid);\r\n      setstaffname(dt.clientname);\r\n      setsubjectid(dt.itemid1);\r\n      setsubjectname(dt.itemname1);\r\n      setcontact(dt.contact);\r\n    }else{\r\n      setId(null);\r\n      setstaffid('');\r\n      setcontact('');\r\n    }\r\n  }\r\n  const onDelete = (rw) =>{\r\n    \r\n    Swal(\"Are you sure you want to delete you will not be able to restore the data.\")\r\n    .then((value) => {\r\n      if(value === true && parseInt(rw.id) > 0)\r\n      {\r\n          let fd = new FormData();\r\n          fd.append('id', rw.id);\r\n          fd.append('sessionid', sessionid)\r\n          fd.append('table', 'accessstudentsubject')\r\n          fd.append('cat', 'deletes')\r\n          props.deleteStaffsubject(fd, rw.id);\r\n      }else{\r\n        Swal(`Not deleted`);\r\n      }\r\n      \r\n    });\r\n  }\r\n\r\nlet data = props.staffsubjects && Array.isArray(props.staffsubjects) ? props.staffsubjects.filter(rw =>rw !== null || rw !== undefined) : []\r\nlet tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{parseInt(id) > 0  && parseInt(id) === parseInt(row.id) ? <CFormGroup>\r\n                  <CSelect\r\n                      type=\"text\" \r\n                      id=\"nf-staff\" \r\n                      name=\"staff\"\r\n                      onChange={(e)=>setstaffid(e.target.value)}\r\n                      placeholder=\"\" \r\n                    >\r\n                         <option value={staffid}>{staffname}</option>\r\n                      {starray}\r\n                  </CSelect>\r\n                </CFormGroup> : row.clientname}</td>\r\n                \r\n                <td className='text-left'>\r\n                {parseInt(id) > 0  && parseInt(id) === parseInt(row.id) && classteacher ? <CFormGroup>\r\n                  <CSelect\r\n                      type=\"text\" \r\n                      id=\"nf-subject\" \r\n                      name=\"subject\"\r\n                      onChange={(e)=>setsubjectid(e.target.value)}\r\n                      placeholder=\"\" \r\n                    >\r\n                        <option value={subjectid}>{subjectname}</option>\r\n                      {subarray}\r\n                  </CSelect>\r\n                </CFormGroup> : row.itemname1}\r\n                </td>\r\n                <td className='text-center'>\r\n                {parseInt(id) > 0  && parseInt(id) === parseInt(row.id)?<CInput \r\n                      type=\"number\" \r\n                      id=\"nf-contact\" \r\n                      name=\"contactz\"\r\n                      value={contact}\r\n                      onChange={(e)=>setcontact(e.target.value)}\r\n                      placeholder=\"0\" \r\n                    />:\r\n                    row.contact}\r\n                    \r\n                    </td>\r\n                <td></td>\r\n                {parseInt(id) > 0  && parseInt(id) === parseInt(row.id)? \r\n                <td className='text-center'>\r\n                     <>\r\n                     <a style={{cursor:'pointer'}} className='btn btn-sm' onClick={handleSubmit}>Save</a>\r\n                    <a style={{cursor:'pointer'}} className='btn btn-sm' onClick={()=>onEdit({})}>Clear</a>\r\n                   \r\n                    </>\r\n                </td>: classteacher ?\r\n                <td className='text-center'> \r\n                <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>onActivate(row.id, row.is_active)}><i className={`fa ${parseInt(row.is_active) == 1 ? 'fa-lock text-danger' : 'fa-unlock text-success'} ml-2 px-2`}></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                </>\r\n                </td>:''\r\n                }\r\n              </tr>\r\n  })\r\n  \r\n  return (\r\n   <>\r\n   <h4>Manage Subject teachers <small>Assign permissions to Subject teachers so they can input scores.</small></h4>\r\n   <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\"> SN.</th>\r\n                    <th><i className='fa fa-users'></i> STAFF NAME</th>\r\n                    <th><i className='fa fa-book'></i> SUBJECT</th>\r\n                    <th><i className='fa fa-clock-o'></i> PERIODS<br/> (PER WEEK)</th>\r\n                    <th><i className='fa fa-blacboard'></i> TIMING</th>\r\n                    {classteacher ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th> : ''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 { classteacher ? <tr>\r\n                      <td>ADD</td>\r\n                      <td>\r\n                          <CSelect\r\n                      type=\"text\" \r\n                      id=\"nf-staff\" \r\n                      name=\"staff\"\r\n                      onChange={(e)=>setstaffid(e.target.value)}\r\n                      placeholder=\"\" \r\n                    >\r\n                        <option></option>\r\n                      {starray}\r\n                      </CSelect>\r\n                      </td>\r\n                      <td> <CSelect\r\n                      type=\"text\" \r\n                      id=\"nf-subject\" \r\n                      name=\"subject\"\r\n                      onChange={(e)=>setsubjectid(e.target.value)}\r\n                      placeholder=\"\" \r\n                    >\r\n                        <option></option>\r\n                      {subarray}\r\n                  </CSelect>\r\n                </td>\r\n                      <td>\r\n                      \r\n                      <CInput \r\n                      type=\"number\" \r\n                      id=\"nf-contact\" \r\n                      name=\"contactz\"\r\n                      value={contact}\r\n                      onChange={(e)=>setcontact(e.target.value)}\r\n                      placeholder=\"0\" \r\n                    />\r\n                      </td>\r\n                      <td></td>\r\n                      <td>\r\n                      <a style={{cursor:'pointer'}} className='btn btn-sm btn-info' onClick={handleSubmit}>Save</a>\r\n                      </td>\r\n                  </tr>:''}\r\n                </tbody>\r\n              </table>\r\n   </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n  subjects : state.subjectReducer.subjects,\r\n  user : state.userReducer,\r\n  staffsubjects : state.staffsubjectReducer.staffsubjects,\r\n  staffs : state.staffReducer.staffs\r\n})\r\nexport default connect(mapStateToProps, {\r\n    updateStaffsubject,\r\n    registerStaffsubject,\r\n    deleteStaffsubject,\r\n    getStaffsubjects,\r\n    getStaffs,\r\n    getSubjects\r\n  \r\n  \r\n})(Studentclasss)\r\n","import React , { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getStudentclasss, getStudentclass, registerStudentclass, updateStudentclass, deleteStudentclass } from './../../actions/student/studentclass';\r\nimport {registerStaffstudent} from './../../actions/staff/staffstudent';\r\nimport {getStudentsubjects, getStudentsubject, registerStudentsubject, updateStudentsubject, deleteStudentsubject } from './../../actions/student/studentsubject';\r\nimport { getUserTerms, getUserdropdowns } from './../../actions/user'\r\nimport { Link,  useParams } from 'react-router-dom'\r\nimport Swal from'sweetalert'\r\nimport moment from 'moment'\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CCardHeader,\r\n  CNav,\r\n  CNavLink,\r\n  CNavItem,\r\n  CTabContent,\r\n  CTabPane,\r\n  CCard,\r\n  CCardBody,\r\n  CTabs,\r\n  CButton,\r\n  CForm,\r\n  CFormGroup,\r\n  CInputCheckbox,\r\n  CInputGroup,\r\n  CSelect,\r\n  CInputGroupAppend,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CHeader,\r\n  CButtonGroup,\r\n  CCollapse,\r\n  CTooltip,\r\n} from '@coreui/react'\r\n\r\n\r\nimport CIcon from '@coreui/icons-react'\r\nimport ClassList from './ClassBioAnalysis'\r\nimport ClassBioAnalysis from './ClassBioAnalysis'\r\nimport StudentContactList from './StudentContactList'\r\nimport StudentGallery from './StudentGallery'\r\nimport StudentList from './StudentList'\r\nimport StudentFeeList from './StudentFeeList'\r\nimport Header from '../staff/Subjects/Headers';\r\nimport StudentDefault from './StudentDefault';\r\nimport StudentScoreList from './StudentScoreList';\r\nimport StudentReportList from './StudentReportList';\r\nimport StudentReportList1 from './StudentReportList1';\r\nimport StudentClassTeacher from './StudentClassTeacher';\r\nimport { getClassstaffs  } from './../../actions/setting/classstaff';\r\nimport { callError } from '../../actions/common';\r\n\r\nconst Studentclasss = (props) => {\r\n    const par = useParams()\r\n    let groupid = 4;\r\n    const [activeterm, setActiveterm] = useState(false)\r\n    const [active, setActive] = useState(0)\r\n    const [title, setTitle] = useState('Title')\r\n    const [term, setTerm] = useState(props.termz.termid)\r\n    const [session, setSession] = useState(props.termz.sessionid)\r\n    const [clasz, setClasz] = useState(0)\r\n    const [claszname, setclaszname] = useState('')\r\n    const [claszparentname, setclaszparentname] = useState('')\r\n    const [claszparent, setClaszparent] = useState(0)\r\n    const [studentdata, setStudentdata] = useState('')\r\n    const [sides, setSides] = useState(false)\r\n    const [search, setsearch] = useState('')\r\n    const [dates, setdates] = useState(moment(new Date()).format('YYYY-MM-DD'))\r\n\r\n    \r\n    //CONFIRM IF ACTIVE TERM\r\n    useEffect(() => {\r\n       if(parseInt(term) === parseInt(props.termz.termid))\r\n       {\r\n        setActiveterm(true)\r\n       }else{\r\n        setActiveterm(false)\r\n       }\r\n      return () => {\r\n        setActiveterm(false)\r\n      }\r\n    }, [term, props.termz.termid])\r\n    \r\n    useEffect(() => {\r\n        let params = {\r\n          data:JSON.stringify(\r\n          {\r\n            'termid':term,\r\n            'itemid':clasz,\r\n            'sessionid':session,\r\n            'grp':groupid\r\n          }),\r\n          cat:'studentclass',\r\n          table:'accessstudentclassfull',\r\n          narration:'get all student classs'\r\n      }\r\n        props.getStudentclasss(params)\r\n\r\n        let dt = props.dropdowns && Array.isArray(props.dropdowns) ? props.dropdowns : [[], []];\r\n        \r\n        let dt0 ='';\r\n        let dt1 ='';\r\n        let title ='None | No Data'\r\n        if(dt.length > 0)\r\n        {\r\n            dt0 = dt[0].filter(rw=>parseInt(rw.id) === parseInt(term));\r\n            dt1 = dt[1].filter(rw=>parseInt(rw.id) === parseInt(clasz));\r\n            let dtn0 = Array.isArray(dt0) && dt0.length > 0 ? dt0[0].name : 'Select term';\r\n            let dtn1 = Array.isArray(dt1) && dt1.length > 0 ? dt1[0].name : 'Select class';\r\n            let dtn2 = Array.isArray(dt1) && dt1.length > 0 ? dt1[0].caname : 'None';\r\n            \r\n            title = dtn0+\" | \"+dtn1\r\n            setclaszparentname(dtn2)\r\n            setclaszname(dtn1)\r\n        }\r\n        \r\n        setTitle(title);\r\n        \r\n      }, [term, clasz])\r\n    \r\n    useEffect(() => {\r\n    let params2 = {\r\n      data:JSON.stringify(\r\n      {\r\n            'termid':term,\r\n            'sessionid':session,\r\n            'itemid':clasz,\r\n            'grp':1\r\n        }),\r\n        cat:'staffclass',\r\n        table:'accessstaffclass',\r\n        narration:'get classstaffs'\r\n      }\r\n    props.getClassstaffs(params2);\r\n  }, [dates, clasz, session, term])\r\n\r\n    useEffect(() => {\r\n    //load dropdowns\r\n    let did = props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0 ? props.user.activeschool.id :'null'\r\n    let tid = props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('typeid') && parseInt(props.user.activeschool.typeid) > 0 ? props.user.activeschool.typeid :'null'\r\n    \r\n    let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':did,\r\n          'typeid':tid\r\n      }),\r\n        cat:'dropdowns',\r\n        table:'access',\r\n        narration:'get all dropdowns'\r\n      }\r\n      props.getUserdropdowns(params)\r\n    let params1 = {\r\n        data:JSON.stringify(\r\n        {\r\n            'schoolid':did\r\n        }),\r\n        cat:'accessterms',\r\n        table:'access',\r\n        narration:'get current term'\r\n        }\r\n        props.getUserTerms(params1)\r\n      \r\n  }, [props.user.mid, props.user.activeschool.id, props.user.activeschool.typeid ])\r\n  \r\n      let dt = props.dropdowns && Array.isArray(props.dropdowns) && props.dropdowns.length > 0 ? props.dropdowns : [[], [], [], []];\r\n      let dt0 ='';\r\n      let dt1 ='';\r\n      let dt2 ='';\r\n      let dt3 ='';\r\n      if(dt.length > 0)\r\n      {\r\n         dt0 = dt[0].map((prop, ind)=>{\r\n        return <option key={ind}  value={prop.termid}>{prop.name}</option>;\r\n        });\r\n        dt1 = dt[1].map((prop, ind)=>{\r\n        return <option key={ind}  value={prop.id}>{prop.name}</option>;\r\n        });\r\n        dt2 = dt[2].map((prop, ind)=>{\r\n        return <option key={ind}  value={prop.id}>{prop.name}</option>;\r\n        });\r\n        dt3 = dt[0].map((prop, ind)=>{\r\n        return <option key={ind} value={JSON.stringify(prop)}>{prop.name}</option>;\r\n        });\r\n      }\r\n\r\n    const placeStudent = (students) =>{\r\n      setStudentdata(students);\r\n    }\r\n  \r\n   let len = 5;\r\n   let subject = [];\r\n   const loadStudent = () =>{\r\n  \r\n    if(parseInt(studentdata.id) > 0 && parseInt(clasz) > 0){\r\n         let fd = new FormData();\r\n         fd.append('itemid', clasz);\r\n         fd.append('itemid1', 0);\r\n         fd.append('contact', 0);\r\n         fd.append('clientid', studentdata.id);\r\n         fd.append('checker', groupid+'_'+term+'_'+studentdata.id+'_'+clasz);\r\n         fd.append('table', 'accessstudentclass');\r\n         fd.append('sessionid', session);\r\n        \r\n           //INSERT\r\n        fd.append('grp', groupid);\r\n        fd.append('termid', term);\r\n        fd.append('cat', 'inserts');\r\n        props.registerStudentclass(fd)\r\n    }else\r\n    {\r\n      callError('No Student of Class selected')\r\n    }\r\n          \r\n   }\r\n   const placeStudentSubject = (subject) =>{\r\n   /**\r\n    * classunitid\r\n    * termid\r\n    * subjectid\r\n    */\r\n    let fd = new FormData();\r\n    fd.append('claszid', clasz);\r\n    fd.append('termid', term);\r\n    fd.append('subjectid', subject);\r\n    fd.append('sessionid', session);\r\n    fd.append('staffid', props.user.mid);\r\n    fd.append('grp', groupid);\r\n    \r\n    fd.append('table', 'accessstudentclass');\r\n    fd.append('cat', 'insertsubject');\r\n    props.registerStaffstudent(fd)\r\n     \r\n   }\r\n   const changeClasz=(e)=>{\r\n     setClasz(e)\r\n      let dt = props.dropdowns && Array.isArray(props.dropdowns) ? props.dropdowns : [[], []];\r\n          let dt0 ='';\r\n          let dtn0  = 0;\r\n          if(dt.length > 0)\r\n          {\r\n              dt0 = dt[1].filter(rw=>parseInt(rw.id) === parseInt(e));\r\n              dtn0 = Array.isArray(dt0) && dt0.length > 0 ? dt0[0].sid : 0;\r\n          }\r\n          setClaszparent(dtn0)\r\n    \r\n   }\r\n   const changeTerm =(e)=>{\r\n      setTerm(e)\r\n      let dt = props.dropdowns && Array.isArray(props.dropdowns) ? props.dropdowns : [[], []];\r\n        let dt0 ='';\r\n        let dtn0  = 0;\r\n        if(dt.length > 0)\r\n        {\r\n            dt0 = dt[0].filter(rw=>parseInt(rw.termid) === parseInt(e));\r\n            dtn0 = Array.isArray(dt0) && dt0.length > 0 ? dt0[0].sessionid : 0;\r\n        }\r\n        setSession(dtn0)\r\n   }\r\n   const onRemove =(id)=>{\r\n        Swal(\"Are you sure you want to delete this information, You will not be able to restore the data.\")\r\n       .then((value) => {\r\n         if(value == true && parseInt(id) > 0)\r\n         {\r\n             let fd = new FormData();\r\n             fd.append('id', id);\r\n             fd.append('sessionid', session)\r\n             fd.append('table', 'accessstudentsubject')\r\n             fd.append('cat', 'deletes')\r\n             props.deleteStudentclass(fd, id);\r\n         }else{\r\n           Swal(`Not deleted`);\r\n         }\r\n         \r\n       });\r\n     \r\n   }\r\n\r\nlet staff_available = props.classstaff.classstaffs && Array.isArray(props.classstaff.classstaffs)  && props.classstaff.classstaffs.length > 0? props.classstaff.classstaffs.filter(rw=>rw !== null || rw !== \"null\" || rw !== undefined).filter(element =>element !== null && parseInt(element.clientid) === parseInt(props.user.mid)):[];\r\nlet classteacher = Array.isArray(staff_available) && staff_available.length > 0 ? true : false;\r\n   \r\nlet dataq = props.studentclasss.studentclasss && Array.isArray(props.studentclasss.studentclasss) ? props.studentclasss.studentclasss.filter(rw =>rw !== null || rw !== undefined) : []\r\nlet data = dataq;\r\n\r\nif(search.length > 0 && search !== undefined)\r\n{\r\n  let datas = dataq.filter(rw=>rw.surname.toLowerCase().includes(search.toLowerCase()) \r\n  || rw.firstname.toLowerCase().includes(search.toLowerCase()) \r\n  || rw.middlename.toLowerCase().includes(search.toLowerCase())\r\n  || rw.admission_no.toLowerCase().includes(search.toLowerCase())\r\n  )\r\n  data = datas;\r\n}\r\n\r\nlet d1 = data.filter(rw=> rw !== null && rw !== undefined).map((p, i)=>p.id);\r\nlet data1 = d1.join(',')\r\n\r\n\r\nlet redirectAttendance = (clasz) =>{\r\n    window.open(process.env.PUBLIC_URL+`#/attendance_student/${clasz}`)\r\n}\r\n  return (\r\n    <>\r\n    <CRow xs={12}  className=\"d-print-none\">\r\n      <CCol  xs=\"12\" md=\"12\"   className=\"d-print-none\">\r\n        {active === 0 ?\r\n      <CCard xs=\"12\" md=\"12\">\r\n        <CCardHeader>\r\n          <CRow  className='mt-2 m-2' >\r\n                <CCol  md={12} >\r\n                  <CForm action=\"\" method=\"post\" >\r\n                  <CRow xs={12} >\r\n                  <CCol  >\r\n                    <CRow>\r\n                    <CCol xs='12' sm='4' md='5' lg='5'  className=\"ml-0\">\r\n                      <CFormGroup row>\r\n                      <CInputGroup>\r\n                          <CInputGroupPrepend>\r\n                          <CInputGroupText>Select Term</CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <CSelect \r\n                            custom \r\n                            size=\"md\" \r\n                            name=\"term\" \r\n                            id=\"term\"\r\n                            onChange={(e)=>changeTerm(e.target.value)}\r\n                            >\r\n                            <option value=\"0\">Select Term</option>\r\n                            {dt0}\r\n                          </CSelect>\r\n                        </CInputGroup>\r\n                      </CFormGroup>\r\n                    </CCol>\r\n                    <CCol  xs='12' sm='4' md='4' lg='4' className=\"ml-0\" >\r\n                      <CFormGroup row>\r\n                      <CInputGroup>\r\n                          <CInputGroupPrepend>\r\n                          <CInputGroupText>Select Class</CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                      <CSelect \r\n                          custom \r\n                          size=\"md\" \r\n                          name=\"clasz\" \r\n                          id=\"clasz\"\r\n                          value={clasz}\r\n                          onChange={(e)=>changeClasz(e.target.value)}\r\n                          >\r\n                            <option value=\"0\">Select Class</option>\r\n                            {dt1}\r\n                          </CSelect>\r\n                      </CInputGroup>\r\n                      </CFormGroup>\r\n                      </CCol>\r\n                    <CCol xs='12' sm='3' md='3' lg='3' className=\"ml-0\" >\r\n                      <CFormGroup className=\"\">\r\n                      <Link \r\n                          type=\"submit\" \r\n                          className=\"btn btn-success  btn-sm\"\r\n                          color=\"primary\"\r\n                          onClick={loadStudent}\r\n                          >\r\n                            <CIcon name=\"cil-cloud-download\"/></Link>\r\n                      </CFormGroup>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CCol>\r\n                  <CCol  xs=\"2\" md=\"2\" >\r\n                    \r\n                  {parseInt(term) > 0 && parseInt(clasz) > 0 ?\r\n                  <CTooltip\r\n                    content={`Add a student to this class`}\r\n                  >\r\n                <CButton \r\n                    data-target='#formz' \r\n                    data-toggle=\"collapse\" \r\n                    color=\"primary\"\r\n                    size='sm'\r\n                    onClick={()=>setSides(prev=>!prev)}\r\n                    className=\"float-right\">\r\n                  <CIcon name=\"cil-user-plus\"/>\r\n                </CButton></CTooltip>:''}\r\n                \r\n                \r\n                </CCol>\r\n          \r\n                  </CRow>\r\n                  </CForm>\r\n                </CCol>\r\n                 </CRow>\r\n          <CCollapse show={sides}>\r\n          \r\n          <Header \r\n            len={len}\r\n            subject={subject}\r\n            studentdata={studentdata}\r\n            goBack={props.goBack}\r\n            placeStudent={placeStudent}\r\n            loadStudent={loadStudent}\r\n            setStudentdata={(pr)=>setStudentdata(pr)}\r\n          />\r\n          \r\n          </CCollapse>\r\n        </CCardHeader>\r\n      </CCard>     \r\n      :\"\"}</CCol>\r\n    </CRow>\r\n    <CRow >\r\n    <CCol xs=\"12\" md=\"12\" className=\"mb-4\">\r\n        <CCard>\r\n          <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"10\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">{title}</h4>\r\n              <div className=\"small text-muted\">{props.user.activeschool.name}</div>\r\n            </CCol>\r\n            <CCol sm=\"2\">\r\n            <CTooltip content={`Set Attendance date`}>\r\n              <CButton\r\n                    data-target='#formz' \r\n                    data-toggle=\"collapse\" \r\n                    color=\"primary\"\r\n                    className=\"float-right\"\r\n                    onClick={()=>redirectAttendance(clasz)}\r\n                    >\r\n                  <CIcon name=\"cil-calendar\"/>\r\n              </CButton>\r\n            </CTooltip>\r\n\r\n            </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CTabs activeTab={active} onActiveTabChange={idx => setActive(idx)}>\r\n              <CNav  className=\"d-print-none\" variant=\"tabs\">\r\n              <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-settings\"/>\r\n                    { active === 0 && ' Setting'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n               <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-chart-pie\"/>\r\n                    { active === 1 && ' Chart'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-calculator\" />\r\n                    { active === 2 && ' Biodata'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-map\" />\r\n                    { active === 3 && ' Next of Kin'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <i className='fa fa-image'></i>\r\n                    { active === 4 && ' Gallery'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                  <i className='fa fa-money'></i>\r\n                    { active === 5 && ' Fees'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-user\"/>\r\n                    { active === 6 && ' Subject Teachers'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-notes\"/>\r\n                    { active === 7 && ' Subject Report '}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-badge\"/>\r\n                    { active === 8 && ' Student Report'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n                <CNavItem>\r\n                  <CNavLink>\r\n                    <CIcon name=\"cil-spreadsheet\"/>\r\n                    { active === 9 && ' Spreadsheet'}\r\n                  </CNavLink>\r\n                </CNavItem>\r\n              </CNav>\r\n              <CTabContent>\r\n              \r\n                <CTabPane>\r\n                  <StudentDefault \r\n                    term={term}\r\n                    clasz={clasz}\r\n                    session={session}\r\n                    onRemove={(e)=>onRemove(e)}\r\n                    setsearch={(e)=>setsearch(e)} \r\n                    dateactive={dates} \r\n                    data1={data1}\r\n                    data={data}\r\n                    activeterm={activeterm}\r\n                    setDates={(e)=>setdates(e)}\r\n                    classteacher={classteacher}\r\n                    placeStudentSubject={(e)=>placeStudentSubject(e)}\r\n                   />\r\n                  </CTabPane>\r\n                <CTabPane>\r\n                <ClassBioAnalysis  data={data}/>\r\n                </CTabPane>\r\n                <CTabPane>\r\n                <StudentList  data={data}/>\r\n                </CTabPane>\r\n                <CTabPane>\r\n                   <StudentContactList  data={data}/>\r\n                </CTabPane>\r\n                <CTabPane>\r\n                    <StudentGallery data={data} />\r\n                </CTabPane>\r\n                <CTabPane>\r\n                    <StudentFeeList \r\n                      termid={term} \r\n                      claszparentid={claszparent} \r\n                      sessionid={session} \r\n                      data={data} \r\n                      data1={data1} \r\n                      classteacher={classteacher}\r\n                    />\r\n                </CTabPane>\r\n                <CTabPane>\r\n                    <StudentClassTeacher \r\n                      term={term}\r\n                      clasz={clasz}\r\n                      session={session}\r\n                      dateactive={dates} \r\n                      data1={data1}\r\n                      data={data}\r\n                      activeterm={activeterm}\r\n                      classteacher={classteacher}\r\n                      claszparentid={claszparent} \r\n                    />\r\n                </CTabPane>\r\n                <CTabPane>\r\n                    <StudentReportList \r\n                      term={term}\r\n                      clasz={clasz}\r\n                      session={session}\r\n                      dateactive={dates} \r\n                      data1={data1}\r\n                      data={data}\r\n                      activeterm={activeterm}\r\n                      classteacher={classteacher}\r\n                      claszparent={claszparent}\r\n                      claszparentname={claszparentname}\r\n                      claszname={claszname}\r\n\r\n                    />\r\n                </CTabPane>\r\n                <CTabPane>\r\n                    <StudentReportList1 \r\n                      term={term}\r\n                      clasz={clasz}\r\n                      session={session}\r\n                      dateactive={dates} \r\n                      data1={data1}\r\n                      data={data}\r\n                      activeterm={activeterm}\r\n                      classteacher={classteacher}\r\n                      claszparent={claszparent} \r\n                      claszparentname={claszparentname}\r\n                      claszname={claszname}\r\n                    />\r\n                </CTabPane>\r\n                <CTabPane>\r\n                    <StudentScoreList \r\n                      term={term}\r\n                      clasz={clasz}\r\n                      session={session}\r\n                      dateactive={dates} \r\n                      data1={data1}\r\n                      data={data}\r\n                      activeterm={activeterm}\r\n                      classteacher={classteacher}\r\n                      claszparentid={claszparent}\r\n                      claszparentname={claszparentname}\r\n                      claszname={claszname} \r\n                    />\r\n                </CTabPane>\r\n              </CTabContent>\r\n            </CTabs>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    studentclasss : state.studentclassReducer,\r\n    dropdowns : state.userReducer.dropdowns,\r\n    termz:state.userReducer.activeterm,\r\n    user:state.userReducer,\r\n    classstaff:state.classstaffReducer\r\n  })\r\n  export default connect(mapStateToProps, {\r\n    getStudentclasss,\r\n    getStudentclass,\r\n    registerStudentclass,\r\n    updateStudentclass,\r\n    deleteStudentclass,\r\n    getClassstaffs,\r\n    getStudentsubjects,\r\n    getStudentsubject,\r\n    registerStudentsubject,\r\n    updateStudentsubject,\r\n    deleteStudentsubject,\r\n    registerStaffstudent,\r\n    getUserdropdowns,\r\n    getUserTerms\r\n  })(Studentclasss)\r\n  \r\n"],"sourceRoot":""}