{"version":3,"sources":["views/setting/Skill.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/staff/staff.js","actions/setting/clasz.js","actions/setting/ca.js"],"names":["connect","state","cas","caReducer","terms","termReducer","claszs","claszReducer","staffs","staffReducer","school","schoolReducer","dropdowns","getStaffs","getCas","getCa","registerCa","updateCa","deleteCa","getClaszs","props","termid","useParams","term","useHistory","useLocation","search","match","useState","collapse","setCollapse","id","setId","dts","setDts","namez","setNamez","abbrv","setAbbrv","useEffect","params1","data","JSON","stringify","cat","table","narration","parseInt","dt","name","onReset","deparr","filter","rw","termname","length","tabl","Array","isArray","undefined","map","row","ind","key","className","color","size","onClick","cid","sm","style","textTransform","data-target","data-toggle","e","preventDefault","show","xl","action","method","htmlFor","type","defaultValue","onChange","target","value","placeholder","fd","FormData","append","_slicedToArray","arr","i","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","path","API_PATH_STAFF","params","dispatch","getState","token","MAIN_TOKEN","STAFF_LOADING","axios","get","axiosConfig","then","res","STAFF_GET_MULTIPLE","payload","catch","STAFF_LOADING_ERROR","getStaffAll","STAFF_GET_ALL","searchStaff","STAFF_GET_SEARCH","birthday","STAFF_GET_BIRTHDAY","getStaff","STAFF_GET_ONE","deleteStaff","POST","STAFF_DELETE_SUCCESS","STAFF_DELETE_FAIL","registerStaff","post","axiosConfig1","STAFF_REGISTER_SUCCESS","STAFF_REGISTER_FAIL","updateStaff","STAFF_UPDATE_SUCCESS","STAFF_UPDATE_FAIL","API_PATH_SETTING","CLASZ_LOADING","CLASZ_GET_MULTIPLE","CLASZ_LOADING_ERROR","getClasz","CLASZ_GET_ONE","deleteClasz","CLASZ_DELETE_SUCCESS","CLASZ_DELETE_FAIL","registerClasz","CLASZ_REGISTER_SUCCESS","CLASZ_REGISTER_FAIL","updateClasz","CLASZ_UPDATE_SUCCESS","CLASZ_UPDATE_FAIL","CA_LOADING","CA_GET_MULTIPLE","CA_LOADING_ERROR","CA_GET_ONE","CA_DELETE_SUCCESS","CA_DELETE_FAIL","CA_REGISTER_SUCCESS","CA_REGISTER_FAIL","CA_UPDATE_SUCCESS","CA_UPDATE_FAIL"],"mappings":"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","file":"static/js/34.0deb9027.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getCas, getCa, registerCa, updateCa, deleteCa} from './../../actions/setting/ca';\r\nimport {getClaszs} from './../../actions/setting/clasz';\r\nimport {getStaffs} from './../../actions/staff/staff';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CCollapse,\r\n  CFormText,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n  CSelect,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CInputGroup,\r\n  CInputGroupAppend,\r\n  CInputGroupPrepend\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Ca = (props) => {\r\n  const termid = useParams().term\r\n  const groupid = 3;\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [dts, setDts] = useState('')\r\n  const [namez, setNamez] = useState()\r\n  const [abbrv, setAbbrv] = useState()\r\n  \r\n  const toggle = (e) => {\r\n    setCollapse(!collapse)\r\n    e.preventDefault()\r\n  }\r\n//GET CAS PER SCHOOL\r\n  useEffect(() => {\r\n    let params1 = {\r\n      data:JSON.stringify(\r\n      {\r\n          'termid': termid,\r\n          'typeid': groupid,\r\n      }),\r\n      cat:'selected',\r\n      table:'cas',\r\n      narration:'get staff term ca'\r\n    }\r\n    props.getCas(params1);\r\n    \r\n  }, [termid, groupid, props.school.id])\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(id && parseInt(id) > 0)\r\n    {\r\n      let dt = dts;\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n    }else{\r\n      setNamez('');\r\n      setAbbrv('');\r\n    }\r\n    \r\n  }, [id])\r\n\r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onActivate = (rw, num) =>{\r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    props.updateCa(fd);\r\n  }\r\n  const onReset = () =>setId(null);\r\n  const onClose = () =>setCollapse(false);\r\n\r\n  const handleSubmit = () =>{\r\n    if(parseInt(termid) > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('table', 'cas');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateCa(fd)\r\n        \r\n      }else if(termid && parseInt(termid) > 0)\r\n      {\r\n        //INSERT\r\n        fd.append('typeid', groupid);\r\n        fd.append('termid', termid);\r\n        fd.append('cat', 'insert');\r\n        props.registerCa(fd)\r\n      }\r\n      onReset()\r\n    }\r\n  }\r\n  \r\n  \r\n  let deparr = props.dropdowns[0].filter(rw =>parseInt(rw.id) === parseInt(termid) && parseInt(rw.id) > 0);\r\n  let termname = deparr.length > 0 ? deparr[0].name : 'None';\r\n  \r\n  let data = props.cas.cas && Array.isArray(props.cas.cas) ? props.cas.cas.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n  let tabl = data.filter(rw=>rw !== null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td className='text-left'>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                <td className='text-center'>\r\n                <CDropdown className=\"m-0 btn-group\">\r\n                  <CDropdownToggle color=\"success\" size=\"sm\">\r\n                  <i className='fa fa-gear'></i> Action\r\n                  </CDropdownToggle>\r\n                  <CDropdownMenu>\r\n                    <CDropdownItem onClick={()=>onEdit(row)} >Edit</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onDelete(row.cid, row)}>Delete</CDropdownItem>\r\n                    <CDropdownDivider />\r\n                    <CDropdownItem>Another Action</CDropdownItem>\r\n                  </CDropdownMenu>\r\n                </CDropdown>\r\n                </td>\r\n              </tr>\r\n  })\r\n  return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n            <h4 id=\"traffic\" className=\"card-title mb-0\">{termname} : <small>Skills Assessment</small></h4>\r\n              <div className=\"small text-muted\" style={{textTransform:'capitalize'}}>{props.school.name}</div>\r\n            </CCol>\r\n            <CCol sm=\"7\" className=\"d-md-block\">\r\n              <CButton \r\n                  data-target='#formz' \r\n                  data-toggle=\"collapse\" \r\n                  color=\"primary\" \r\n                  onClick={toggle}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-plus'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\"> SN.</th>\r\n                    <th><i className='fa fa-list text-center'></i> SKILL NAME</th>\r\n                    <th><i className='fa fa-bullseye text-center'></i> ABBRV</th>\r\n                    <th><i className='fa fa-gear'></i> ACTION</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n        <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Skills</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-namez\">Name </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-namez\" \r\n                      name=\"namez\"\r\n                      defaultValue={namez}\r\n                      onChange={(e)=>setNamez(e.target.value)}\r\n                      placeholder=\"First Continious Assessment\" \r\n                    />\r\n                  <CFormText className=\"help-block\">set skills name</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-abbrv\">Abbreviation </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-abbrv\" \r\n                      name=\"abbrv\"\r\n                      defaultValue={abbrv}\r\n                      onChange={(e)=>setAbbrv(e.target.value)}\r\n                      placeholder=\"CA1\" \r\n                    />\r\n                  <CFormText className=\"help-block\">abbreviate name</CFormText>\r\n                </CFormGroup>\r\n                \r\n                </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n      </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  cas : state.caReducer,\r\n  terms : state.termReducer.terms,\r\n  claszs : state.claszReducer.claszs,\r\n  staffs : state.staffReducer.staffs,\r\n  school : state.schoolReducer.school,\r\n  dropdowns : state.schoolReducer.dropdowns\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getStaffs,\r\n  getCas,\r\n  getCa,\r\n  registerCa,\r\n  updateCa,\r\n  deleteCa,\r\n  getClaszs\r\n})(Ca)\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    STAFF_GET_ONE,\r\n    STAFF_GET_MULTIPLE,\r\n    STAFF_GET_ALL,\r\n    STAFF_GET_BIRTHDAY,\r\n    STAFF_GET_SEARCH,\r\n    STAFF_REGISTER_SUCCESS,\r\n    STAFF_REGISTER_FAIL,\r\n    STAFF_LOADING,\r\n    STAFF_LOADING_ERROR,\r\n    STAFF_UPDATE_SUCCESS,\r\n    STAFF_UPDATE_FAIL,\r\n    STAFF_DELETE_SUCCESS,\r\n    STAFF_DELETE_FAIL\r\n} from \"./../../types/staff/staff\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'staffs';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFF \r\nexport const getStaffs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STAFF \r\nexport const getStaffAll = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                      \r\n                dispatch({\r\n                    type: STAFF_GET_ALL,\r\n                    payload: res.data\r\n                 })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                   type : STAFF_LOADING_ERROR,\r\n                   payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const searchStaff = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_SEARCH,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const birthday = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_BIRTHDAY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET SINGLE STAFF \r\nexport const getStaff = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFF_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFF DELETE\r\nexport const deleteStaff = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFF REGISTER\r\nexport const registerStaff = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFF UPDATE\r\nexport const updateStaff = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    CLASZ_GET_ONE,\r\n    CLASZ_GET_MULTIPLE,\r\n    CLASZ_REGISTER_SUCCESS,\r\n    CLASZ_REGISTER_FAIL,\r\n    CLASZ_LOADING,\r\n    CLASZ_LOADING_ERROR,\r\n    CLASZ_UPDATE_SUCCESS,\r\n    CLASZ_UPDATE_FAIL,\r\n    CLASZ_DELETE_SUCCESS,\r\n    CLASZ_DELETE_FAIL\r\n} from \"../../types/setting/clasz\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'claszs';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CLASZ \r\nexport const getClaszs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : CLASZ_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CLASZ_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CLASZ_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CLASZ \r\nexport const getClasz = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CLASZ_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CLASZ DELETE\r\nexport const deleteClasz = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CLASZ REGISTER\r\nexport const registerClasz = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CLASZ UPDATE\r\nexport const updateClasz = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    CA_GET_ONE,\r\n    CA_GET_MULTIPLE,\r\n    CA_REGISTER_SUCCESS,\r\n    CA_REGISTER_FAIL,\r\n    CA_LOADING,\r\n    CA_LOADING_ERROR,\r\n    CA_UPDATE_SUCCESS,\r\n    CA_UPDATE_FAIL,\r\n    CA_DELETE_SUCCESS,\r\n    CA_DELETE_FAIL\r\n} from \"../../types/setting/ca\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'cas';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CA \r\nexport const getCas = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : CA_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CA_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CA_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CA \r\nexport const getCa = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CA_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CA DELETE\r\nexport const deleteCa = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CA REGISTER\r\nexport const registerCa = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CA UPDATE\r\nexport const updateCa = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n"],"sourceRoot":""}