{"version":3,"sources":["views/staff/SearchDashboard2.js","views/fee/FeeForm.js","views/fee/FeeTable.js","views/fee/Fee.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/setting/Stage/Header.js","actions/staff/staff.js","actions/student/student.js","actions/student/studentfee.js","views/staff/StaffDashboardMenu.js","views/staff/SearchDashboard.js","views/staff/SearchDashboard1.js","actions/setting/fee.js","actions/setting/account.js","views/staff/StaffDashboardSession1.js","views/staff/StaffDashboardDefault.js"],"names":["connect","state","result","studentReducer","user","userReducer","searchStudent","props","useState","term","setTerm","clasz","setClasz","useEffect","undefined","Array","isArray","length","params","data","JSON","stringify","activeschool","id","cat","table","narration","dat","map","prop","index","key","color","onClick","studentz","active","xs","className","src","process","photo","height","alt","class","onError","e","target","onerror","style","name","employment_no","size","value","onChange","placeholder","display","position","zIndex","width","onMouseLeave","fees","feeReducer","accounts","accountReducer","users","studentfee","studentfeeReducer","studentsinglefees","registerStudentfee","updateStudentfee","getAccounts","getFees","getStudentfeesSingle","sid","setId","studentid","setStudentid","termid","setTermid","amount","setAmount","accountid","setAccountid","feeid","setFeeid","datepaid","setDatepaid","student","setStudent","parseInt","rowid","schoolid","hasOwnProperty","is_active","params1","activeterm","sessionid","dt","dropdowns","ind","fearray","filter","rw","acarray","sm","md","action","method","row","htmlFor","val","custom","type","defaultValue","block","mt","marray","ar","fd","FormData","append","mid","handleClose","backgroundColor","prp","amt","Intl","NumberFormat","currency","feename","format","studentfees","getStudentfees","getStudentfee","deleteStudentfee","useHistory","tabl","padding","studentname","accountname","staffname","editer","cursor","onEdit","onDelete","title","submenu","collapse","setCollapse","dts","setDts","show","onReset","onClose","StaffDashboardDefault","icon","school","data-target","data-toggle","_slicedToArray","arr","i","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","Header","history","content","goBack","disabled","toggle","path","API_PATH_STAFF","getStaffs","dispatch","getState","token","MAIN_TOKEN","STAFF_LOADING","axios","get","axiosConfig","then","res","STAFF_GET_MULTIPLE","payload","catch","STAFF_LOADING_ERROR","getStaffAll","STAFF_GET_ALL","searchStaff","STAFF_GET_SEARCH","birthday","STAFF_GET_BIRTHDAY","getStaff","STAFF_GET_ONE","deleteStaff","POST","STAFF_DELETE_SUCCESS","STAFF_DELETE_FAIL","registerStaff","post","axiosConfig1","STAFF_REGISTER_SUCCESS","STAFF_REGISTER_FAIL","updateStaff","STAFF_UPDATE_SUCCESS","STAFF_UPDATE_FAIL","API_PATH_SETTING","getStudents","STUDENT_LOADING","STUDENT_GET_MULTIPLE","STUDENT_LOADING_ERROR","STUDENT_GET_SEARCH","getStudent","STUDENT_GET_ONE","deleteStudent","STUDENT_DELETE_SUCCESS","STUDENT_DELETE_FAIL","registerStudent","STUDENT_REGISTER_SUCCESS","STUDENT_REGISTER_FAIL","updateStudent","STUDENT_UPDATE_SUCCESS","STUDENT_UPDATE_FAIL","STUDENTFEE_LOADING","STUDENTFEE_GET_MULTIPLE","STUDENTFEE_LOADING_ERROR","getStudentfeeSummary","STUDENTFEE_GET_SUMMARY","STUDENTFEE_GET_SINGLE","STUDENTFEE_GET_ONE","STUDENTFEE_DELETE_SUCCESS","STUDENTFEE_DELETE_FAIL","STUDENTFEE_REGISTER_SUCCESS","STUDENTFEE_REGISTER_FAIL","STUDENTFEE_UPDATE_SUCCESS","STUDENTFEE_UPDATE_FAIL","setStudentfee","STUDENTFEE_SET_LOAD","STUDENTFEE_SET_SUCCESS","STUDENTFEE_SET_FAIL","Dashboard","setSchool","dt0","dt1","dt3","sch","schools","lg","changeSchool","parse","changeTerm","to","staffReducer","href","admission_no","FEE_LOADING","FEE_GET_MULTIPLE","FEE_LOADING_ERROR","getFee","FEE_GET_ONE","deleteFee","FEE_DELETE_SUCCESS","FEE_DELETE_FAIL","registerFee","FEE_REGISTER_SUCCESS","FEE_REGISTER_FAIL","updateFee","FEE_UPDATE_SUCCESS","FEE_UPDATE_FAIL","ACCOUNT_LOADING","ACCOUNT_GET_MULTIPLE","ACCOUNT_LOADING_ERROR","getAccount","ACCOUNT_GET_ONE","deleteAccount","ACCOUNT_DELETE_SUCCESS","ACCOUNT_DELETE_FAIL","registerAccount","ACCOUNT_REGISTER_SUCCESS","ACCOUNT_REGISTER_FAIL","updateAccount","ACCOUNT_UPDATE_SUCCESS","ACCOUNT_UPDATE_FAIL","toggleMenu","activeTerm","termReducer","getUserDatas","getUserSchools","getUserTerms","getUserdropdowns","settSchool","settTerm","showmenu","setShowmenu","did","myschools","join","mySchoolData","prev","StaffDashboardMenu"],"mappings":"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","file":"static/js/26.80f511c9.chunk.js","sourcesContent":["\r\nimport React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { searchStudent } from './../../actions/student/student'\r\nimport {  \r\n    CCol, \r\n    CRow,\r\n    CFormGroup,\r\n    CInput,\r\n    CListGroup,\r\n    CListGroupItem,\r\n    CCard\r\n    \r\n} from '@coreui/react';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n  const [term, setTerm] = useState();\r\n  const [clasz, setClasz] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(props.result !== undefined && Array.isArray(props.result))\r\n    {\r\n      setClasz(props.result)\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [props.result])\r\n\r\n  useEffect(() => {\r\n    if(term !== undefined && term.length > 2)\r\n    {\r\n      let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'search':term,\r\n            'schoolid': props.user.activeschool.id\r\n        }),\r\n        cat:'selected',\r\n        table:'studentsearch',\r\n        narration:`get all schools for access control`\r\n      }\r\n      props.searchStudent(params);\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [term, props.user.activeschool.id])\r\n\r\n\r\n  let dat = clasz.map((prop, index)=>{\r\n    return <CListGroupItem key={index} color='secondary' onClick={()=>props.studentz(prop)} active>\r\n        <CRow>\r\n        <CCol xs='2' className='m-2'>\r\n            <img\r\n               src={process.env.REACT_APP_SERVER_URL + props.photo} \r\n               height=\"30px\"\r\n               alt=\"profile-image\" \r\n               class=\"profile\"\r\n               onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL +  '/icons/profile_1.png'} }\r\n               />\r\n        </CCol>\r\n        <CCol style={{color:'black'}}>\r\n        <strong style={{color:'black'}}>{props.name}</strong><br/>\r\n        <small style={{color:'black'}}>{props.employment_no}</small>\r\n        </CCol>\r\n      </CRow>\r\n      </CListGroupItem>\r\n  })\r\n  \r\nreturn (\r\n    <>\r\n              <CRow xs={12} >\r\n                <CCol xs={12}>\r\n                <CFormGroup >\r\n                  <CInput\r\n                    size=\"md\"\r\n                    className='w-100'\r\n                    value={term}\r\n                    onChange={(e)=>setTerm(e.target.value)}\r\n                    placeholder=' Student search...'\r\n                    \r\n                    />     \r\n                </CFormGroup>\r\n                <CCard className=\"mt-1\" style={{display:'block', position:'absolute', zIndex:'101'}}>\r\n                <CListGroup style={{width:'300px'}} onMouseLeave={()=>setClasz([])}>\r\n                  {dat}\r\n                 </CListGroup>\r\n                </CCard>\r\n                </CCol>\r\n              </CRow>\r\n             \r\n             \r\n              \r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  result:state.studentReducer.result,\r\n  user : state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {searchStudent})(Dashboard)","import React , { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { registerStudentfee, updateStudentfee,  getStudentfeesSingle, deleteStudentfee } from './../../actions/student/studentfee';\r\nimport { getAccounts } from './../../actions/setting/account';\r\nimport { getFees } from './../../actions/setting/fee';\r\nimport SearchStudent from './../staff/SearchDashboard2';\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CCardHeader,\r\n  CCard,\r\n  CCardBody,\r\n  CButton,\r\n  CFormGroup,\r\n  CInput,\r\n  CSelect,\r\n  CLabel,\r\n  CCardFooter,\r\n  CForm\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst Studentfees = (props) => {\r\n    const sid = props.sid\r\n    const [id, setId] = useState(null)\r\n    \r\n    //EDUCATION\r\n    const [studentid, setStudentid] = useState(null)\r\n    const [termid, setTermid] = useState(null)\r\n    const [sessionid, setSessionid] = useState(null)\r\n    const [amount, setAmount] = useState(0)\r\n    const [accountid, setAccountid] = useState()\r\n    const [feeid, setFeeid] = useState()\r\n    const [datepaid, setDatepaid] = useState()\r\n    const [student, setStudent] = useState()\r\n\r\n    useEffect(() => {\r\n      if(parseInt(props.rowid) > 0)\r\n      {\r\n        let data = props.data; \r\n        setId(data.id)\r\n        setStudentid(data.studentid)\r\n        setStudentid(data.schoolid)\r\n        setAmount(data.amount)\r\n        setTermid(data.termid)\r\n        setAccountid(data.accountid)\r\n        setDatepaid(data.datepaid)\r\n      }\r\n    }, [props.rowid])\r\n\r\n    useEffect(() => {\r\n   \r\n        if(props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0)\r\n        {\r\n          \r\n         let params = {\r\n          data:JSON.stringify(\r\n          {\r\n              //'schoolid':props.user.activeschool.id\r\n              is_active:0\r\n          }),\r\n          cat:'selected',\r\n          table:'accounts',\r\n          narration:'get accounts'\r\n         }\r\n         props.getAccounts(params)\r\n\r\n         let params1 = {\r\n            data:JSON.stringify(\r\n            {\r\n                //'schoolid':props.user.activeschool.id\r\n                is_active:0\r\n            }),\r\n            cat:'selected',\r\n            table:'fees',\r\n            narration:'get feess'\r\n           }\r\n           props.getFees(params1)\r\n        }\r\n        \r\n      }, [props.user.activeschool])\r\n    \r\n    useEffect(() => {\r\n        if(props.user.activeterm !== undefined && props.user.activeterm.hasOwnProperty('id') && parseInt(props.user.activeterm.id) > 0 && student !== undefined && student.hasOwnProperty('id') && parseInt(student.id) > 0)\r\n        { \r\n         let params = {\r\n          data:JSON.stringify(\r\n          {\r\n              'sessionid':props.user.activeterm.sessionid,\r\n              'studentid':student.id\r\n          }),\r\n          cat:'studentfees',\r\n          table:'studentfees',\r\n          narration:'get studentfees'\r\n          }\r\n          props.getStudentfeesSingle(params)\r\n        }\r\n        \r\n      }, [props.user.activeterm, student]) \r\n    \r\n      const handleSubmit = () =>{\r\n        let mt = props.user !== undefined && props.user.dropdowns && Array.isArray(props.user.dropdowns) ? props.user.dropdowns : [[], []];\r\n        let marray = '';\r\n        let ar = 0;\r\n         if(mt.length > 0)\r\n         {\r\n            marray = mt[0].filter(rw=>rw.termid === termid);\r\n            ar = marray && Array.isArray(marray)  && marray.length > 0 ? marray[0].sessionid : null;\r\n        }\r\n        \r\n            let fd = new FormData();\r\n            fd.append('studentid', studentid);\r\n            fd.append('amount', amount);\r\n            fd.append('termid', termid);\r\n            fd.append('datepaid', datepaid);\r\n            fd.append('sessionid', ar);\r\n            fd.append('schoolid', props.user.activeschool.id)\r\n            fd.append('accountid', accountid);\r\n            fd.append('feeid', feeid);\r\n            fd.append('table', 'studentfees');\r\n\r\n            if(id && parseInt(id) > 0)\r\n            {\r\n                fd.append('id', id);\r\n                fd.append('cat', 'updatefee');\r\n                fd.append('narration', 'Fees Payment Update');\r\n                props.updateStudentfee(fd)\r\n            }else\r\n            {\r\n                fd.append('cat', 'insertfee');\r\n                fd.append('narration', 'Fees Payment');\r\n                fd.append('staffid', props.user.mid);\r\n                props.registerStudentfee(fd)  \r\n            }\r\n        \r\n\r\n    }\r\n\r\n    const onStudent= (val) =>{\r\n        setStudent(val)\r\n        setStudentid(val.id)\r\n    }\r\n    \r\n    const changefeeid= (e) =>{\r\n        setFeeid(e.target.value)\r\n    }\r\n    const changeaccountid= (e) =>{\r\n        setAccountid(e.target.value)\r\n    }\r\n    const changetermid= (e) =>{\r\n        let v = e.target.value;\r\n        //GET SESSION\r\n\r\n        setTermid(v)\r\n        setSessionid()\r\n    }\r\n    \r\nlet dt = props.user.dropdowns && Array.isArray(props.user.dropdowns) ? props.user.dropdowns : [[], []];\r\n let temarray ='';\r\n \r\n  if(dt.length > 0)\r\n  {\r\n     temarray = dt[0].map((prop, ind)=>{\r\n    return <option key={ind}  value={prop.termid}>{prop.name}</option>;\r\n    });\r\n}\r\n\r\n\r\nlet fearray = props.fees && props.fees!== undefined && Array.isArray( props.fees)? props.fees.filter(rw=>rw !== null && rw !== undefined).map((rw, ind) =>{\r\n    return <option key={ind} value={rw.id}>{rw.name}</option>\r\n}): ''\r\n\r\nlet acarray = props.accounts && props.accounts !== undefined && Array.isArray( props.accounts)  ? props.accounts.filter(rw=>rw !== null && rw !== undefined).map((rw, ind) =>{\r\n  return <option key={ind} value={rw.id}>{rw.name}</option>\r\n}): ''\r\n\r\nlet { name, photo} = student || ''\r\n\r\n  return (\r\n    <>\r\n    <CRow className='align-center mx-auto d-flex '  sm={12}>\r\n    <CCol sm=\"6\" md=\"6\" className='mx-auto'>\r\n                    <CCard>\r\n                      <CCardHeader>\r\n                        <h4>PAY FEES : {parseInt(id) > 0 ? 'Edit':'Add'}</h4>\r\n                      </CCardHeader>\r\n                        <CCardBody>\r\n                        <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\r\n                            <CFormGroup row> \r\n                                <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"studentid\">Student<i className='text-danger'>*</i></CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">   \r\n                                    <SearchStudent studentz={(rw)=>onStudent(rw)}  />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            {/* <CFormGroup row> \r\n                                <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"termid\">Term<i className='text-danger'>*</i></CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\">  \r\n                                <CSelect \r\n                                        custom \r\n                                        id=\"termid\" \r\n                                        onChange={changetermid} \r\n                                        placeholder=\"Select Fee\"\r\n                                    >\r\n                                        <option></option>\r\n                                        {temarray}\r\n                                    </CSelect>\r\n                                </CCol>\r\n                            </CFormGroup> */}\r\n                            <CFormGroup row> \r\n                                <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"feeid\">Fee<i className='text-danger'>*</i></CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\"> \r\n                                <CSelect \r\n                                        custom \r\n                                        id=\"feeid\" \r\n                                        onChange={changefeeid} \r\n                                        placeholder=\"Select Fee\"\r\n                                    >\r\n                                        <option></option>\r\n                                        {fearray}\r\n                                    </CSelect>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row> \r\n                                <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"accountid\">Account</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\"> \r\n                                <CSelect \r\n                                    custom \r\n                                    id=\"accountid\" \r\n                                    placeholder=\"Select Account\"\r\n                                    onChange={changeaccountid} \r\n                                        \r\n                                    >\r\n                                    <option></option>\r\n                                    {acarray}\r\n                                    </CSelect>\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row> \r\n                                <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"amount\">Date Paid</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\"> \r\n                                <CInput \r\n                                        id=\"date_paid\" \r\n                                        type='date'\r\n                                        defaultValue={datepaid}\r\n                                        placeholder=\"\"\r\n                                        onChange={(e)=>setDatepaid(e.target.value)} \r\n                                        />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                            <CFormGroup row> \r\n                                <CCol md=\"3\">\r\n                                <CLabel htmlFor=\"amount\">Amount Paid</CLabel>\r\n                                </CCol>\r\n                                <CCol xs=\"12\" md=\"9\"> \r\n                                <CInput \r\n                                        id=\"amount\" \r\n                                        type='text'\r\n                                        defaultValue={amount}\r\n                                        placeholder=\"0000.00\"\r\n                                        onChange={(e)=>setAmount(e.target.value)} \r\n                                        />\r\n                                </CCol>\r\n                            </CFormGroup>\r\n                        </CForm> \r\n                        </CCardBody>\r\n                        <CCardFooter>\r\n                            <CButton block type=\"submit\" size=\"sm\" color=\"primary\" onClick={handleSubmit}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n                            <CButton block type=\"button\" size=\"sm\" color=\"danger\" onClick={()=>props.handleClose()}><CIcon name=\"cil-ban\" /> Close</CButton><br/>\r\n                            </CCardFooter>\r\n                    </CCard>\r\n                    </CCol>\r\n                    <CCol sm=\"6\" md=\"6\" className='mx-auto'>\r\n                        <CCard className='h-100'>\r\n                            <CCardBody>\r\n                                <CRow xs={12} style={{backgroundColor:'red'}} className=\"text-center d-flex justify-contents-center align-items-center m-auto\" >\r\n                                    <CCol>\r\n                                    <img\r\n                                        src={process.env.REACT_APP_SERVER_URL + photo}\r\n                                        height='100px'\r\n                                        alt=\"profile-image\" \r\n                                        onError={(e)=>{e.target.onerror=null; e.target.src='/icons/profile_1.png'} }\r\n                                    />\r\n                                    </CCol>\r\n                                    <CCol>\r\n                                    <h4 style={{color:'white'}}>{name}</h4>\r\n                                    </CCol>\r\n                                    \r\n                                </CRow>\r\n                                <CRow className=\"text-center d-flex m-auto p-auto align-items-center\">\r\n                                    <table>\r\n                                        {\r\n                                            props.studentfee.map((prp, ind)=>{\r\n                                                let amt = new Intl.NumberFormat(undefined,{style:'currency', currency:'NGR'})\r\n                                                return <tr key={ind}>\r\n                                                    <td>{prp.datepaid}</td>\r\n                                                    <td>{prp.feename}</td>\r\n                                                    <td>{amt.format(prp.amount)}</td>\r\n                                                </tr>\r\n                                            })\r\n                                        }\r\n                                        \r\n                                    </table>\r\n                                   \r\n                                </CRow>\r\n                                <CRow>\r\n                                    \r\n                                </CRow>\r\n\r\n                            </CCardBody>\r\n                        </CCard>\r\n                    </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    user : state.userReducer,\r\n    fees : state.feeReducer.fees,\r\n    accounts : state.accountReducer.accounts,\r\n    users : state.userReducer,\r\n    studentfee : state.studentfeeReducer.studentsinglefees\r\n  })\r\n  export default connect(mapStateToProps, {\r\n    registerStudentfee,\r\n    updateStudentfee,\r\n    getAccounts,\r\n    getFees,\r\n    getStudentfeesSingle\r\n    \r\n  })(Studentfees)\r\n  \r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getStudentfees, getStudentfee, registerStudentfee, updateStudentfee, deleteStudentfee} from './../../actions/student/studentfee';\r\nimport { useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Studentfee = (props) => {\r\n  const history = useHistory()\r\n \r\n  let data = props.data && Array.isArray(props.data) ? props.data.filter(rw =>rw !== null || rw !== undefined) : []\r\n  let tabl = data.filter(rw=>rw != null).map((row, ind)=>{\r\n      return <tr key={ind} style={{padding:'2px'}}>\r\n                <td style={{padding:'2px'}}  className='text-center'>{ind + 1}</td>\r\n                <td style={{padding:'2px'}}>{row.datepaid}</td>\r\n                <td style={{padding:'2px'}}>{row.studentname}</td>\r\n                <td style={{padding:'2px'}} className='text-center'>{row.amount}</td>\r\n                <td style={{padding:'2px'}} className='text-center'>{row.accountname}</td>\r\n                <td style={{padding:'2px'}} className='text-center'>{row.staffname}</td>\r\n               <td style={{padding:'2px'}} className='text-center'> \r\n                    {props.editer === true ?\r\n                     <>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onEdit(row)}><i className='fa fa-edit ml-2 px-2'></i></a>\r\n                    <a style={{cursor:'pointer'}} onClick={()=>props.onDelete(row)}><i className='fa fa-remove ml-2 px-2 text-danger'></i></a>\r\n                    </>:\"\"}\r\n                </td>\r\n              </tr>\r\n  })\r\n  return (\r\n\r\n          <table className=\"table table-hover table-dark table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\" >\r\n                  <tr>\r\n                    <th className=\"text-center\" title=\"Transaction ID\">TID</th>\r\n                    <th><i className='fa fa-list'></i> Date Paid</th>\r\n                    <th><i className='fa fa-list'></i> Students</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i>Amount</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i>Account</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-text'></i>Recorded By</th>\r\n                    { props.editer === true  || (props.submenu !== undefined && props.submenu.length > 0) ? <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>:''}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n         \r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  studentfees : state.studentfeeReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getStudentfees,\r\n  getStudentfee,\r\n  registerStudentfee,\r\n  updateStudentfee,\r\n  deleteStudentfee\r\n})(Studentfee)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getStudentfees, updateStudentfee, deleteStudentfee} from './../../actions/student/studentfee';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CRow,\r\n  CCollapse,\r\n  CCardHeader,\r\n  CButton\r\n} from '@coreui/react'\r\nimport StudentfeeForm from'./FeeForm'\r\nimport StudentfeeTable from'./FeeTable'\r\nimport Header from './../setting/Stage/Header';\r\nimport StaffDashboardDefault from '../staff/StaffDashboardDefault';\r\n\r\n\r\nconst Studentfee = (props) => {\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState({})\r\n  const [started, setStarted] = useState()\r\n  const [ended, setEnded] = useState()\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse)\r\n  }\r\n\r\n  //GET STUDENTFEES PER SCHOOL\r\n  useEffect(() => {\r\n    if(props.user.activeterm !== undefined && props.user.activeterm.hasOwnProperty('id') && parseInt(props.user.activeterm.id) > 0)\r\n    { \r\n     let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'sessionid':props.user.activeterm.sessionid\r\n      }),\r\n      cat:'studentfees',\r\n      table:'studentfees',\r\n      narration:'get studentfees'\r\n      }\r\n      props.getStudentfees(params)\r\n    }\r\n    \r\n  }, [props.user.activeterm])\r\n\r\n  \r\n  const onEdit = (dt) =>{\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  \r\n \r\n\r\n  const onReset = () =>{\r\n    setId(null);\r\n    setDts({});\r\n  }\r\n  const onClose = () =>{\r\n    setCollapse(false)\r\n  }\r\n \r\n  let data = props.studentfees.studentfees && Array.isArray(props.studentfees.studentfees) ? props.studentfees.studentfees.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n   return (\r\n     <>\r\n     <CCollapse show={collapse}>\r\n            <StudentfeeForm \r\n                id={id}\r\n                data={dts}\r\n                onReset={onReset}\r\n                onClose={onClose}\r\n            />\r\n        </CCollapse>\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <StaffDashboardDefault />\r\n              <CCardHeader>\r\n          <CRow>\r\n          <CCol xs={2} sm=\"1\">\r\n                <img\r\n                    src={process.env.PUBLIC_URL + props.icon}\r\n                    height='40px'\r\n                />\r\n          </CCol>\r\n            <CCol xs={6} sm=\"7\">\r\n            <h4 id=\"traffic\" className=\"card-title mb-0\">{props.title}</h4>\r\n            <div className=\"small text-muted\">{props.school != undefined && props.school.hasOwnProperty('name') && props.school.name ? props.school.name: <i>No school active</i>}</div>\r\n            </CCol>\r\n            <CCol xs={4} sm=\"4\" className=\"d-md-block\">\r\n              <CButton \r\n                  data-target='#formz' \r\n                  data-toggle=\"collapse\" \r\n                  color=\"primary\" \r\n                  onClick={()=>toggle()}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-plus'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n</CCardHeader>\r\n         <CCardBody className='table-responsive'>\r\n            <StudentfeeTable  \r\n                data={data}\r\n                title={'Fees Payment'}\r\n                editer={true}\r\n                onEdit={(rw)=>onEdit(rw)}\r\n                onDelete={(rw)=>onDelete(rw)}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        \r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  studentfees : state.studentfeeReducer,\r\n  user:state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getStudentfees,\r\n  updateStudentfee,\r\n  deleteStudentfee\r\n})(Studentfee)\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CTooltip\r\n} from '@coreui/react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n  const history = useHistory() \r\n   return (\r\n    <CCardHeader>\r\n          <CRow>\r\n          <CCol xs={2} sm=\"1\">\r\n                <img\r\n                    src={process.env.PUBLIC_URL + props.icon}\r\n                    height='40px'\r\n                />\r\n          </CCol>\r\n            <CCol xs={6} sm=\"7\">\r\n            <h4 id=\"traffic\" className=\"card-title mb-0\">{props.title}</h4>\r\n            <div className=\"small text-muted\">{props.school != undefined && props.school.hasOwnProperty('name') && props.school.name ? props.school.name: <i>No school active</i>}</div>\r\n            </CCol>\r\n            <CCol xs={4} sm=\"4\" className=\"d-md-block\">\r\n              <CButtonGroup className=\"float-right\">\r\n                <CTooltip content=\"Click to go back\">\r\n              <CButton\r\n                color=\"secondary\" \r\n                onClick={()=>history.goBack()}\r\n                \r\n              ><i className='fa fa-backward'></i></CButton></CTooltip>\r\n              <CTooltip content=\"Add new record\">\r\n              <CButton \r\n                  disabled={props.editer === false ? true : false}\r\n                  data-target='#formz' \r\n                  data-toggle=\"collapse\" \r\n                  color=\"primary\" \r\n                  onClick={()=>props.toggle()}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-plus'></i>\r\n              </CButton></CTooltip>\r\n              </CButtonGroup>\r\n            </CCol>\r\n          </CRow>\r\n</CCardHeader>)\r\n}\r\n\r\nexport default Header\r\n","import axios from 'axios';\r\nimport {\r\n    STAFF_GET_ONE,\r\n    STAFF_GET_MULTIPLE,\r\n    STAFF_GET_ALL,\r\n    STAFF_GET_BIRTHDAY,\r\n    STAFF_GET_SEARCH,\r\n    STAFF_REGISTER_SUCCESS,\r\n    STAFF_REGISTER_FAIL,\r\n    STAFF_LOADING,\r\n    STAFF_LOADING_ERROR,\r\n    STAFF_UPDATE_SUCCESS,\r\n    STAFF_UPDATE_FAIL,\r\n    STAFF_DELETE_SUCCESS,\r\n    STAFF_DELETE_FAIL\r\n} from \"./../../types/staff/staff\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'staffs';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFF \r\nexport const getStaffs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STAFF \r\nexport const getStaffAll = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                      \r\n                dispatch({\r\n                    type: STAFF_GET_ALL,\r\n                    payload: res.data\r\n                 })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                   type : STAFF_LOADING_ERROR,\r\n                   payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const searchStaff = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_SEARCH,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const birthday = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_BIRTHDAY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET SINGLE STAFF \r\nexport const getStaff = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFF_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFF DELETE\r\nexport const deleteStaff = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFF REGISTER\r\nexport const registerStaff = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFF UPDATE\r\nexport const updateStaff = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STUDENT_GET_ONE,\r\n    STUDENT_GET_MULTIPLE,\r\n    STUDENT_GET_SEARCH,\r\n    STUDENT_REGISTER_SUCCESS,\r\n    STUDENT_REGISTER_FAIL,\r\n    STUDENT_LOADING,\r\n    STUDENT_LOADING_ERROR,\r\n    STUDENT_UPDATE_SUCCESS,\r\n    STUDENT_UPDATE_FAIL,\r\n    STUDENT_DELETE_SUCCESS,\r\n    STUDENT_DELETE_FAIL\r\n} from \"./../../types/student/student\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'students';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL STUDENT \r\nexport const getStudents = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : STUDENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENT \r\nexport const searchStudent = params => (dispatch, getState) => {\r\n   \r\n    dispatch({type : STUDENT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENT_GET_SEARCH,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STUDENT \r\nexport const getStudent = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STUDENT DELETE\r\nexport const deleteStudent = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENT REGISTER\r\nexport const registerStudent = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STUDENT UPDATE\r\nexport const updateStudent = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    STUDENTFEE_GET_ONE,\r\n    STUDENTFEE_GET_MULTIPLE,\r\n    STUDENTFEE_GET_SUMMARY,\r\n    STUDENTFEE_GET_SINGLE,\r\n    STUDENTFEE_REGISTER_SUCCESS,\r\n    STUDENTFEE_REGISTER_FAIL,\r\n    STUDENTFEE_LOADING,\r\n    STUDENTFEE_LOADING_ERROR,\r\n    STUDENTFEE_UPDATE_SUCCESS,\r\n    STUDENTFEE_SET_SUCCESS,\r\n    STUDENTFEE_SET_FAIL,\r\n    STUDENTFEE_SET_LOAD,\r\n    STUDENTFEE_UPDATE_FAIL,\r\n    STUDENTFEE_DELETE_SUCCESS,\r\n    STUDENTFEE_DELETE_FAIL\r\n} from \"./../../types/student/studentfee\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL STUDENTFEE \r\nexport const getStudentfees = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTFEE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTFEE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTFEE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENTFEE \r\nexport const getStudentfeeSummary = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTFEE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTFEE_GET_SUMMARY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTFEE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STUDENTFEE \r\nexport const getStudentfeesSingle = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STUDENTFEE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STUDENTFEE_GET_SINGLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STUDENTFEE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE STUDENTFEE \r\nexport const getStudentfee = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STUDENTFEE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STUDENTFEE DELETE\r\nexport const deleteStudentfee = (params, id) => (dispatch, getState) =>{\r\n    axios.post(path, params, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTFEE_DELETE_SUCCESS,\r\n                payload: id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTFEE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STUDENTFEE REGISTER\r\nexport const registerStudentfee = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTFEE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTFEE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STUDENTFEE UPDATE\r\nexport const updateStudentfee = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTFEE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTFEE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n//STUDENTFEE UPDATE\r\nexport const setStudentfee = (data) => (dispatch, getState) => {\r\n    //body\r\n    dispatch({type : STUDENTFEE_SET_LOAD});\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STUDENTFEE_SET_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STUDENTFEE_SET_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};","import React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { \r\n    CCard, \r\n    CCardBody, \r\n    CButton, \r\n    CButtonGroup, \r\n    CCardHeader, \r\n    CCol, \r\n    CRow, \r\n    CDropdown, \r\n    CDropdownToggle, \r\n    CDropdownMenu, \r\n    CDropdownItem, \r\n    CDropdownDivider, \r\n    CContainer, \r\n    CCardFooter, \r\n    CForm,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupAppend,\r\n    CInputGroupPrepend,\r\n    CFormGroup,\r\n    CInputGroupText,\r\n    CSelect,\r\n    CLabel\r\n} from '@coreui/react';\r\n\r\nimport CIcon from '@coreui/icons-react'\r\nimport { Link } from 'react-router-dom';\r\nimport SearchDashboard from './SearchDashboard'\r\nimport SearchDashboard1 from './SearchDashboard1'\r\nconst Dashboard = (props) => {\r\n  \r\n  const [school, setSchool] = useState({})\r\n  const [term, setTerm ] = useState({})\r\n  //const [term, setTerm] = useState(0)\r\n  const [clasz, setClasz] = useState(0)\r\n  let dt = props.dropdowns && Array.isArray(props.dropdowns) && props.dropdowns.length > 4 ? props.dropdowns : [[], [], [], []];\r\n  let dt0 ='';\r\n  let dt1 ='';\r\n  let dt2 ='';\r\n  let dt3 ='';\r\n  if(dt.length > 0)\r\n  {\r\n     dt0 = dt[0].map((prop, ind)=>{\r\n    return <option key={ind}  value={prop.termid}>{prop.name}</option>;\r\n    });\r\n    dt1 = dt[1].map((prop, ind)=>{\r\n    return <option key={ind}  value={prop.id}>{prop.name}</option>;\r\n    });\r\n    dt2 = dt[2].map((prop, ind)=>{\r\n    return <option key={ind}  value={prop.id}>{prop.name}</option>;\r\n    });\r\n    dt3 = dt[0].map((prop, ind)=>{\r\n    return <option key={ind} value={JSON.stringify(prop)}>{prop.name}</option>;\r\n    });\r\n}\r\n\r\nlet sch  = Array.isArray(props.schools) ? props.schools.map((prop, ind)=>{\r\n  return <option value={JSON.stringify(prop)}>{prop.name}</option>;\r\n}):<option></option>;\r\n\r\nconst changeSchool =() =>{\r\n    props.changeSchool(JSON.parse(school))\r\n}\r\nconst changeTerm =() =>{\r\n  props.changeTerm(JSON.parse(term))\r\n}\r\nreturn (\r\n    <>\r\n    \r\n    <CRow>\r\n      <CCol lg={12}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            \r\n              <h4>Quick Menu</h4>\r\n              \r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <CContainer>\r\n            <CRow>\r\n              <CCol>\r\n              <CRow className='d-block'>\r\n                <strong>Change</strong>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol xs='12' sm='12' md='6' >\r\n                  <CForm>\r\n                  <CFormGroup row>\r\n                        <CInputGroup>\r\n                          <CInputGroupPrepend>\r\n                          <CInputGroupText>Change School</CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <CSelect \r\n                          id=\"input3-group2\" \r\n                          name=\"input3-group2\" \r\n                          placeholder=\"Search Staff\"\r\n                          onChange={(e)=>setSchool(e.target.value)}\r\n                          >\r\n                            {sch}\r\n                            </CSelect>\r\n                          <CInputGroupAppend>\r\n                            <CButton  onClick={changeSchool} type=\"button\" color=\"secondary\"><i className='fa fa-thumbs-up'></i></CButton>\r\n                          </CInputGroupAppend>\r\n                        </CInputGroup>\r\n                    </CFormGroup>\r\n                  </CForm>\r\n                </CCol>\r\n                <CCol xs='12' sm='12' md='6'>\r\n                <CForm>\r\n                <CFormGroup row>\r\n                      <CInputGroup>\r\n                        <CInputGroupPrepend>\r\n                        <CInputGroupText>Change Term</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CSelect  onChange={(e)=>setTerm(e.target.value)} id=\"input3-group2\" name=\"input3-group2\" placeholder=\"Search Staff\" >\r\n                          {dt3}\r\n                          </CSelect>\r\n                        <CInputGroupAppend>\r\n                          <CButton  onClick={changeTerm}  type=\"button\" color=\"secondary\"><i className='fa fa-thumbs-up'></i></CButton>\r\n                        </CInputGroupAppend>\r\n                      </CInputGroup>\r\n                  </CFormGroup>\r\n                </CForm>\r\n              </CCol>\r\n              </CRow>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n              \r\n            <CCol>\r\n               <CRow className='d-block'>\r\n                <strong>Navigate</strong>\r\n              </CRow>\r\n              <CForm action=\"\" method=\"post\" >\r\n              <CRow xs={12} >\r\n              <CCol xs='12' sm='12' md='12'  >\r\n              <CRow>\r\n              <CCol xs='12' sm='4' md='5' lg='5'  className=\"ml-0\">\r\n                <CFormGroup row>\r\n                <CInputGroup>\r\n                    <CInputGroupPrepend>\r\n                    <CInputGroupText>Select Term</CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                  <CSelect \r\n                    custom \r\n                    size=\"md\" \r\n                    name=\"term\" \r\n                    id=\"term\"\r\n                    onChange={(e)=>setTerm(e.target.value)}\r\n                    >\r\n                      <option value=\"0\">Select Term</option>\r\n                      {dt0}\r\n                    </CSelect>\r\n                  </CInputGroup>\r\n                </CFormGroup>\r\n              </CCol>\r\n              <CCol  xs='12' sm='4' md='5' lg='5' className=\"ml-0\" >\r\n                <CFormGroup row>\r\n                <CInputGroup>\r\n                    <CInputGroupPrepend>\r\n                    <CInputGroupText>Select Class</CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                <CSelect \r\n                    custom \r\n                    size=\"md\" \r\n                    name=\"clasz\" \r\n                    id=\"clasz\"\r\n                    onChange={(e)=>setClasz(e.target.value)}\r\n                    >\r\n                      <option value=\"0\">Select Class</option>\r\n                      {dt1}\r\n                    </CSelect>\r\n                 </CInputGroup>\r\n                </CFormGroup>\r\n                </CCol>\r\n              <CCol xs='12' sm='3' md='2' lg='2' className=\"ml-0\" >\r\n                <CFormGroup className=\"\">\r\n                <Link \r\n                    type=\"submit\" \r\n                    className=\"btn btn-success btn-block btn-sm\"\r\n                    size=\"sm\" \r\n                    color=\"primary\"\r\n                    to={`/studentclasses/${term}/${clasz}`}\r\n                    >\r\n                      <CIcon name=\"cil-scrubber\" /> Load !</Link>\r\n                </CFormGroup>\r\n                </CCol>\r\n              </CRow>\r\n              </CCol>\r\n              </CRow>\r\n              </CForm>\r\n            </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol>\r\n                    <CRow className='d-block'>\r\n                      <strong>Search</strong>\r\n                    </CRow>\r\n                    <CRow className='pr-2'xs={12} >\r\n                      <CCol md='6'  >\r\n                        <SearchDashboard />\r\n                      </CCol>\r\n                      <CCol className='pr-2' md='6'  >\r\n                        <SearchDashboard1 />\r\n                      </CCol>\r\n                    </CRow>\r\n                </CCol>\r\n              </CRow>\r\n            </CContainer>\r\n          </CCardBody>\r\n         </CCard>\r\n      </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n\r\n})\r\nexport default Dashboard","\r\nimport React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { searchStaff } from './../../actions/staff/staff'\r\nimport {  \r\n    CCol, \r\n    CRow,\r\n    CFormGroup,\r\n    CInput,\r\n    CListGroup,\r\n    CListGroupItem,\r\n    CCard\r\n    \r\n} from '@coreui/react';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n  const [term, setTerm] = useState();\r\n  const [clasz, setClasz] = useState([]);\r\n\r\n  let dt0 = ''\r\n  let dt1 = ''\r\n\r\n  const changeSchool = (e) =>{\r\n      setTerm(e.target.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.result !== undefined && Array.isArray(props.result))\r\n    {\r\n      setClasz(props.result)\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [props.result])\r\n\r\n  useEffect(() => {\r\n    if(term !== undefined && term.length > 2)\r\n    {\r\n      let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'search':term,\r\n            'schoolid': props.user.activeschool.id\r\n        }),\r\n        cat:'selected',\r\n        table:'staffsearch',\r\n        narration:`get all schools for access control`\r\n      }\r\n      props.searchStaff(params);\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [term, props.user.activeschool.id])\r\n\r\n\r\n  let dat = clasz.map((props, index)=>{\r\n    return <CListGroupItem key={index} target='_blank' className=\"m-0\" href={`#/staffs/${props.id}`} active>\r\n      <CRow>\r\n        <CCol xs='2' className='m-0'>\r\n            <img\r\n               src={process.env.REACT_APP_SERVER_URL + props.photo} \r\n               style={{height:'40px', width:'40px'}}\r\n               height=\"30px\"\r\n               alt=\"profile-image\" \r\n               class=\"profile\"\r\n               onError={(e)=>{e.target.onerror=null; e.target.src=process.env.PUBLIC_URL + '/icons/profile_1.png'} }\r\n               />\r\n        </CCol>\r\n        <CCol>\r\n        <strong>{props.name}</strong><br/>\r\n        <small>{props.employment_no}</small>\r\n        </CCol>\r\n      </CRow>\r\n      </CListGroupItem>\r\n  })\r\n  \r\n\r\nreturn (\r\n    <>\r\n              <CRow xs={12} >\r\n                <CCol>\r\n                <CFormGroup row>\r\n                  <CInput\r\n                    size=\"md\"\r\n                    className='w-100'\r\n                    value={term}\r\n                    onChange={(e)=>setTerm(e.target.value)}\r\n                    placeholder=' Staff search...'\r\n                    />     \r\n                </CFormGroup>\r\n                <CCard className=\"mt-0\" style={{display:'block', position:'absolute', zIndex:'101'}}>\r\n                <CListGroup style={{width:'300px'}}>\r\n                  {dat}\r\n                 </CListGroup>\r\n                </CCard>\r\n                </CCol>\r\n              </CRow>\r\n             \r\n             \r\n              \r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  result:state.staffReducer.result,\r\n  user : state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {searchStaff})(Dashboard)","\r\nimport React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { searchStudent } from './../../actions/student/student'\r\nimport {  \r\n    CCol, \r\n    CRow,\r\n    CFormGroup,\r\n    CInput,\r\n    CListGroup,\r\n    CListGroupItem,\r\n    CCard\r\n    \r\n} from '@coreui/react';\r\n\r\nconst Dashboard = (props) => {\r\n\r\n  const [term, setTerm] = useState();\r\n  const [clasz, setClasz] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(props.result !== undefined && Array.isArray(props.result))\r\n    {\r\n      setClasz(props.result)\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [props.result])\r\n\r\n  useEffect(() => {\r\n    if(term !== undefined && term.length > 2)\r\n    {\r\n      let params = {\r\n        data:JSON.stringify(\r\n        {\r\n            'search':term,\r\n            'schoolid': props.user.activeschool.id\r\n        }),\r\n        cat:'selected',\r\n        table:'studentsearch',\r\n        narration:`get all schools for access control`\r\n      }\r\n      props.searchStudent(params);\r\n    }else{\r\n      setClasz([])\r\n    }\r\n  }, [term, props.user.activeschool.id])\r\n\r\n\r\n  let dat = clasz.map((props, index)=>{\r\n    return <CListGroupItem key={index} href={`/students/${props.id}`} active>\r\n        <strong>{props.name}</strong><br/>\r\n        <small>{props.admission_no}</small>\r\n      </CListGroupItem>\r\n  })\r\n  \r\n\r\nreturn (\r\n    <>\r\n              <CRow xs={12} >\r\n                <CCol>\r\n                <CFormGroup row>\r\n                  <CInput\r\n                    size=\"md\"\r\n                    className='w-100'\r\n                    value={term}\r\n                    onChange={(e)=>setTerm(e.target.value)}\r\n                    placeholder=' Student search...'\r\n                    />     \r\n                </CFormGroup>\r\n                <CCard className=\"mt-0\" style={{display:'block', position:'absolute', zIndex:'101'}}>\r\n                <CListGroup style={{width:'300px'}}>\r\n                  {dat}\r\n                 </CListGroup>\r\n                </CCard>\r\n                </CCol>\r\n              </CRow>\r\n             \r\n             \r\n              \r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  result:state.studentReducer.result,\r\n  user : state.userReducer\r\n})\r\nexport default connect(mapStateToProps, {searchStudent})(Dashboard)","import axios from 'axios';\r\nimport {\r\n    FEE_GET_ONE,\r\n    FEE_GET_MULTIPLE,\r\n    FEE_REGISTER_SUCCESS,\r\n    FEE_REGISTER_FAIL,\r\n    FEE_LOADING,\r\n    FEE_LOADING_ERROR,\r\n    FEE_UPDATE_SUCCESS,\r\n    FEE_UPDATE_FAIL,\r\n    FEE_DELETE_SUCCESS,\r\n    FEE_DELETE_FAIL\r\n} from \"../../types/setting/fee\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'fees';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL FEE \r\nexport const getFees = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : FEE_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: FEE_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : FEE_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE FEE \r\nexport const getFee = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : FEE_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//FEE DELETE\r\nexport const deleteFee = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: FEE_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : FEE_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//FEE REGISTER\r\nexport const registerFee = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: FEE_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : FEE_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //FEE UPDATE\r\nexport const updateFee = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: FEE_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : FEE_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    ACCOUNT_GET_ONE,\r\n    ACCOUNT_GET_MULTIPLE,\r\n    ACCOUNT_REGISTER_SUCCESS,\r\n    ACCOUNT_REGISTER_FAIL,\r\n    ACCOUNT_LOADING,\r\n    ACCOUNT_LOADING_ERROR,\r\n    ACCOUNT_UPDATE_SUCCESS,\r\n    ACCOUNT_UPDATE_FAIL,\r\n    ACCOUNT_DELETE_SUCCESS,\r\n    ACCOUNT_DELETE_FAIL\r\n} from \"../../types/setting/account\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'accounts';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL ACCOUNT \r\nexport const getAccounts = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : ACCOUNT_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: ACCOUNT_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : ACCOUNT_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE ACCOUNT \r\nexport const getAccount = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : ACCOUNT_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//ACCOUNT DELETE\r\nexport const deleteAccount = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ACCOUNT_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : ACCOUNT_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//ACCOUNT REGISTER\r\nexport const registerAccount = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ACCOUNT_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : ACCOUNT_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //ACCOUNT UPDATE\r\nexport const updateAccount = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ACCOUNT_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : ACCOUNT_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { \r\n    CCard,  \r\n    CButton, \r\n    CButtonGroup, \r\n    CCardHeader, \r\n    CCol, \r\n    CRow, \r\n   \r\n} from '@coreui/react';\r\n\r\n\r\n\r\nconst Dashboard = (props) => {\r\n \r\nreturn (\r\n    <>\r\n    <CRow>\r\n      <CCol lg={12}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            <CRow>\r\n              <CCol xs={10}>\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">{props.activeschool != undefined && props.activeterm.hasOwnProperty('name') && props.activeschool.name ? props.activeschool.name: <i>Please select a school or consult the admin</i>}</h4>\r\n              <div className=\"small text-muted\"><strong>{props.activeterm != undefined &&  props.activeterm.hasOwnProperty('name') && props.activeterm.name ? props.activeterm.name : <span> Welcome<small><i> (No active term)</i></small></span> }</strong></div>\r\n              \r\n              </CCol>\r\n              <CCol className=\"d-md-block btn-group\">\r\n              <CButtonGroup className='pull-right'>\r\n              <CButton  \r\n                  color=\"primary\" \r\n                  className=\"\"\r\n                  onClick={()=>props.toggleMenu()}\r\n                  >\r\n                <i className='fa fa-search'></i>\r\n              </CButton>\r\n              </CButtonGroup>  \r\n            </CCol>\r\n            </CRow>\r\n          </CCardHeader>\r\n         </CCard>\r\n      </CCol>\r\n    </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import { CCollapse } from '@coreui/react';\r\nimport React, {useEffect, useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { getUserDatas, getUserSchools, getUserTerms, getUserdropdowns, settSchool, settTerm} from './../../actions/user'\r\nimport StaffDashboardMenu from './StaffDashboardMenu';\r\nimport StaffDashboardSession from './StaffDashboardSession1';\r\n\r\nconst Dashboard = (props) => {\r\n  const [showmenu, setShowmenu] = useState(false)\r\n\r\nuseEffect(() => {\r\n  //load dropdowns\r\n  let did = props.user.activeschool !== undefined && props.user.activeschool.hasOwnProperty('id') && parseInt(props.user.activeschool.id) > 0 ? props.user.activeschool.id :'null'\r\n  let params = {\r\n    data:JSON.stringify(\r\n    {\r\n        'schoolid':did\r\n    }),\r\n    cat:'dropdowns',\r\n    table:'access',\r\n    narration:'get all dropdowns'\r\n    }\r\n    props.getUserdropdowns(params)\r\n  let params1 = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':did\r\n      }),\r\n      cat:'accessterms',\r\n      table:'access',\r\n      narration:'get current term'\r\n      }\r\n      props.getUserTerms(params1)\r\n    \r\n}, [props.user.mid, props.user.activeschool])\r\n\r\nuseEffect(() => {\r\n  //load staff schools\r\n  let params = {\r\n    data:JSON.stringify(\r\n    {\r\n        'schools':props.user.myschools.join(',')\r\n    }),\r\n    cat:'schoolaccess',\r\n    table:'schools',\r\n    narration:'get all schools'\r\n    }\r\n    props.getUserSchools(params)\r\n}, [props.user.mid, props.user.myschools])\r\n\r\nuseEffect(() => {\r\n  //load staff subjects and class\r\n  let params = {\r\n    data:JSON.stringify(\r\n    {\r\n        'sessionid':props.user.activeterm.sessionid,\r\n        'termid':props.user.activeterm.termid,\r\n        'staffid':props.user.mid,\r\n    }),\r\n    cat:'dataaccess',\r\n    table:'access',\r\n    narration:'get all schools'\r\n    }\r\n    getUserDatas(params)\r\n  \r\n    \r\n}, [props.user.mid, props.user.activeterm]);\r\n\r\nlet dt = props.user.dropdowns && Array.isArray(props.user.dropdowns) ? props.user.dropdowns : [[], []];\r\nconst changeSchool = (data) =>{\r\n  \r\n      props.settSchool(data)\r\n}\r\nconst changeTerm = (data) =>{\r\n      props.settTerm(data)\r\n}\r\nconst changeMenu = () =>{\r\n      setShowmenu(prev=>!prev);\r\n}\r\n\r\nreturn (\r\n    <>\r\n    <StaffDashboardSession \r\n        activeterm={props.user.activeterm}\r\n        activeschool={props.user.activeschool}\r\n        schools={props.user.mySchoolData}\r\n        changeSchool={(data)=>changeSchool(data)}\r\n        toggleMenu={changeMenu}\r\n      />\r\n       <CCollapse\r\n      show={showmenu}\r\n      >\r\n      <StaffDashboardMenu \r\n        dropdowns={dt}\r\n        schools={props.user.mySchoolData}\r\n        changeSchool={(data)=>changeSchool(data)}\r\n        changeTerm={(data)=>changeTerm(data)}\r\n      />\r\n      \r\n      </CCollapse>\r\n      \r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  activeTerm : state.termReducer.activeTerm,\r\n  user : state.userReducer,\r\n\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getUserDatas,\r\n  getUserSchools,\r\n  getUserTerms,\r\n  getUserdropdowns,\r\n  settSchool,\r\n  settTerm\r\n\r\n})(Dashboard)"],"sourceRoot":""}