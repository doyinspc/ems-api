{"version":3,"sources":["views/setting/Session.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/setting/session.js"],"names":["connect","state","sessions","sessionReducer","school","schoolReducer","getSessions","getSession","registerSession","updateSession","deleteSession","props","history","useHistory","useLocation","search","match","useState","collapse","setCollapse","id","setId","dts","setDts","namez","setNamez","starts","setStarts","ends","setEnds","useEffect","params","data","JSON","stringify","cat","table","narration","parseInt","dt","name","started","ended","onReset","tabl","Array","isArray","filter","rw","undefined","map","row","ind","key","className","moment","format","color","size","onClick","item","push","sm","data-target","data-toggle","e","preventDefault","show","xl","action","method","htmlFor","type","defaultValue","onChange","target","value","placeholder","length","fd","FormData","append","_slicedToArray","arr","i","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","err","unsupportedIterableToArray","TypeError","path","API_PATH_SETTING","dispatch","getState","token","MAIN_TOKEN","SESSION_LOADING","axios","get","axiosConfig","then","res","SESSION_GET_MULTIPLE","payload","catch","SESSION_LOADING_ERROR","SESSION_GET_ONE","POST","SESSION_DELETE_SUCCESS","SESSION_DELETE_FAIL","post","axiosConfig1","SESSION_REGISTER_SUCCESS","SESSION_REGISTER_FAIL","SESSION_UPDATE_SUCCESS","SESSION_UPDATE_FAIL"],"mappings":"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","file":"static/js/47.7ca3d282.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport  moment from 'moment';\r\nimport {getSessions, getSession, registerSession, updateSession, deleteSession} from './../../actions/setting/session';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CCollapse,\r\n  CFormText,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n  CDropdownToggle,\r\n  CDropdownMenu\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n\r\nconst Session = (props) => {\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [dts, setDts] = useState('')\r\n  const [namez, setNamez] = useState('')\r\n  const [starts, setStarts] = useState()\r\n  const [ends, setEnds] = useState()\r\n\r\n  const toggle = (e) => {\r\n    setCollapse(!collapse)\r\n    e.preventDefault()\r\n  }\r\n//GET SESSIONS PER SCHOOL\r\n  useEffect(() => {\r\n    let params = {\r\n      data:JSON.stringify(\r\n      {\r\n          'schoolid':props.school.id\r\n      }),\r\n      cat:'select',\r\n      table:'sessions',\r\n      narration:'get sessions'\r\n  }\r\n    props.getSessions(params)\r\n    \r\n  }, [props.school.id])\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(id && parseInt(id) > 0)\r\n    {\r\n      let dt = dts;\r\n      setNamez(dt.name);\r\n      setStarts(dt.started);\r\n      setEnds(dt.ended);\r\n    }else{\r\n      setNamez('');\r\n      setStarts('');\r\n      setEnds('');\r\n    }\r\n    \r\n  }, [id])\r\n\r\n  const onEdit = (rw, dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onReset = () =>setId(null);\r\n  const onClose = () =>setCollapse(false);\r\n\r\n  const handleSubmit = () =>{\r\n    if(namez.length > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('started', starts);\r\n      fd.append('ended', ends);\r\n      fd.append('table', 'sessions');\r\n      \r\n\r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateSession(fd)\r\n        \r\n      }else\r\n      {\r\n        //INSERT\r\n        fd.append('schoolid',1);\r\n        fd.append('cat', 'insert');\r\n        props.registerSession(fd)\r\n      }\r\n      onReset()\r\n    }\r\n  }\r\n \r\n  let data = props.sessions.sessions && Array.isArray(props.sessions.sessions) ? props.sessions.sessions.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n  let tabl = data.map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td>{row.name}</td>\r\n                <td className='text-center'>{moment(row.started).format('MMM D, YYYY')}</td>\r\n                <td className='text-center'>{moment(row.ended).format('MMM D, YYYY')}</td>\r\n                <td className='text-center'>\r\n                <CDropdown className=\"m-0 btn-group \">\r\n                  <CDropdownToggle color=\"success\" size=\"sm\">\r\n                  <i className='fa fa-gear'></i> Action\r\n                  </CDropdownToggle>\r\n                  <CDropdownMenu>\r\n                    <CDropdownItem\r\n                      onClick={(item) => history.push(`/sessions/${row.id}`)}\r\n                     ><i className='fa fa-list'></i>{' '} Terms</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onEdit(row.id, row)} ><i className='fa fa-edit'></i>{' '}  Edit</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onDelete(row.id, row)}><i className='fa fa-remove'></i>{' '}  Delete</CDropdownItem>\r\n                    <CDropdownDivider />\r\n                    <CDropdownItem><i className='fa fa-database'></i>{\" \"} Backup</CDropdownItem>\r\n                    <CDropdownItem><i className='fa fa-upload'></i>{\" \"}Restore</CDropdownItem>\r\n                  </CDropdownMenu>\r\n                </CDropdown>\r\n                </td>\r\n              </tr>\r\n  })\r\n  return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">Sessions</h4>\r\n               <div className=\"small text-muted\">{props.school.name}</div>\r\n            </CCol>\r\n            <CCol sm=\"7\" className=\"d-md-block\">\r\n              <CButton \r\n                  data-target='#formz' \r\n                  data-toggle=\"collapse\" \r\n                  color=\"primary\" \r\n                  onClick={toggle}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-plus'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">SN.</th>\r\n                    <th><i className='fa fa-list'></i> Session</th>\r\n                    <th className=\"text-center\"> <i className='fa fa-calendar'></i> Start</th>\r\n                    <th className=\"text-center\"><i className='fa fa-calendar'></i> End</th>\r\n                    <th className=\"text-center\"><i className='fa fa-gear'></i> Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n        <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> Session</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-name\">Session</CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-name\" \r\n                      name=\"name\"\r\n                      defaultValue={namez}\r\n                      onChange={(e)=>setNamez(e.target.value)}\r\n                      placeholder=\"2020_2021\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Please enter session</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-starts\">Session Starts </CLabel>\r\n                  <CInput \r\n                      type=\"date\" \r\n                      id=\"nf-starts\" \r\n                      name=\"starts\"\r\n                      defaultValue={starts}\r\n                      onChange={(e)=>setStarts(e.target.value)}\r\n                      placeholder=\"date\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Please enter date session starts</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-ends\">Session ends </CLabel>\r\n                  <CInput \r\n                      type=\"date\" \r\n                      id=\"nf-ends\" \r\n                      name=\"ends\"\r\n                      defaultValue={ends}\r\n                      onChange={(e)=>setEnds(e.target.value)}\r\n                      placeholder=\"date\" \r\n                    />\r\n                  <CFormText className=\"help-block\">Please enter date session ends</CFormText>\r\n                </CFormGroup>\r\n              </CForm>\r\n            </CCardBody>\r\n            \r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n      </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  sessions : state.sessionReducer,\r\n  school : state.schoolReducer.school\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getSessions,\r\n  getSession,\r\n  registerSession,\r\n  updateSession,\r\n  deleteSession\r\n})(Session)\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    SESSION_GET_ONE,\r\n    SESSION_GET_MULTIPLE,\r\n    SESSION_REGISTER_SUCCESS,\r\n    SESSION_REGISTER_FAIL,\r\n    SESSION_LOADING,\r\n    SESSION_LOADING_ERROR,\r\n    SESSION_UPDATE_SUCCESS,\r\n    SESSION_UPDATE_FAIL,\r\n    SESSION_DELETE_SUCCESS,\r\n    SESSION_DELETE_FAIL\r\n} from \"./../../types/setting/session\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'sessions';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL SESSION \r\nexport const getSessions = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : SESSION_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: SESSION_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : SESSION_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE SESSION \r\nexport const getSession = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : SESSION_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//SESSION DELETE\r\nexport const deleteSession = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//SESSION REGISTER\r\nexport const registerSession = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //SESSION UPDATE\r\nexport const updateSession = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SESSION_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : SESSION_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n"],"sourceRoot":""}