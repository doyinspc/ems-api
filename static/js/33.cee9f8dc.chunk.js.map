{"version":3,"sources":["views/setting/Ca.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","actions/staff/staff.js","actions/setting/clasz.js","actions/setting/ca.js"],"names":["connect","state","cas","caReducer","terms","termReducer","claszs","claszReducer","staffs","staffReducer","school","schoolReducer","dropdowns","getStaffs","getCas","getCa","registerCa","updateCa","deleteCa","getClaszs","props","termid","useParams","term","caid","ca","history","useHistory","useLocation","search","match","useState","collapse","setCollapse","id","setId","dts","setDts","namez","setNamez","abbrv","setAbbrv","maxscore","setMaxscore","useEffect","params1","data","JSON","stringify","cat","table","narration","parseInt","dt","name","onReset","deparr","filter","rw","termname","length","tabl","Array","isArray","undefined","map","row","ind","key","className","color","size","onClick","item","push","cid","sm","style","textTransform","data-target","data-toggle","e","preventDefault","show","xl","action","method","htmlFor","type","defaultValue","onChange","target","value","placeholder","fd","FormData","append","_slicedToArray","arr","i","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","err","unsupportedIterableToArray","TypeError","path","API_PATH_STAFF","params","dispatch","getState","token","MAIN_TOKEN","STAFF_LOADING","axios","get","axiosConfig","then","res","STAFF_GET_MULTIPLE","payload","catch","STAFF_LOADING_ERROR","getStaffAll","STAFF_GET_ALL","searchStaff","STAFF_GET_SEARCH","birthday","STAFF_GET_BIRTHDAY","getStaff","STAFF_GET_ONE","deleteStaff","POST","STAFF_DELETE_SUCCESS","STAFF_DELETE_FAIL","registerStaff","post","axiosConfig1","STAFF_REGISTER_SUCCESS","STAFF_REGISTER_FAIL","updateStaff","STAFF_UPDATE_SUCCESS","STAFF_UPDATE_FAIL","API_PATH_SETTING","CLASZ_LOADING","CLASZ_GET_MULTIPLE","CLASZ_LOADING_ERROR","getClasz","CLASZ_GET_ONE","deleteClasz","CLASZ_DELETE_SUCCESS","CLASZ_DELETE_FAIL","registerClasz","CLASZ_REGISTER_SUCCESS","CLASZ_REGISTER_FAIL","updateClasz","CLASZ_UPDATE_SUCCESS","CLASZ_UPDATE_FAIL","CA_LOADING","CA_GET_MULTIPLE","CA_LOADING_ERROR","CA_GET_ONE","CA_DELETE_SUCCESS","CA_DELETE_FAIL","CA_REGISTER_SUCCESS","CA_REGISTER_FAIL","CA_UPDATE_SUCCESS","CA_UPDATE_FAIL"],"mappings":"uMAmReA,uBARS,SAACC,GAAD,MAAW,CACjCC,IAAMD,EAAME,UACZC,MAAQH,EAAMI,YAAYD,MAC1BE,OAASL,EAAMM,aAAaD,OAC5BE,OAASP,EAAMQ,aAAaD,OAC5BE,OAAST,EAAMU,cAAcD,OAC7BE,UAAYX,EAAMU,cAAcC,aAEM,CACtCC,cACAC,WACAC,UACAC,eACAC,aACAC,aACAC,eAPanB,EAjPJ,SAACoB,GACV,IAAMC,EAASC,cAAYC,KACrBC,EAAOF,cAAYG,GAEnBC,EAAUC,cAJI,GAKFC,cAAcC,OAAOC,MAAM,gBAAiB,IAC9BC,oBAAS,IANrB,mBAMbC,EANa,KAMHC,EANG,OAOAF,mBAAS,MAPT,mBAObG,EAPa,KAOTC,EAPS,OAQEJ,mBAAS,IARX,mBAQbK,EARa,KAQRC,EARQ,OASMN,qBATN,mBASbO,EATa,KASNC,EATM,OAUMR,qBAVN,mBAUbS,EAVa,KAUNC,EAVM,OAWYV,qBAXZ,mBAWbW,EAXa,KAWHC,EAXG,KAkBpBC,qBAAU,WACR,IAAIC,EAAU,CACZC,KAAKC,KAAKC,UACV,CACI,OAAUxB,EACV,OApBQ,IAsBZyB,IAAI,WACJC,MAAM,MACNC,UAAU,qBAEZ/B,EAAMN,OAAO+B,KAEZ,CAACxB,EA5BY,EA4BKD,EAAMV,OAAOwB,KAGlCU,qBAAU,WACR,GAAGV,GAAMkB,SAASlB,GAAM,EACxB,CACE,IAAImB,EAAKjB,EACTG,EAASc,EAAGC,MACZb,EAASY,EAAGb,OACZG,EAAYU,EAAGX,eAEfH,EAAS,IACTE,EAAS,IACTE,EAAY,MAGb,CAACT,IAEJ,IAeMqB,EAAU,kBAAKpB,EAAM,OA+BvBqB,EAASpC,EAAMR,UAAU,GAAG6C,QAAO,SAAAC,GAAE,OAAGN,SAASM,EAAGxB,MAAQkB,SAAS/B,IAAW+B,SAASM,EAAGxB,IAAM,KAClGyB,EAAWH,EAAOI,OAAS,EAAIJ,EAAO,GAAGF,KAAO,OAIhDO,GAFOzC,EAAMlB,IAAIA,KAAO4D,MAAMC,QAAQ3C,EAAMlB,IAAIA,KAAOkB,EAAMlB,IAAIA,IAAIuD,QAAO,SAAAC,GAAE,OAAU,OAAPA,QAAsBM,IAAPN,KAAoB,IAExGD,QAAO,SAAAC,GAAE,OAAS,OAAPA,KAAaO,KAAI,SAACC,EAAKC,GAC9C,OAAO,wBAAIC,IAAKD,GACN,wBAAIE,UAAU,eAAeF,EAAM,GACnC,wBAAIE,UAAU,aAAaH,EAAIZ,MAC/B,wBAAIe,UAAU,eAAeH,EAAI1B,OACjC,wBAAI6B,UAAU,eAAeH,EAAIxB,UACjC,wBAAI2B,UAAU,eACd,kBAAC,IAAD,CAAWA,UAAU,iBACnB,kBAAC,IAAD,CAAiBC,MAAM,UAAUC,KAAK,MACtC,uBAAGF,UAAU,eADb,WAGA,kBAAC,IAAD,KACA,kBAAC,IAAD,CACIG,QAAS,SAACC,GAAD,OAAU/C,EAAQgD,KAAR,oBAA0BrD,EAA1B,cAAsCG,EAAtC,YAA8C0C,EAAIhC,OADzE,IAEK,uBAAGmC,UAAU,eAFlB,KAEsC,KAFtC,cAGE,kBAAC,IAAD,CAAeG,QAAS,kBAjEtCrC,GADYkB,EAkEqCa,GAjExChC,IACTG,EAAOgB,QACPpB,GAAY,GAHD,IAACoB,IAkEE,QACA,kBAAC,IAAD,CAAemB,QAAS,WAAaN,EAAIS,MAAzC,UACA,kBAAC,IAAD,MACA,kBAAC,IAAD,8BAMlB,OACE,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACA,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KACT,wBAAI1C,GAAG,UAAUmC,UAAU,mBAAmBV,EAA9C,MAA0D,uDACxD,yBAAKU,UAAU,mBAAmBQ,MAAO,CAACC,cAAc,eAAgB1D,EAAMV,OAAO4C,OAEvF,kBAAC,IAAD,CAAMsB,GAAG,IAAIP,UAAU,cACrB,kBAAC,IAAD,CACIU,cAAY,SACZC,cAAY,WACZV,MAAM,UACNE,QA9HD,SAACS,GACdhD,GAAaD,GACbiD,EAAEC,kBA6HYb,UAAU,eACZ,uBAAGA,UAAU,mBAKnB,kBAAC,IAAD,KACA,2BAAOA,UAAU,oDACX,2BAAOA,UAAU,eACf,4BACE,wBAAIA,UAAU,eAAd,QACA,4BAAI,uBAAGA,UAAU,2BAAjB,oBACA,4BAAI,uBAAGA,UAAU,+BAAjB,UACA,4BAAI,uBAAGA,UAAU,eAAjB,cACA,4BAAI,uBAAGA,UAAU,eAAjB,aAGJ,+BACGR,OAMX,kBAAC,IAAD,CAAWsB,KAAMnD,GACjB,kBAAC,IAAD,CAAMoD,GAAI,GAAKlD,GAAG,UAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAaA,GAAG,UAAUmC,UAAU,mBAClC,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMO,GAAG,KACT,4BAAM1C,GAAMkB,SAASlB,GAAM,EAAI,OAAS,MAAxC,IAA+C,wCAE/C,kBAAC,IAAD,CAAM0C,GAAG,IAAIP,UAAU,cACrB,kBAAC,IAAD,CACIC,MAAM,SACNE,QA9GJ,kBAAKvC,GAAY,IA+GboC,UAAU,eACZ,uBAAGA,UAAU,qBAMrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgB,OAAO,GAAGC,OAAO,QACtB,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAQC,QAAQ,YAAhB,SACA,kBAAC,IAAD,CACIC,KAAK,OACLtD,GAAG,WACHoB,KAAK,QACLmC,aAAcnD,EACdoD,SAAU,SAACT,GAAD,OAAK1C,EAAS0C,EAAEU,OAAOC,QACjCC,YAAY,gCAEhB,kBAAC,IAAD,CAAWxB,UAAU,cAArB,wBAEF,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAQkB,QAAQ,YAAhB,iBACA,kBAAC,IAAD,CACIC,KAAK,OACLtD,GAAG,WACHoB,KAAK,QACLmC,aAAcjD,EACdkD,SAAU,SAACT,GAAD,OAAKxC,EAASwC,EAAEU,OAAOC,QACjCC,YAAY,QAEhB,kBAAC,IAAD,CAAWxB,UAAU,cAArB,oBAEF,kBAAC,IAAD,KACE,kBAAC,KAAD,CAAQkB,QAAQ,eAAhB,kBACA,kBAAC,IAAD,CACIC,KAAK,OACLtD,GAAG,cACHoB,KAAK,WACLmC,aAAc/C,EACdgD,SAAU,SAACT,GAAD,OAAKtC,EAAYsC,EAAEU,OAAOC,QACpCC,YAAY,OAEhB,kBAAC,IAAD,CAAWxB,UAAU,cAArB,mEAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASmB,KAAK,SAAShB,QA7Jd,WACnB,GAAGpB,SAAS/B,GAAU,EAAE,CACtB,IAAIyE,EAAK,IAAIC,SACbD,EAAGE,OAAO,OAAQ1D,GAClBwD,EAAGE,OAAO,QAASxD,GACnBsD,EAAGE,OAAO,WAAYtD,GACtBoD,EAAGE,OAAO,QAAS,OAEhB9D,GAAMkB,SAASlB,GAAM,GAGtB4D,EAAGE,OAAO,KAAM9D,GAChB4D,EAAGE,OAAO,MAAO,UACjB5E,EAAMH,SAAS6E,IAERzE,GAAU+B,SAAS/B,GAAU,IAGpCyE,EAAGE,OAAO,SAlFA,GAmFVF,EAAGE,OAAO,SAAUxE,GACpBsE,EAAGE,OAAO,MAAO,UACjB5E,EAAMJ,WAAW8E,IAEnBvC,MAsIsDgB,KAAK,KAAKD,MAAM,WAAU,kBAAC,IAAD,CAAOhB,KAAK,iBAApF,WAAuH,IACvH,kBAAC,IAAD,CAASkC,KAAK,QAAQhB,QAASjB,EAASgB,KAAK,KAAKD,MAAM,UAAS,kBAAC,IAAD,CAAOhB,KAAK,YAA7E,mB,gFC/PC,SAAS2C,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIpC,MAAMC,QAAQmC,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXC,QAA4BA,OAAOC,YAAYC,OAAOJ,GAAjE,CACA,IAAIK,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAK1C,EAET,IACE,IAAK,IAAiC2C,EAA7BC,EAAKV,EAAIE,OAAOC,cAAmBG,GAAMG,EAAKC,EAAGC,QAAQC,QAChEP,EAAK7B,KAAKiC,EAAGf,QAETO,GAAKI,EAAK3C,SAAWuC,GAH8CK,GAAK,IAK9E,MAAOO,GACPN,GAAK,EACLC,EAAKK,EACL,QACA,IACOP,GAAsB,MAAhBI,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIH,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBL,EAAKC,IAAM,OAAAa,EAAA,GAA2Bd,EAAKC,IGLjF,WACb,MAAM,IAAIc,UAAU,6IHIgF,K,iCILtG,qTAmBMC,EAAOC,IAGAtG,EAAY,SAAAuG,GAAM,OAAI,SAACC,EAAUC,GAE1CF,EAAOG,MAAQC,IACfJ,EAAOlE,MAPM,SASbmE,EAAS,CAAC7B,KAAOiC,MACbC,IAAMC,IAAIT,EAAM,CAACE,UAASQ,KACrBC,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAMuC,IACNC,QAASF,EAAIhF,UAGpBmF,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAO0C,IACPF,QAAQjB,SAKfoB,EAAc,SAAAf,GAAM,OAAI,SAACC,EAAUC,GAE5CF,EAAOG,MAAQC,IAEfH,EAAS,CAAC7B,KAAOiC,MACbC,IAAMC,IAAIT,EAAM,CAACE,UAASQ,KACrBC,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAM4C,IACNJ,QAASF,EAAIhF,UAGpBmF,OAAM,SAAAlB,GACHM,EAAS,CACN7B,KAAO0C,IACPF,QAAQjB,SAKdsB,EAAc,SAAAjB,GAAM,OAAI,SAACC,EAAUC,GAE5CD,EAAS,CAAC7B,KAAOiC,MACbC,IAAMC,IAAIT,EAAM,CAACE,UAASQ,KACrBC,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAM8C,IACNN,QAASF,EAAIhF,UAGpBmF,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAO0C,IACPF,QAAQjB,SAKfwB,EAAW,SAAAnB,GAAM,OAAI,SAACC,EAAUC,GAEzCD,EAAS,CAAC7B,KAAOiC,MACbC,IAAMC,IAAIT,EAAM,CAACE,UAASQ,KACrBC,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAMgD,IACNR,QAASF,EAAIhF,UAGpBmF,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAO0C,IACPF,QAAQjB,SAMf0B,EAAW,SAAAvG,GAAE,OAAI,SAACmF,EAAUC,GAErCD,EACI,CACA7B,KAAOkD,IACPV,QAAS9F,MAIJyG,EAAc,SAAAvB,GAAM,OAAI,SAACC,EAAUC,GAC5CI,IAAMkB,KAAK1B,EAAM,CAACE,UAASQ,KACtBC,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAMqD,IACNb,QAASZ,EAAOlF,QAGvB+F,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAOsD,IACPd,QAAUjB,SAMbgC,EAAgB,SAAAjG,GAAI,OAAI,SAAAuE,GACjCK,IAAMsB,KAAK9B,EAAMpE,EAAMmG,KAClBpB,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAM0D,IACNlB,QAASF,EAAIhF,KAAKA,UAGzBmF,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAO2D,IACPnB,QAASjB,SAKZqC,EAAc,SAACtG,GAAD,OAAU,SAACuE,EAAUC,GAE5CI,IAAMsB,KAAK9B,EAAMpE,EAAMmG,KAClBpB,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAM6D,IACNrB,QAASF,EAAIhF,KAAKA,UAGzBmF,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAO8D,IACPtB,QAASjB,U,iCC1JzB,+MAgBMG,EAAOqC,IAGApI,EAAY,SAAAiG,GAAM,OAAI,SAACC,EAAUC,GAE1CF,EAAOG,MAAQC,IACfJ,EAAOlE,MAPM,SASbmE,EAAS,CAAC7B,KAAOgE,MACb9B,IAAMC,IAAIT,EAAM,CAACE,UAASQ,KACrBC,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAMiE,IACNzB,QAASF,EAAIhF,UAGpBmF,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAOkE,IACP1B,QAAQjB,SAKf4C,EAAW,SAAAzH,GAAE,OAAI,SAACmF,EAAUC,GAErCD,EACI,CACA7B,KAAOoE,IACP5B,QAAS9F,MAIJ2H,EAAc,SAAAzC,GAAM,OAAI,SAACC,EAAUC,GAC5CI,IAAMkB,KAAK1B,EAAM,CAACE,UAASQ,KACtBC,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAMsE,IACN9B,QAASZ,EAAOlF,QAGvB+F,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAOuE,IACP/B,QAAUjB,SAMbiD,EAAgB,SAAAlH,GAAI,OAAI,SAAAuE,GACjCK,IAAMsB,KAAK9B,EAAMpE,EAAMmG,KAClBpB,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAMyE,IACNjC,QAASF,EAAIhF,KAAKA,UAGzBmF,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAO0E,IACPlC,QAASjB,SAKZoD,EAAc,SAACrH,GAAD,OAAU,SAACuE,EAAUC,GAE5CI,IAAMsB,KAAK9B,EAAMpE,EAAMmG,KAClBpB,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAM4E,IACNpC,QAASF,EAAIhF,KAAKA,UAGzBmF,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAO6E,IACPrC,QAASjB,U,iCC9FzB,+MAgBMG,EAAOqC,IAGAzI,EAAS,SAAAsG,GAAM,OAAI,SAACC,EAAUC,GAEvCF,EAAOG,MAAQC,IAEfH,EAAS,CAAC7B,KAAO8E,MACb5C,IAAMC,IAAIT,EAAM,CAACE,UAASQ,KACrBC,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAM+E,IACNvC,QAASF,EAAIhF,UAGpBmF,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAOgF,IACPxC,QAAQjB,SAKfhG,EAAQ,SAAAmB,GAAE,OAAI,SAACmF,EAAUC,GAElCD,EACI,CACA7B,KAAOiF,IACPzC,QAAS9F,MAIJhB,EAAW,SAAAkG,GAAM,OAAI,SAACC,EAAUC,GACzCI,IAAMkB,KAAK1B,EAAM,CAACE,UAASQ,KACtBC,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAMkF,IACN1C,QAASZ,EAAOlF,QAGvB+F,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAOmF,IACP3C,QAAUjB,SAMb/F,EAAa,SAAA8B,GAAI,OAAI,SAAAuE,GAC9BK,IAAMsB,KAAK9B,EAAMpE,EAAMmG,KAClBpB,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAMoF,IACN5C,QAASF,EAAIhF,KAAKA,UAGzBmF,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAOqF,IACP7C,QAASjB,SAKZ9F,EAAW,SAAC6B,GAAD,OAAU,SAACuE,EAAUC,GAEzCI,IAAMsB,KAAK9B,EAAMpE,EAAMmG,KAClBpB,MAAK,SAAAC,GACFT,EAAS,CACL7B,KAAMsF,IACN9C,QAASF,EAAIhF,KAAKA,UAGzBmF,OAAM,SAAAlB,GACHM,EAAS,CACL7B,KAAOuF,IACP/C,QAASjB","file":"static/js/33.cee9f8dc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {getCas, getCa, registerCa, updateCa, deleteCa} from './../../actions/setting/ca';\r\nimport {getClaszs} from './../../actions/setting/clasz';\r\nimport {getStaffs} from './../../actions/staff/staff';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CCollapse,\r\n  CFormText,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownDivider,\r\n  CSelect,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CInputGroup,\r\n  CInputGroupAppend,\r\n  CInputGroupPrepend\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { setElement } from '../../actions/common';\r\n\r\n\r\nconst Ca = (props) => {\r\n  const termid = useParams().term\r\n  const caid = useParams().ca\r\n  const groupid = 1;\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const [collapse, setCollapse] = useState(false)\r\n  const [id, setId] = useState(null)\r\n  const [dts, setDts] = useState('')\r\n  const [namez, setNamez] = useState()\r\n  const [abbrv, setAbbrv] = useState()\r\n  const [maxscore, setMaxscore] = useState()\r\n \r\n  const toggle = (e) => {\r\n    setCollapse(!collapse)\r\n    e.preventDefault()\r\n  }\r\n//GET CAS PER SCHOOL\r\n  useEffect(() => {\r\n    let params1 = {\r\n      data:JSON.stringify(\r\n      {\r\n          'termid': caid,\r\n          'typeid': groupid,\r\n      }),\r\n      cat:'selected',\r\n      table:'cas',\r\n      narration:'get staff term ca'\r\n    }\r\n    props.getCas(params1);\r\n    \r\n  }, [termid, groupid, props.school.id])\r\n\r\n  //CHANGE STATE AS EDIT OR ADD\r\n  useEffect(() => {\r\n    if(id && parseInt(id) > 0)\r\n    {\r\n      let dt = dts;\r\n      setNamez(dt.name);\r\n      setAbbrv(dt.abbrv);\r\n      setMaxscore(dt.maxscore);\r\n    }else{\r\n      setNamez('');\r\n      setAbbrv('');\r\n      setMaxscore('');\r\n    }\r\n    \r\n  }, [id])\r\n\r\n  const onEdit = (dt) =>{\r\n      setId(dt.id);\r\n      setDts(dt);\r\n      setCollapse(true);\r\n  }\r\n  const onDelete = (rw, dt) =>{\r\n    \r\n  }\r\n  const onActivate = (rw, num) =>{\r\n    let nu = parseInt(num) === 0 ? 1 : 0;\r\n    let fd = new FormData();\r\n    fd.append('id', rw);\r\n    fd.append('is_active', nu);\r\n    props.updateCa(fd);\r\n  }\r\n  const onReset = () =>setId(null);\r\n  const onClose = () =>setCollapse(false);\r\n\r\n  const handleSubmit = () =>{\r\n    if(parseInt(termid) > 0){\r\n      let fd = new FormData();\r\n      fd.append('name', namez);\r\n      fd.append('abbrv', abbrv);\r\n      fd.append('maxscore', maxscore);\r\n      fd.append('table', 'cas');\r\n      \r\n      if(id && parseInt(id) > 0)\r\n      {\r\n        //UPDATE \r\n        fd.append('id', id);\r\n        fd.append('cat', 'update');\r\n        props.updateCa(fd)\r\n        \r\n      }else if(termid && parseInt(termid) > 0)\r\n      {\r\n        //INSERT\r\n        fd.append('typeid', groupid);\r\n        fd.append('termid', caid);\r\n        fd.append('cat', 'insert');\r\n        props.registerCa(fd)\r\n      }\r\n      onReset();\r\n    }\r\n  }\r\n  \r\n  \r\n  let deparr = props.dropdowns[0].filter(rw =>parseInt(rw.id) === parseInt(termid) && parseInt(rw.id) > 0);\r\n  let termname = deparr.length > 0 ? deparr[0].name : 'None';\r\n  \r\n  let data = props.cas.cas && Array.isArray(props.cas.cas) ? props.cas.cas.filter(rw =>rw !== null || rw !== undefined) : []\r\n  \r\n  let tabl = data.filter(rw=>rw !== null).map((row, ind)=>{\r\n      return <tr key={ind}>\r\n                <td className='text-center'>{ind + 1}</td>\r\n                <td className='text-left'>{row.name}</td>\r\n                <td className='text-center'>{row.abbrv}</td>\r\n                <td className='text-center'>{row.maxscore}</td>\r\n                <td className='text-center'>\r\n                <CDropdown className=\"m-0 btn-group\">\r\n                  <CDropdownToggle color=\"success\" size=\"sm\">\r\n                  <i className='fa fa-gear'></i> Action\r\n                  </CDropdownToggle>\r\n                  <CDropdownMenu>\r\n                  <CDropdownItem\r\n                      onClick={(item) => history.push(`/sessions/${termid}/a/${caid}/${row.id}`)}\r\n                     > <i className='fa fa-list'></i>  {\" -\"} Sub-items</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onEdit(row)} >Edit</CDropdownItem>\r\n                    <CDropdownItem onClick={()=>onDelete(row.cid, row)}>Delete</CDropdownItem>\r\n                    <CDropdownDivider />\r\n                    <CDropdownItem>Another Action</CDropdownItem>\r\n                  </CDropdownMenu>\r\n                </CDropdown>\r\n                </td>\r\n              </tr>\r\n  })\r\n  return (\r\n    <CRow>\r\n      <CCol >\r\n        <CCard>\r\n          <CCardHeader>\r\n          <CRow>\r\n            <CCol sm=\"5\">\r\n            <h4 id=\"traffic\" className=\"card-title mb-0\">{termname} : <small>Academic Assessment</small></h4>\r\n              <div className=\"small text-muted\" style={{textTransform:'capitalize'}}>{props.school.name}</div>\r\n            </CCol>\r\n            <CCol sm=\"7\" className=\"d-md-block\">\r\n              <CButton \r\n                  data-target='#formz' \r\n                  data-toggle=\"collapse\" \r\n                  color=\"primary\" \r\n                  onClick={toggle}\r\n                  className=\"float-right\">\r\n                <i className='fa fa-plus'></i>\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\"> SN.</th>\r\n                    <th><i className='fa fa-list text-center'></i> ASSESSMENT NAME</th>\r\n                    <th><i className='fa fa-bullseye text-center'></i> ABBRV</th>\r\n                    <th><i className='fa fa-list'></i> MAX SCORE</th>\r\n                    <th><i className='fa fa-gear'></i> ACTION</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tabl}\r\n                 </tbody>\r\n              </table>\r\n          </CCardBody>\r\n        </CCard>\r\n        </CCol>\r\n        <CCollapse show={collapse}>\r\n        <CCol xl={12}  id=\"#formz\">\r\n        <CCard>\r\n            <CCardHeader id='traffic' className=\"card-title mb-0\">\r\n              <CRow>\r\n                <CCol sm=\"6\">\r\n                <h4>{ id && parseInt(id) > 0 ? 'Edit' : 'Add'} <small> CA</small></h4>\r\n                </CCol>\r\n                <CCol sm=\"6\" className=\"d-md-block\">\r\n                  <CButton  \r\n                      color=\"danger\" \r\n                      onClick={onClose}\r\n                      className=\"float-right\">\r\n                    <i className='fa fa-remove'></i>\r\n                  </CButton>\r\n                </CCol>\r\n              </CRow>\r\n              \r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CForm action=\"\" method=\"post\">\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-namez\">Name </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-namez\" \r\n                      name=\"namez\"\r\n                      defaultValue={namez}\r\n                      onChange={(e)=>setNamez(e.target.value)}\r\n                      placeholder=\"First Continious Assessment\" \r\n                    />\r\n                  <CFormText className=\"help-block\">set assessment name</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-abbrv\">Abbreviation </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-abbrv\" \r\n                      name=\"abbrv\"\r\n                      defaultValue={abbrv}\r\n                      onChange={(e)=>setAbbrv(e.target.value)}\r\n                      placeholder=\"CA1\" \r\n                    />\r\n                  <CFormText className=\"help-block\">abbreviate name</CFormText>\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel htmlFor=\"nf-maxscore\">Maximum Score </CLabel>\r\n                  <CInput \r\n                      type=\"text\" \r\n                      id=\"nf-maxscore\" \r\n                      name=\"maxscore\"\r\n                      defaultValue={maxscore}\r\n                      onChange={(e)=>setMaxscore(e.target.value)}\r\n                      placeholder=\"20\" \r\n                    />\r\n                  <CFormText className=\"help-block\">set the maximum score students can attain on this assessment</CFormText>\r\n                </CFormGroup>\r\n                </CForm>\r\n            </CCardBody>\r\n            <CCardFooter>\r\n              <CButton type=\"submit\" onClick={handleSubmit} size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>{' '}\r\n              <CButton type=\"reset\" onClick={onReset} size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n          </CCard>\r\n      </CCol>\r\n      </CCollapse>\r\n    </CRow>\r\n  )\r\n}\r\nconst mapStateToProps = (state) =>({\r\n  cas : state.caReducer,\r\n  terms : state.termReducer.terms,\r\n  claszs : state.claszReducer.claszs,\r\n  staffs : state.staffReducer.staffs,\r\n  school : state.schoolReducer.school,\r\n  dropdowns : state.schoolReducer.dropdowns\r\n})\r\nexport default connect(mapStateToProps, {\r\n  getStaffs,\r\n  getCas,\r\n  getCa,\r\n  registerCa,\r\n  updateCa,\r\n  deleteCa,\r\n  getClaszs\r\n})(Ca)\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport {\r\n    STAFF_GET_ONE,\r\n    STAFF_GET_MULTIPLE,\r\n    STAFF_GET_ALL,\r\n    STAFF_GET_BIRTHDAY,\r\n    STAFF_GET_SEARCH,\r\n    STAFF_REGISTER_SUCCESS,\r\n    STAFF_REGISTER_FAIL,\r\n    STAFF_LOADING,\r\n    STAFF_LOADING_ERROR,\r\n    STAFF_UPDATE_SUCCESS,\r\n    STAFF_UPDATE_FAIL,\r\n    STAFF_DELETE_SUCCESS,\r\n    STAFF_DELETE_FAIL\r\n} from \"./../../types/staff/staff\";\r\nimport { MAIN_TOKEN, API_PATH_STAFF, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'staffs';\r\nconst path = API_PATH_STAFF;\r\n\r\n//GET ALL STAFF \r\nexport const getStaffs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET ALL STAFF \r\nexport const getStaffAll = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                      \r\n                dispatch({\r\n                    type: STAFF_GET_ALL,\r\n                    payload: res.data\r\n                 })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                   type : STAFF_LOADING_ERROR,\r\n                   payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const searchStaff = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_SEARCH,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\nexport const birthday = params => (dispatch, getState) => {\r\n\r\n    dispatch({type : STAFF_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: STAFF_GET_BIRTHDAY,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : STAFF_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n\r\n//GET SINGLE STAFF \r\nexport const getStaff = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : STAFF_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//STAFF DELETE\r\nexport const deleteStaff = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//STAFF REGISTER\r\nexport const registerStaff = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //STAFF UPDATE\r\nexport const updateStaff = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: STAFF_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : STAFF_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    CLASZ_GET_ONE,\r\n    CLASZ_GET_MULTIPLE,\r\n    CLASZ_REGISTER_SUCCESS,\r\n    CLASZ_REGISTER_FAIL,\r\n    CLASZ_LOADING,\r\n    CLASZ_LOADING_ERROR,\r\n    CLASZ_UPDATE_SUCCESS,\r\n    CLASZ_UPDATE_FAIL,\r\n    CLASZ_DELETE_SUCCESS,\r\n    CLASZ_DELETE_FAIL\r\n} from \"../../types/setting/clasz\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'claszs';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CLASZ \r\nexport const getClaszs = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n    params.table = TABLE_NAME;\r\n\r\n    dispatch({type : CLASZ_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CLASZ_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CLASZ_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CLASZ \r\nexport const getClasz = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CLASZ_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CLASZ DELETE\r\nexport const deleteClasz = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CLASZ REGISTER\r\nexport const registerClasz = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CLASZ UPDATE\r\nexport const updateClasz = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CLASZ_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CLASZ_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n    CA_GET_ONE,\r\n    CA_GET_MULTIPLE,\r\n    CA_REGISTER_SUCCESS,\r\n    CA_REGISTER_FAIL,\r\n    CA_LOADING,\r\n    CA_LOADING_ERROR,\r\n    CA_UPDATE_SUCCESS,\r\n    CA_UPDATE_FAIL,\r\n    CA_DELETE_SUCCESS,\r\n    CA_DELETE_FAIL\r\n} from \"../../types/setting/ca\";\r\nimport { MAIN_TOKEN, API_PATH_SETTING, axiosConfig1, axiosConfig } from './../common';\r\n\r\nlet TABLE_NAME = 'cas';\r\nconst path = API_PATH_SETTING;\r\n\r\n//GET ALL CA \r\nexport const getCas = params => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    params.token = MAIN_TOKEN;\r\n\r\n    dispatch({type : CA_LOADING});\r\n        axios.get(path, {params}, axiosConfig)\r\n            .then(res => {                                                                                                                                                                                                                                        \r\n                dispatch({\r\n                    type: CA_GET_MULTIPLE,\r\n                    payload: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type : CA_LOADING_ERROR,\r\n                    payload:err\r\n                })\r\n            })\r\n};\r\n//GET SINGLE CA \r\nexport const getCa = id => (dispatch, getState) => {\r\n    //SET PAGE LOADING\r\n    dispatch(\r\n        {\r\n        type : CA_GET_ONE,\r\n        payload: id\r\n    });  \r\n};\r\n//CA DELETE\r\nexport const deleteCa = params => (dispatch, getState) =>{\r\n    axios.POST(path, {params}, axiosConfig)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_DELETE_SUCCESS,\r\n                payload: params.id\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_DELETE_FAIL,\r\n                payload : err\r\n            })\r\n        })\r\n        \r\n}\r\n//CA REGISTER\r\nexport const registerCa = data => dispatch => {\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_REGISTER_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_REGISTER_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n //CA UPDATE\r\nexport const updateCa = (data) => (dispatch, getState) => {\r\n    //body\r\n    axios.post(path, data, axiosConfig1)\r\n        .then(res => {\r\n            dispatch({\r\n                type: CA_UPDATE_SUCCESS,\r\n                payload: res.data.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type : CA_UPDATE_FAIL,\r\n                payload: err\r\n            })\r\n        })\r\n};\r\n"],"sourceRoot":""}